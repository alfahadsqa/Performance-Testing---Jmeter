/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 1915828.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 27.0], [5.5, 82.0], [5.6, 82.0], [5.7, 83.0], [5.8, 84.0], [5.9, 84.0], [6.0, 85.0], [6.1, 86.0], [6.2, 86.0], [6.3, 87.0], [6.4, 88.0], [6.5, 88.0], [6.6, 89.0], [6.7, 90.0], [6.8, 90.0], [6.9, 90.0], [7.0, 91.0], [7.1, 92.0], [7.2, 92.0], [7.3, 94.0], [7.4, 96.0], [7.5, 98.0], [7.6, 99.0], [7.7, 103.0], [7.8, 103.0], [7.9, 105.0], [8.0, 106.0], [8.1, 108.0], [8.2, 110.0], [8.3, 110.0], [8.4, 111.0], [8.5, 113.0], [8.6, 114.0], [8.7, 116.0], [8.8, 117.0], [8.9, 118.0], [9.0, 120.0], [9.1, 120.0], [9.2, 122.0], [9.3, 123.0], [9.4, 123.0], [9.5, 125.0], [9.6, 126.0], [9.7, 127.0], [9.8, 128.0], [9.9, 129.0], [10.0, 130.0], [10.1, 132.0], [10.2, 133.0], [10.3, 135.0], [10.4, 136.0], [10.5, 137.0], [10.6, 139.0], [10.7, 139.0], [10.8, 141.0], [10.9, 142.0], [11.0, 143.0], [11.1, 144.0], [11.2, 147.0], [11.3, 147.0], [11.4, 150.0], [11.5, 150.0], [11.6, 153.0], [11.7, 155.0], [11.8, 156.0], [11.9, 463.0], [12.0, 731.0], [12.1, 921.0], [12.2, 1011.0], [12.3, 1203.0], [12.4, 1302.0], [12.5, 1330.0], [12.6, 1359.0], [12.7, 1373.0], [12.8, 1432.0], [12.9, 1451.0], [13.0, 1605.0], [13.1, 1607.0], [13.2, 1617.0], [13.3, 1652.0], [13.4, 1671.0], [13.5, 1690.0], [13.6, 1714.0], [13.7, 1716.0], [13.8, 1729.0], [13.9, 1744.0], [14.0, 1753.0], [14.1, 1760.0], [14.2, 1771.0], [14.3, 1783.0], [14.4, 1842.0], [14.5, 1879.0], [14.6, 1921.0], [14.7, 1959.0], [14.8, 2005.0], [14.9, 2017.0], [15.0, 2051.0], [15.1, 2054.0], [15.2, 2072.0], [15.3, 2084.0], [15.4, 2092.0], [15.5, 2100.0], [15.6, 2111.0], [15.7, 2116.0], [15.8, 2135.0], [15.9, 2146.0], [16.0, 2151.0], [16.1, 2157.0], [16.2, 2164.0], [16.3, 2166.0], [16.4, 2171.0], [16.5, 2184.0], [16.6, 2200.0], [16.7, 2201.0], [16.8, 2213.0], [16.9, 2218.0], [17.0, 2231.0], [17.1, 2233.0], [17.2, 2252.0], [17.3, 2255.0], [17.4, 2261.0], [17.5, 2263.0], [17.6, 2280.0], [17.7, 2281.0], [17.8, 2290.0], [17.9, 2328.0], [18.0, 6077.0], [18.1, 6201.0], [18.2, 6385.0], [18.3, 6455.0], [18.4, 6487.0], [18.5, 9226.0], [18.6, 9355.0], [18.7, 9374.0], [18.8, 9386.0], [18.9, 9674.0], [19.0, 13388.0], [19.1, 13457.0], [19.2, 14375.0], [19.3, 14562.0], [19.4, 15004.0], [19.5, 15138.0], [19.6, 15258.0], [19.7, 15529.0], [19.8, 15655.0], [19.9, 15685.0], [20.0, 15736.0], [20.1, 15855.0], [20.2, 16010.0], [20.3, 16045.0], [20.4, 16086.0], [20.5, 16141.0], [20.6, 16286.0], [20.7, 16422.0], [20.8, 16508.0], [20.9, 16563.0], [21.0, 16656.0], [21.1, 16861.0], [21.2, 16960.0], [21.3, 16990.0], [21.4, 17196.0], [21.5, 17270.0], [21.6, 17384.0], [21.7, 17415.0], [21.8, 17452.0], [21.9, 17488.0], [22.0, 17510.0], [22.1, 17568.0], [22.2, 17667.0], [22.3, 17676.0], [22.4, 17791.0], [22.5, 17824.0], [22.6, 17945.0], [22.7, 18018.0], [22.8, 18059.0], [22.9, 18171.0], [23.0, 18201.0], [23.1, 18210.0], [23.2, 18231.0], [23.3, 18245.0], [23.4, 18305.0], [23.5, 18358.0], [23.6, 18433.0], [23.7, 18458.0], [23.8, 18539.0], [23.9, 18542.0], [24.0, 18583.0], [24.1, 18608.0], [24.2, 18694.0], [24.3, 18747.0], [24.4, 18815.0], [24.5, 18841.0], [24.6, 18852.0], [24.7, 18895.0], [24.8, 18949.0], [24.9, 18963.0], [25.0, 19001.0], [25.1, 19052.0], [25.2, 19101.0], [25.3, 19130.0], [25.4, 19242.0], [25.5, 19313.0], [25.6, 19333.0], [25.7, 19353.0], [25.8, 19423.0], [25.9, 19500.0], [26.0, 19542.0], [26.1, 19592.0], [26.2, 19702.0], [26.3, 19732.0], [26.4, 19778.0], [26.5, 19796.0], [26.6, 19809.0], [26.7, 19916.0], [26.8, 19941.0], [26.9, 19948.0], [27.0, 19978.0], [27.1, 19982.0], [27.2, 19995.0], [27.3, 20085.0], [27.4, 20123.0], [27.5, 20183.0], [27.6, 20261.0], [27.7, 20317.0], [27.8, 20376.0], [27.9, 20402.0], [28.0, 20438.0], [28.1, 20475.0], [28.2, 20573.0], [28.3, 20603.0], [28.4, 20639.0], [28.5, 20649.0], [28.6, 20662.0], [28.7, 20677.0], [28.8, 20690.0], [28.9, 20729.0], [29.0, 20760.0], [29.1, 20786.0], [29.2, 20908.0], [29.3, 20924.0], [29.4, 20954.0], [29.5, 20992.0], [29.6, 21199.0], [29.7, 21209.0], [29.8, 21322.0], [29.9, 21371.0], [30.0, 21398.0], [30.1, 21415.0], [30.2, 21440.0], [30.3, 21507.0], [30.4, 21589.0], [30.5, 21650.0], [30.6, 21668.0], [30.7, 21696.0], [30.8, 21720.0], [30.9, 21740.0], [31.0, 21755.0], [31.1, 21787.0], [31.2, 21803.0], [31.3, 21817.0], [31.4, 21847.0], [31.5, 21892.0], [31.6, 21937.0], [31.7, 21941.0], [31.8, 21953.0], [31.9, 21969.0], [32.0, 22006.0], [32.1, 22020.0], [32.2, 22043.0], [32.3, 22051.0], [32.4, 22068.0], [32.5, 22083.0], [32.6, 22108.0], [32.7, 22113.0], [32.8, 22126.0], [32.9, 22132.0], [33.0, 22148.0], [33.1, 22164.0], [33.2, 22167.0], [33.3, 22177.0], [33.4, 22203.0], [33.5, 22210.0], [33.6, 22233.0], [33.7, 22248.0], [33.8, 22267.0], [33.9, 22271.0], [34.0, 22294.0], [34.1, 22299.0], [34.2, 22316.0], [34.3, 22345.0], [34.4, 22457.0], [34.5, 22491.0], [34.6, 22593.0], [34.7, 22650.0], [34.8, 22712.0], [34.9, 22843.0], [35.0, 22879.0], [35.1, 22935.0], [35.2, 23022.0], [35.3, 23113.0], [35.4, 23157.0], [35.5, 23179.0], [35.6, 23194.0], [35.7, 23207.0], [35.8, 23309.0], [35.9, 23316.0], [36.0, 23339.0], [36.1, 23356.0], [36.2, 23405.0], [36.3, 23416.0], [36.4, 23463.0], [36.5, 23523.0], [36.6, 23546.0], [36.7, 23594.0], [36.8, 23654.0], [36.9, 23665.0], [37.0, 23732.0], [37.1, 23747.0], [37.2, 23776.0], [37.3, 23800.0], [37.4, 23818.0], [37.5, 23853.0], [37.6, 23874.0], [37.7, 23901.0], [37.8, 23923.0], [37.9, 23960.0], [38.0, 24027.0], [38.1, 24038.0], [38.2, 24087.0], [38.3, 24130.0], [38.4, 24161.0], [38.5, 24207.0], [38.6, 24256.0], [38.7, 24266.0], [38.8, 24379.0], [38.9, 24399.0], [39.0, 24417.0], [39.1, 24432.0], [39.2, 24526.0], [39.3, 24529.0], [39.4, 24564.0], [39.5, 24610.0], [39.6, 24652.0], [39.7, 24677.0], [39.8, 24752.0], [39.9, 24838.0], [40.0, 24867.0], [40.1, 24891.0], [40.2, 24928.0], [40.3, 24947.0], [40.4, 25050.0], [40.5, 25068.0], [40.6, 25149.0], [40.7, 25157.0], [40.8, 25177.0], [40.9, 25198.0], [41.0, 25242.0], [41.1, 25260.0], [41.2, 25308.0], [41.3, 25327.0], [41.4, 25373.0], [41.5, 25379.0], [41.6, 25391.0], [41.7, 25406.0], [41.8, 25453.0], [41.9, 25505.0], [42.0, 25534.0], [42.1, 25539.0], [42.2, 25610.0], [42.3, 25640.0], [42.4, 25660.0], [42.5, 25674.0], [42.6, 25683.0], [42.7, 25702.0], [42.8, 25821.0], [42.9, 25874.0], [43.0, 25964.0], [43.1, 25981.0], [43.2, 26052.0], [43.3, 26123.0], [43.4, 26156.0], [43.5, 26161.0], [43.6, 26301.0], [43.7, 26374.0], [43.8, 26410.0], [43.9, 26413.0], [44.0, 26460.0], [44.1, 26542.0], [44.2, 26659.0], [44.3, 26692.0], [44.4, 26732.0], [44.5, 26774.0], [44.6, 26818.0], [44.7, 26838.0], [44.8, 26877.0], [44.9, 26907.0], [45.0, 26974.0], [45.1, 27016.0], [45.2, 27093.0], [45.3, 27147.0], [45.4, 27217.0], [45.5, 27243.0], [45.6, 27267.0], [45.7, 27280.0], [45.8, 27302.0], [45.9, 27329.0], [46.0, 27351.0], [46.1, 27378.0], [46.2, 27477.0], [46.3, 27497.0], [46.4, 27522.0], [46.5, 27551.0], [46.6, 27603.0], [46.7, 27697.0], [46.8, 27728.0], [46.9, 27769.0], [47.0, 27800.0], [47.1, 27810.0], [47.2, 27864.0], [47.3, 27874.0], [47.4, 27899.0], [47.5, 27967.0], [47.6, 28085.0], [47.7, 28129.0], [47.8, 28145.0], [47.9, 28187.0], [48.0, 28247.0], [48.1, 28266.0], [48.2, 28321.0], [48.3, 28344.0], [48.4, 28358.0], [48.5, 28376.0], [48.6, 28399.0], [48.7, 28412.0], [48.8, 28429.0], [48.9, 28461.0], [49.0, 28475.0], [49.1, 28483.0], [49.2, 28526.0], [49.3, 28578.0], [49.4, 28627.0], [49.5, 28645.0], [49.6, 28658.0], [49.7, 28666.0], [49.8, 28721.0], [49.9, 28750.0], [50.0, 28794.0], [50.1, 28852.0], [50.2, 28930.0], [50.3, 28951.0], [50.4, 28962.0], [50.5, 28979.0], [50.6, 29018.0], [50.7, 29027.0], [50.8, 29065.0], [50.9, 29069.0], [51.0, 29101.0], [51.1, 29116.0], [51.2, 29135.0], [51.3, 29152.0], [51.4, 29181.0], [51.5, 29209.0], [51.6, 29261.0], [51.7, 29281.0], [51.8, 29339.0], [51.9, 29346.0], [52.0, 29374.0], [52.1, 29388.0], [52.2, 29466.0], [52.3, 29477.0], [52.4, 29515.0], [52.5, 29558.0], [52.6, 29584.0], [52.7, 29606.0], [52.8, 29614.0], [52.9, 29639.0], [53.0, 29665.0], [53.1, 29677.0], [53.2, 29716.0], [53.3, 29731.0], [53.4, 29740.0], [53.5, 29772.0], [53.6, 29803.0], [53.7, 29810.0], [53.8, 29821.0], [53.9, 29826.0], [54.0, 29851.0], [54.1, 29859.0], [54.2, 29870.0], [54.3, 29878.0], [54.4, 29892.0], [54.5, 29908.0], [54.6, 29949.0], [54.7, 29961.0], [54.8, 29984.0], [54.9, 29990.0], [55.0, 30002.0], [55.1, 30008.0], [55.2, 30023.0], [55.3, 30047.0], [55.4, 30061.0], [55.5, 30070.0], [55.6, 30085.0], [55.7, 30090.0], [55.8, 30102.0], [55.9, 30130.0], [56.0, 30143.0], [56.1, 30194.0], [56.2, 30203.0], [56.3, 30223.0], [56.4, 30248.0], [56.5, 30313.0], [56.6, 30346.0], [56.7, 30356.0], [56.8, 30406.0], [56.9, 30434.0], [57.0, 30450.0], [57.1, 30477.0], [57.2, 30515.0], [57.3, 30541.0], [57.4, 30562.0], [57.5, 30574.0], [57.6, 30604.0], [57.7, 30642.0], [57.8, 30692.0], [57.9, 30715.0], [58.0, 30725.0], [58.1, 30756.0], [58.2, 30780.0], [58.3, 30801.0], [58.4, 30813.0], [58.5, 30852.0], [58.6, 30907.0], [58.7, 30925.0], [58.8, 30936.0], [58.9, 30945.0], [59.0, 30974.0], [59.1, 31002.0], [59.2, 31047.0], [59.3, 31062.0], [59.4, 31076.0], [59.5, 31083.0], [59.6, 31093.0], [59.7, 31163.0], [59.8, 31179.0], [59.9, 31210.0], [60.0, 31225.0], [60.1, 31300.0], [60.2, 31355.0], [60.3, 31369.0], [60.4, 31411.0], [60.5, 31433.0], [60.6, 31471.0], [60.7, 31497.0], [60.8, 31543.0], [60.9, 31545.0], [61.0, 31599.0], [61.1, 31610.0], [61.2, 31655.0], [61.3, 31689.0], [61.4, 31717.0], [61.5, 31722.0], [61.6, 31763.0], [61.7, 31836.0], [61.8, 31857.0], [61.9, 31898.0], [62.0, 31922.0], [62.1, 31957.0], [62.2, 31990.0], [62.3, 32014.0], [62.4, 32146.0], [62.5, 32163.0], [62.6, 32194.0], [62.7, 32217.0], [62.8, 32238.0], [62.9, 32255.0], [63.0, 32275.0], [63.1, 32319.0], [63.2, 32375.0], [63.3, 32419.0], [63.4, 32491.0], [63.5, 32539.0], [63.6, 32573.0], [63.7, 32612.0], [63.8, 32676.0], [63.9, 32732.0], [64.0, 32766.0], [64.1, 32786.0], [64.2, 32803.0], [64.3, 32816.0], [64.4, 32860.0], [64.5, 32877.0], [64.6, 32904.0], [64.7, 32933.0], [64.8, 32944.0], [64.9, 32986.0], [65.0, 33027.0], [65.1, 33094.0], [65.2, 33146.0], [65.3, 33226.0], [65.4, 33231.0], [65.5, 33250.0], [65.6, 33295.0], [65.7, 33316.0], [65.8, 33351.0], [65.9, 33352.0], [66.0, 33378.0], [66.1, 33383.0], [66.2, 33433.0], [66.3, 33444.0], [66.4, 33591.0], [66.5, 33597.0], [66.6, 33643.0], [66.7, 33649.0], [66.8, 33691.0], [66.9, 33715.0], [67.0, 33722.0], [67.1, 33739.0], [67.2, 33788.0], [67.3, 33864.0], [67.4, 33890.0], [67.5, 33917.0], [67.6, 33969.0], [67.7, 33979.0], [67.8, 34007.0], [67.9, 34025.0], [68.0, 34055.0], [68.1, 34115.0], [68.2, 34151.0], [68.3, 34160.0], [68.4, 34200.0], [68.5, 34236.0], [68.6, 34250.0], [68.7, 34259.0], [68.8, 34268.0], [68.9, 34279.0], [69.0, 34306.0], [69.1, 34311.0], [69.2, 34356.0], [69.3, 34363.0], [69.4, 34389.0], [69.5, 34447.0], [69.6, 34471.0], [69.7, 34495.0], [69.8, 34590.0], [69.9, 34623.0], [70.0, 34635.0], [70.1, 34643.0], [70.2, 34692.0], [70.3, 34722.0], [70.4, 34740.0], [70.5, 34827.0], [70.6, 34877.0], [70.7, 34997.0], [70.8, 35034.0], [70.9, 35043.0], [71.0, 35114.0], [71.1, 35145.0], [71.2, 35208.0], [71.3, 35232.0], [71.4, 35273.0], [71.5, 35340.0], [71.6, 35364.0], [71.7, 35399.0], [71.8, 35479.0], [71.9, 35530.0], [72.0, 35569.0], [72.1, 35666.0], [72.2, 35702.0], [72.3, 35794.0], [72.4, 35859.0], [72.5, 35947.0], [72.6, 35990.0], [72.7, 36017.0], [72.8, 36067.0], [72.9, 36125.0], [73.0, 36222.0], [73.1, 36255.0], [73.2, 36308.0], [73.3, 36365.0], [73.4, 36426.0], [73.5, 36506.0], [73.6, 36702.0], [73.7, 36725.0], [73.8, 36794.0], [73.9, 36898.0], [74.0, 37021.0], [74.1, 37239.0], [74.2, 37282.0], [74.3, 37322.0], [74.4, 37398.0], [74.5, 37454.0], [74.6, 37578.0], [74.7, 37664.0], [74.8, 37840.0], [74.9, 37935.0], [75.0, 38007.0], [75.1, 38083.0], [75.2, 38123.0], [75.3, 38230.0], [75.4, 38251.0], [75.5, 38314.0], [75.6, 38322.0], [75.7, 38357.0], [75.8, 38406.0], [75.9, 38527.0], [76.0, 38610.0], [76.1, 38697.0], [76.2, 38713.0], [76.3, 38772.0], [76.4, 38798.0], [76.5, 38925.0], [76.6, 38957.0], [76.7, 39020.0], [76.8, 39080.0], [76.9, 39191.0], [77.0, 39316.0], [77.1, 39467.0], [77.2, 39524.0], [77.3, 39612.0], [77.4, 39691.0], [77.5, 39890.0], [77.6, 40012.0], [77.7, 40272.0], [77.8, 40290.0], [77.9, 40415.0], [78.0, 40451.0], [78.1, 40778.0], [78.2, 41054.0], [78.3, 41181.0], [78.4, 41263.0], [78.5, 41788.0], [78.6, 41997.0], [78.7, 42079.0], [78.8, 42144.0], [78.9, 42289.0], [79.0, 42399.0], [79.1, 42752.0], [79.2, 42802.0], [79.3, 42913.0], [79.4, 43007.0], [79.5, 43112.0], [79.6, 43268.0], [79.7, 43396.0], [79.8, 43449.0], [79.9, 43560.0], [80.0, 43615.0], [80.1, 43784.0], [80.2, 44172.0], [80.3, 44387.0], [80.4, 44539.0], [80.5, 44720.0], [80.6, 44765.0], [80.7, 44876.0], [80.8, 45102.0], [80.9, 45274.0], [81.0, 45327.0], [81.1, 45520.0], [81.2, 45592.0], [81.3, 45662.0], [81.4, 45752.0], [81.5, 45949.0], [81.6, 45977.0], [81.7, 46143.0], [81.8, 46317.0], [81.9, 46430.0], [82.0, 46543.0], [82.1, 46828.0], [82.2, 46860.0], [82.3, 47069.0], [82.4, 47175.0], [82.5, 47277.0], [82.6, 47349.0], [82.7, 47647.0], [82.8, 47713.0], [82.9, 47837.0], [83.0, 47915.0], [83.1, 48044.0], [83.2, 48115.0], [83.3, 48216.0], [83.4, 48318.0], [83.5, 48515.0], [83.6, 48740.0], [83.7, 48944.0], [83.8, 48955.0], [83.9, 49050.0], [84.0, 49106.0], [84.1, 49152.0], [84.2, 49216.0], [84.3, 49394.0], [84.4, 49620.0], [84.5, 49724.0], [84.6, 49799.0], [84.7, 49927.0], [84.8, 49965.0], [84.9, 50121.0], [85.0, 50132.0], [85.1, 50303.0], [85.2, 50424.0], [85.3, 50557.0], [85.4, 50593.0], [85.5, 50678.0], [85.6, 50718.0], [85.7, 50751.0], [85.8, 50794.0], [85.9, 50935.0], [86.0, 50977.0], [86.1, 51017.0], [86.2, 51053.0], [86.3, 51082.0], [86.4, 51158.0], [86.5, 51244.0], [86.6, 51248.0], [86.7, 51410.0], [86.8, 51439.0], [86.9, 51510.0], [87.0, 51596.0], [87.1, 51634.0], [87.2, 51708.0], [87.3, 51756.0], [87.4, 51810.0], [87.5, 51824.0], [87.6, 51964.0], [87.7, 52221.0], [87.8, 52445.0], [87.9, 52548.0], [88.0, 52649.0], [88.1, 52699.0], [88.2, 52746.0], [88.3, 52941.0], [88.4, 53118.0], [88.5, 53255.0], [88.6, 53299.0], [88.7, 53375.0], [88.8, 53402.0], [88.9, 53563.0], [89.0, 53710.0], [89.1, 53871.0], [89.2, 54108.0], [89.3, 54337.0], [89.4, 54449.0], [89.5, 54501.0], [89.6, 54580.0], [89.7, 54611.0], [89.8, 54756.0], [89.9, 54928.0], [90.0, 54955.0], [90.1, 55012.0], [90.2, 55055.0], [90.3, 55119.0], [90.4, 55348.0], [90.5, 55455.0], [90.6, 55693.0], [90.7, 55853.0], [90.8, 55878.0], [90.9, 55994.0], [91.0, 56047.0], [91.1, 56154.0], [91.2, 56357.0], [91.3, 56391.0], [91.4, 56456.0], [91.5, 56477.0], [91.6, 56499.0], [91.7, 56661.0], [91.8, 56708.0], [91.9, 56800.0], [92.0, 56821.0], [92.1, 57038.0], [92.2, 57260.0], [92.3, 57384.0], [92.4, 57408.0], [92.5, 57519.0], [92.6, 57693.0], [92.7, 57725.0], [92.8, 57802.0], [92.9, 58004.0], [93.0, 58283.0], [93.1, 58457.0], [93.2, 58552.0], [93.3, 58720.0], [93.4, 58818.0], [93.5, 59117.0], [93.6, 59417.0], [93.7, 59662.0], [93.8, 59699.0], [93.9, 59822.0], [94.0, 59967.0], [94.1, 60420.0], [94.2, 60475.0], [94.3, 60682.0], [94.4, 60913.0], [94.5, 61069.0], [94.6, 61096.0], [94.7, 61378.0], [94.8, 61458.0], [94.9, 61841.0], [95.0, 62144.0], [95.1, 62582.0], [95.2, 62852.0], [95.3, 63344.0], [95.4, 63531.0], [95.5, 63641.0], [95.6, 63972.0], [95.7, 64408.0], [95.8, 64976.0], [95.9, 65897.0], [96.0, 66137.0], [96.1, 66569.0], [96.2, 66981.0], [96.3, 67519.0], [96.4, 68607.0], [96.5, 1788610.0], [96.6, 1789822.0], [96.7, 1791223.0], [96.8, 1792267.0], [96.9, 1794607.0], [97.0, 1795219.0], [97.1, 1798962.0], [97.2, 1799522.0], [97.3, 1801291.0], [97.4, 1802498.0], [97.5, 1803887.0], [97.6, 1805513.0], [97.7, 1806350.0], [97.8, 1807563.0], [97.9, 1809187.0], [98.0, 1809776.0], [98.1, 1811700.0], [98.2, 1812931.0], [98.3, 1815116.0], [98.4, 1816320.0], [98.5, 1818919.0], [98.6, 1819713.0], [98.7, 1821809.0], [98.8, 1822643.0], [98.9, 1825302.0], [99.0, 1826676.0], [99.1, 1827805.0], [99.2, 1828616.0], [99.3, 1831102.0], [99.4, 1831940.0], [99.5, 1835883.0], [99.6, 1836650.0], [99.7, 1840242.0], [99.8, 1840807.0], [99.9, 1843562.0], [100.0, 1844113.0]], "isOverall": false, "label": "login ", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 88.0], [12.0, 89.0], [12.1, 89.0], [12.2, 90.0], [12.3, 90.0], [12.4, 90.0], [12.5, 90.0], [12.6, 91.0], [12.7, 91.0], [12.8, 91.0], [12.9, 91.0], [13.0, 92.0], [13.1, 93.0], [13.2, 96.0], [13.3, 97.0], [13.4, 100.0], [13.5, 104.0], [13.6, 106.0], [13.7, 107.0], [13.8, 110.0], [13.9, 111.0], [14.0, 115.0], [14.1, 117.0], [14.2, 118.0], [14.3, 119.0], [14.4, 121.0], [14.5, 126.0], [14.6, 131.0], [14.7, 136.0], [14.8, 144.0], [14.9, 148.0], [15.0, 151.0], [15.1, 155.0], [15.2, 155.0], [15.3, 155.0], [15.4, 156.0], [15.5, 10392.0], [15.6, 11514.0], [15.7, 13502.0], [15.8, 14644.0], [15.9, 17352.0], [16.0, 18868.0], [16.1, 21032.0], [16.2, 22260.0], [16.3, 23442.0], [16.4, 25414.0], [16.5, 26410.0], [16.6, 27810.0], [16.7, 28659.0], [16.8, 31782.0], [16.9, 32371.0], [17.0, 34382.0], [17.1, 34890.0], [17.2, 38128.0], [17.3, 38625.0], [17.4, 40720.0], [17.5, 41862.0], [17.6, 44297.0], [17.7, 44970.0], [17.8, 47240.0], [17.9, 47729.0], [18.0, 49666.0], [18.1, 50579.0], [18.2, 52646.0], [18.3, 53862.0], [18.4, 54784.0], [18.5, 56789.0], [18.6, 57905.0], [18.7, 59068.0], [18.8, 61204.0], [18.9, 63070.0], [19.0, 66716.0], [19.1, 66959.0], [19.2, 69610.0], [19.3, 70330.0], [19.4, 72554.0], [19.5, 73356.0], [19.6, 76485.0], [19.7, 76673.0], [19.8, 78467.0], [19.9, 79715.0], [20.0, 81367.0], [20.1, 81922.0], [20.2, 84338.0], [20.3, 85019.0], [20.4, 86947.0], [20.5, 87896.0], [20.6, 89168.0], [20.7, 90120.0], [20.8, 90985.0], [20.9, 91610.0], [21.0, 92710.0], [21.1, 93038.0], [21.2, 93549.0], [21.3, 93681.0], [21.4, 94322.0], [21.5, 94540.0], [21.6, 94995.0], [21.7, 95416.0], [21.8, 95915.0], [21.9, 96071.0], [22.0, 96417.0], [22.1, 96765.0], [22.2, 96882.0], [22.3, 97095.0], [22.4, 97246.0], [22.5, 97371.0], [22.6, 97441.0], [22.7, 97704.0], [22.8, 98021.0], [22.9, 98105.0], [23.0, 98583.0], [23.1, 99020.0], [23.2, 99133.0], [23.3, 99267.0], [23.4, 99529.0], [23.5, 99776.0], [23.6, 99875.0], [23.7, 100052.0], [23.8, 100350.0], [23.9, 100369.0], [24.0, 100431.0], [24.1, 100442.0], [24.2, 100565.0], [24.3, 100599.0], [24.4, 100826.0], [24.5, 101078.0], [24.6, 101378.0], [24.7, 101441.0], [24.8, 101802.0], [24.9, 101848.0], [25.0, 102130.0], [25.1, 102219.0], [25.2, 102272.0], [25.3, 102485.0], [25.4, 102542.0], [25.5, 102592.0], [25.6, 102776.0], [25.7, 102923.0], [25.8, 103121.0], [25.9, 103246.0], [26.0, 103497.0], [26.1, 103653.0], [26.2, 103814.0], [26.3, 103909.0], [26.4, 104096.0], [26.5, 104216.0], [26.6, 104420.0], [26.7, 104439.0], [26.8, 104534.0], [26.9, 104604.0], [27.0, 104709.0], [27.1, 104832.0], [27.2, 104859.0], [27.3, 104878.0], [27.4, 104962.0], [27.5, 105044.0], [27.6, 105131.0], [27.7, 105195.0], [27.8, 105368.0], [27.9, 105439.0], [28.0, 105461.0], [28.1, 105544.0], [28.2, 105576.0], [28.3, 105662.0], [28.4, 105718.0], [28.5, 105797.0], [28.6, 105918.0], [28.7, 105957.0], [28.8, 106085.0], [28.9, 106103.0], [29.0, 106283.0], [29.1, 106306.0], [29.2, 106405.0], [29.3, 106521.0], [29.4, 106566.0], [29.5, 106619.0], [29.6, 106778.0], [29.7, 106851.0], [29.8, 106982.0], [29.9, 106995.0], [30.0, 107095.0], [30.1, 107111.0], [30.2, 107180.0], [30.3, 107342.0], [30.4, 107474.0], [30.5, 107547.0], [30.6, 107614.0], [30.7, 107661.0], [30.8, 107705.0], [30.9, 107948.0], [31.0, 108001.0], [31.1, 108042.0], [31.2, 108191.0], [31.3, 108423.0], [31.4, 108477.0], [31.5, 108548.0], [31.6, 108707.0], [31.7, 108730.0], [31.8, 108758.0], [31.9, 108780.0], [32.0, 108828.0], [32.1, 108891.0], [32.2, 109091.0], [32.3, 109255.0], [32.4, 109330.0], [32.5, 109364.0], [32.6, 109488.0], [32.7, 109583.0], [32.8, 109644.0], [32.9, 109750.0], [33.0, 109830.0], [33.1, 109934.0], [33.2, 110071.0], [33.3, 110129.0], [33.4, 110341.0], [33.5, 110432.0], [33.6, 110468.0], [33.7, 110515.0], [33.8, 110605.0], [33.9, 110624.0], [34.0, 110779.0], [34.1, 110880.0], [34.2, 111043.0], [34.3, 111147.0], [34.4, 111320.0], [34.5, 111442.0], [34.6, 111533.0], [34.7, 111618.0], [34.8, 111739.0], [34.9, 111752.0], [35.0, 111807.0], [35.1, 111870.0], [35.2, 111924.0], [35.3, 112030.0], [35.4, 112103.0], [35.5, 112244.0], [35.6, 112294.0], [35.7, 112331.0], [35.8, 112401.0], [35.9, 112535.0], [36.0, 112640.0], [36.1, 112717.0], [36.2, 112780.0], [36.3, 112912.0], [36.4, 113026.0], [36.5, 113250.0], [36.6, 113376.0], [36.7, 113564.0], [36.8, 113772.0], [36.9, 114063.0], [37.0, 114243.0], [37.1, 114267.0], [37.2, 114398.0], [37.3, 114452.0], [37.4, 114538.0], [37.5, 114675.0], [37.6, 114763.0], [37.7, 114855.0], [37.8, 114983.0], [37.9, 114989.0], [38.0, 115069.0], [38.1, 115094.0], [38.2, 115245.0], [38.3, 115277.0], [38.4, 115383.0], [38.5, 115470.0], [38.6, 115652.0], [38.7, 115687.0], [38.8, 115716.0], [38.9, 115749.0], [39.0, 115776.0], [39.1, 115816.0], [39.2, 115870.0], [39.3, 115897.0], [39.4, 115969.0], [39.5, 116081.0], [39.6, 116194.0], [39.7, 116266.0], [39.8, 116314.0], [39.9, 116465.0], [40.0, 116567.0], [40.1, 116668.0], [40.2, 116891.0], [40.3, 117011.0], [40.4, 117050.0], [40.5, 117108.0], [40.6, 117168.0], [40.7, 117181.0], [40.8, 117266.0], [40.9, 117282.0], [41.0, 117399.0], [41.1, 117430.0], [41.2, 117461.0], [41.3, 117551.0], [41.4, 117639.0], [41.5, 117716.0], [41.6, 117816.0], [41.7, 117835.0], [41.8, 117958.0], [41.9, 118024.0], [42.0, 118108.0], [42.1, 118182.0], [42.2, 118311.0], [42.3, 118439.0], [42.4, 118552.0], [42.5, 118579.0], [42.6, 118716.0], [42.7, 118770.0], [42.8, 118868.0], [42.9, 119033.0], [43.0, 119323.0], [43.1, 119522.0], [43.2, 119712.0], [43.3, 119721.0], [43.4, 119912.0], [43.5, 120001.0], [43.6, 120143.0], [43.7, 120259.0], [43.8, 120328.0], [43.9, 120360.0], [44.0, 120446.0], [44.1, 120495.0], [44.2, 120592.0], [44.3, 120642.0], [44.4, 120808.0], [44.5, 120928.0], [44.6, 120978.0], [44.7, 121016.0], [44.8, 121150.0], [44.9, 121185.0], [45.0, 121308.0], [45.1, 121361.0], [45.2, 121488.0], [45.3, 121608.0], [45.4, 121666.0], [45.5, 121717.0], [45.6, 121837.0], [45.7, 121915.0], [45.8, 122002.0], [45.9, 122030.0], [46.0, 122096.0], [46.1, 122154.0], [46.2, 122298.0], [46.3, 122327.0], [46.4, 122360.0], [46.5, 122425.0], [46.6, 122474.0], [46.7, 122499.0], [46.8, 122594.0], [46.9, 122651.0], [47.0, 122736.0], [47.1, 122984.0], [47.2, 123010.0], [47.3, 123041.0], [47.4, 123109.0], [47.5, 123244.0], [47.6, 123299.0], [47.7, 123312.0], [47.8, 123351.0], [47.9, 123442.0], [48.0, 123497.0], [48.1, 123519.0], [48.2, 123621.0], [48.3, 123637.0], [48.4, 123790.0], [48.5, 123828.0], [48.6, 123872.0], [48.7, 123897.0], [48.8, 123964.0], [48.9, 124032.0], [49.0, 124074.0], [49.1, 124154.0], [49.2, 124235.0], [49.3, 124254.0], [49.4, 124357.0], [49.5, 124447.0], [49.6, 124570.0], [49.7, 124590.0], [49.8, 124665.0], [49.9, 124711.0], [50.0, 124790.0], [50.1, 124865.0], [50.2, 124900.0], [50.3, 124940.0], [50.4, 125015.0], [50.5, 125077.0], [50.6, 125192.0], [50.7, 125203.0], [50.8, 125231.0], [50.9, 125272.0], [51.0, 125323.0], [51.1, 125381.0], [51.2, 125514.0], [51.3, 125614.0], [51.4, 125664.0], [51.5, 125714.0], [51.6, 125781.0], [51.7, 125791.0], [51.8, 125829.0], [51.9, 125907.0], [52.0, 126002.0], [52.1, 126024.0], [52.2, 126087.0], [52.3, 126107.0], [52.4, 126165.0], [52.5, 126202.0], [52.6, 126242.0], [52.7, 126333.0], [52.8, 126360.0], [52.9, 126391.0], [53.0, 126451.0], [53.1, 126525.0], [53.2, 126634.0], [53.3, 126727.0], [53.4, 126873.0], [53.5, 126923.0], [53.6, 126977.0], [53.7, 126989.0], [53.8, 127020.0], [53.9, 127102.0], [54.0, 127195.0], [54.1, 127219.0], [54.2, 127339.0], [54.3, 127384.0], [54.4, 127422.0], [54.5, 127444.0], [54.6, 127466.0], [54.7, 127518.0], [54.8, 127554.0], [54.9, 127605.0], [55.0, 127627.0], [55.1, 127680.0], [55.2, 127696.0], [55.3, 127703.0], [55.4, 127806.0], [55.5, 127818.0], [55.6, 127888.0], [55.7, 127922.0], [55.8, 127972.0], [55.9, 128008.0], [56.0, 128039.0], [56.1, 128138.0], [56.2, 128172.0], [56.3, 128204.0], [56.4, 128287.0], [56.5, 128311.0], [56.6, 128357.0], [56.7, 128361.0], [56.8, 128379.0], [56.9, 128419.0], [57.0, 128455.0], [57.1, 128463.0], [57.2, 128484.0], [57.3, 128511.0], [57.4, 128535.0], [57.5, 128562.0], [57.6, 128644.0], [57.7, 128699.0], [57.8, 128724.0], [57.9, 128770.0], [58.0, 128822.0], [58.1, 128865.0], [58.2, 128896.0], [58.3, 128903.0], [58.4, 128937.0], [58.5, 128961.0], [58.6, 129020.0], [58.7, 129037.0], [58.8, 129116.0], [58.9, 129133.0], [59.0, 129176.0], [59.1, 129197.0], [59.2, 129219.0], [59.3, 129244.0], [59.4, 129276.0], [59.5, 129305.0], [59.6, 129322.0], [59.7, 129380.0], [59.8, 129400.0], [59.9, 129418.0], [60.0, 129431.0], [60.1, 129445.0], [60.2, 129462.0], [60.3, 129468.0], [60.4, 129516.0], [60.5, 129602.0], [60.6, 129647.0], [60.7, 129700.0], [60.8, 129741.0], [60.9, 129783.0], [61.0, 129863.0], [61.1, 129869.0], [61.2, 129934.0], [61.3, 129963.0], [61.4, 130033.0], [61.5, 130083.0], [61.6, 130168.0], [61.7, 130231.0], [61.8, 130265.0], [61.9, 130276.0], [62.0, 130318.0], [62.1, 130328.0], [62.2, 130405.0], [62.3, 130442.0], [62.4, 130504.0], [62.5, 130548.0], [62.6, 130571.0], [62.7, 130621.0], [62.8, 130655.0], [62.9, 130684.0], [63.0, 130796.0], [63.1, 130812.0], [63.2, 130907.0], [63.3, 130920.0], [63.4, 130976.0], [63.5, 131011.0], [63.6, 131056.0], [63.7, 131091.0], [63.8, 131123.0], [63.9, 131130.0], [64.0, 131220.0], [64.1, 131293.0], [64.2, 131364.0], [64.3, 131385.0], [64.4, 131404.0], [64.5, 131418.0], [64.6, 131455.0], [64.7, 131506.0], [64.8, 131560.0], [64.9, 131583.0], [65.0, 131618.0], [65.1, 131654.0], [65.2, 131684.0], [65.3, 131766.0], [65.4, 131898.0], [65.5, 131938.0], [65.6, 132005.0], [65.7, 132035.0], [65.8, 132107.0], [65.9, 132122.0], [66.0, 132140.0], [66.1, 132184.0], [66.2, 132215.0], [66.3, 132244.0], [66.4, 132264.0], [66.5, 132299.0], [66.6, 132310.0], [66.7, 132378.0], [66.8, 132422.0], [66.9, 132453.0], [67.0, 132528.0], [67.1, 132589.0], [67.2, 132667.0], [67.3, 132695.0], [67.4, 132741.0], [67.5, 132770.0], [67.6, 132810.0], [67.7, 132839.0], [67.8, 132863.0], [67.9, 132915.0], [68.0, 132930.0], [68.1, 132973.0], [68.2, 133015.0], [68.3, 133021.0], [68.4, 133047.0], [68.5, 133093.0], [68.6, 133113.0], [68.7, 133191.0], [68.8, 133219.0], [68.9, 133246.0], [69.0, 133269.0], [69.1, 133290.0], [69.2, 133376.0], [69.3, 133395.0], [69.4, 133518.0], [69.5, 133573.0], [69.6, 133593.0], [69.7, 133598.0], [69.8, 133627.0], [69.9, 133634.0], [70.0, 133708.0], [70.1, 133755.0], [70.2, 133794.0], [70.3, 133816.0], [70.4, 133892.0], [70.5, 133955.0], [70.6, 133996.0], [70.7, 134006.0], [70.8, 134076.0], [70.9, 134079.0], [71.0, 134147.0], [71.1, 134191.0], [71.2, 134294.0], [71.3, 134321.0], [71.4, 134349.0], [71.5, 134370.0], [71.6, 134385.0], [71.7, 134442.0], [71.8, 134476.0], [71.9, 134548.0], [72.0, 134564.0], [72.1, 134597.0], [72.2, 134612.0], [72.3, 134651.0], [72.4, 134659.0], [72.5, 134721.0], [72.6, 134735.0], [72.7, 134757.0], [72.8, 134777.0], [72.9, 134835.0], [73.0, 134905.0], [73.1, 134932.0], [73.2, 134948.0], [73.3, 134976.0], [73.4, 134994.0], [73.5, 135014.0], [73.6, 135093.0], [73.7, 135111.0], [73.8, 135156.0], [73.9, 135201.0], [74.0, 135206.0], [74.1, 135250.0], [74.2, 135292.0], [74.3, 135326.0], [74.4, 135337.0], [74.5, 135367.0], [74.6, 135379.0], [74.7, 135463.0], [74.8, 135499.0], [74.9, 135560.0], [75.0, 135579.0], [75.1, 135630.0], [75.2, 135666.0], [75.3, 135732.0], [75.4, 135768.0], [75.5, 135856.0], [75.6, 135948.0], [75.7, 135975.0], [75.8, 136003.0], [75.9, 136022.0], [76.0, 136159.0], [76.1, 136193.0], [76.2, 136224.0], [76.3, 136334.0], [76.4, 136363.0], [76.5, 136369.0], [76.6, 136400.0], [76.7, 136460.0], [76.8, 136500.0], [76.9, 136558.0], [77.0, 136595.0], [77.1, 136677.0], [77.2, 136702.0], [77.3, 136785.0], [77.4, 136835.0], [77.5, 136862.0], [77.6, 136867.0], [77.7, 136941.0], [77.8, 136991.0], [77.9, 137034.0], [78.0, 137108.0], [78.1, 137190.0], [78.2, 137271.0], [78.3, 137325.0], [78.4, 137398.0], [78.5, 137475.0], [78.6, 137546.0], [78.7, 137579.0], [78.8, 137662.0], [78.9, 137727.0], [79.0, 137751.0], [79.1, 137823.0], [79.2, 137837.0], [79.3, 137871.0], [79.4, 137882.0], [79.5, 137934.0], [79.6, 137950.0], [79.7, 138033.0], [79.8, 138082.0], [79.9, 138199.0], [80.0, 138224.0], [80.1, 138276.0], [80.2, 138338.0], [80.3, 138407.0], [80.4, 138441.0], [80.5, 138448.0], [80.6, 138499.0], [80.7, 138589.0], [80.8, 138660.0], [80.9, 138811.0], [81.0, 138873.0], [81.1, 138931.0], [81.2, 138992.0], [81.3, 139035.0], [81.4, 139137.0], [81.5, 139168.0], [81.6, 139253.0], [81.7, 139288.0], [81.8, 139299.0], [81.9, 139333.0], [82.0, 139359.0], [82.1, 139373.0], [82.2, 139413.0], [82.3, 139425.0], [82.4, 139454.0], [82.5, 139489.0], [82.6, 139547.0], [82.7, 139583.0], [82.8, 139622.0], [82.9, 139794.0], [83.0, 139836.0], [83.1, 139939.0], [83.2, 139997.0], [83.3, 140047.0], [83.4, 140124.0], [83.5, 140238.0], [83.6, 140269.0], [83.7, 140319.0], [83.8, 140383.0], [83.9, 140461.0], [84.0, 140492.0], [84.1, 140558.0], [84.2, 140584.0], [84.3, 140651.0], [84.4, 140805.0], [84.5, 140995.0], [84.6, 141044.0], [84.7, 141159.0], [84.8, 141178.0], [84.9, 141235.0], [85.0, 141263.0], [85.1, 141353.0], [85.2, 141384.0], [85.3, 141410.0], [85.4, 141457.0], [85.5, 141643.0], [85.6, 141670.0], [85.7, 141843.0], [85.8, 141849.0], [85.9, 141952.0], [86.0, 141978.0], [86.1, 142160.0], [86.2, 142223.0], [86.3, 142301.0], [86.4, 142361.0], [86.5, 142453.0], [86.6, 142538.0], [86.7, 142556.0], [86.8, 142702.0], [86.9, 142770.0], [87.0, 142878.0], [87.1, 142950.0], [87.2, 143307.0], [87.3, 143528.0], [87.4, 143640.0], [87.5, 143729.0], [87.6, 143809.0], [87.7, 143841.0], [87.8, 143910.0], [87.9, 144063.0], [88.0, 144159.0], [88.1, 144377.0], [88.2, 144421.0], [88.3, 144511.0], [88.4, 144579.0], [88.5, 144703.0], [88.6, 144755.0], [88.7, 144896.0], [88.8, 144988.0], [88.9, 145116.0], [89.0, 145454.0], [89.1, 145803.0], [89.2, 145873.0], [89.3, 146121.0], [89.4, 146289.0], [89.5, 146552.0], [89.6, 146615.0], [89.7, 146763.0], [89.8, 146878.0], [89.9, 147425.0], [90.0, 147561.0], [90.1, 148156.0], [90.2, 148251.0], [90.3, 148382.0], [90.4, 148630.0], [90.5, 149135.0], [90.6, 149610.0], [90.7, 149999.0], [90.8, 150294.0], [90.9, 150471.0], [91.0, 150651.0], [91.1, 150868.0], [91.2, 151006.0], [91.3, 151623.0], [91.4, 152049.0], [91.5, 152467.0], [91.6, 152585.0], [91.7, 152698.0], [91.8, 153049.0], [91.9, 153282.0], [92.0, 153637.0], [92.1, 154642.0], [92.2, 155088.0], [92.3, 155353.0], [92.4, 155475.0], [92.5, 155690.0], [92.6, 155853.0], [92.7, 156525.0], [92.8, 157009.0], [92.9, 157297.0], [93.0, 157612.0], [93.1, 158170.0], [93.2, 159149.0], [93.3, 160243.0], [93.4, 161012.0], [93.5, 161371.0], [93.6, 161865.0], [93.7, 1791805.0], [93.8, 1803469.0], [93.9, 1809276.0], [94.0, 1812081.0], [94.1, 1812849.0], [94.2, 1815468.0], [94.3, 1818871.0], [94.4, 1821671.0], [94.5, 1824313.0], [94.6, 1825306.0], [94.7, 1825392.0], [94.8, 1831960.0], [94.9, 1832166.0], [95.0, 1836873.0], [95.1, 1836986.0], [95.2, 1840558.0], [95.3, 1841170.0], [95.4, 1843628.0], [95.5, 1844182.0], [95.6, 1846603.0], [95.7, 1849423.0], [95.8, 1852224.0], [95.9, 1854470.0], [96.0, 1854786.0], [96.1, 1856051.0], [96.2, 1856088.0], [96.3, 1858038.0], [96.4, 1861063.0], [96.5, 1861496.0], [96.6, 1861536.0], [96.7, 1868123.0], [96.8, 1868269.0], [96.9, 1871419.0], [97.0, 1876118.0], [97.1, 1876347.0], [97.2, 1879467.0], [97.3, 1879594.0], [97.4, 1885656.0], [97.5, 1889265.0], [97.6, 1889390.0], [97.7, 1892343.0], [97.8, 1892587.0], [97.9, 1898624.0], [98.0, 1899215.0], [98.1, 1901174.0], [98.2, 1901214.0], [98.3, 1903665.0], [98.4, 1903766.0], [98.5, 1904723.0], [98.6, 1904810.0], [98.7, 1907087.0], [98.8, 1908080.0], [98.9, 1908227.0], [99.0, 1908820.0], [99.1, 1912472.0], [99.2, 1912638.0], [99.3, 1912735.0], [99.4, 1912774.0], [99.5, 1912883.0], [99.6, 1912910.0], [99.7, 1913409.0], [99.8, 1914252.0], [99.9, 1915799.0], [100.0, 1915828.0]], "isOverall": false, "label": "logout", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 335.0, "series": [{"data": [[0.0, 192.0], [1843500.0, 1.0], [1809700.0, 1.0], [1801500.0, 1.0], [1793300.0, 1.0], [1818900.0, 1.0], [66700.0, 1.0], [1836300.0, 1.0], [1806600.0, 1.0], [1840500.0, 1.0], [100.0, 104.0], [1824100.0, 2.0], [32900.0, 9.0], [33700.0, 10.0], [34500.0, 3.0], [36100.0, 2.0], [35300.0, 6.0], [36900.0, 1.0], [38500.0, 3.0], [37700.0, 1.0], [39300.0, 2.0], [40100.0, 1.0], [40900.0, 1.0], [42500.0, 1.0], [41700.0, 1.0], [43300.0, 3.0], [44100.0, 1.0], [45700.0, 1.0], [46500.0, 1.0], [48900.0, 4.0], [47300.0, 2.0], [48100.0, 3.0], [49700.0, 4.0], [50500.0, 4.0], [52900.0, 1.0], [51300.0, 1.0], [52100.0, 2.0], [54500.0, 5.0], [53700.0, 3.0], [55300.0, 2.0], [56100.0, 3.0], [56900.0, 2.0], [58500.0, 1.0], [57700.0, 4.0], [60900.0, 1.0], [62500.0, 2.0], [63300.0, 1.0], [64900.0, 1.0], [65800.0, 1.0], [1799500.0, 1.0], [400.0, 2.0], [500.0, 1.0], [600.0, 1.0], [700.0, 1.0], [800.0, 1.0], [900.0, 3.0], [1000.0, 1.0], [1829300.0, 1.0], [1100.0, 1.0], [1200.0, 2.0], [1300.0, 11.0], [1400.0, 5.0], [1821100.0, 1.0], [1795500.0, 1.0], [1600.0, 13.0], [1700.0, 20.0], [1800.0, 6.0], [1900.0, 5.0], [2000.0, 18.0], [1812900.0, 1.0], [2100.0, 28.0], [2200.0, 32.0], [2300.0, 3.0], [1822100.0, 1.0], [66500.0, 2.0], [6000.0, 1.0], [6100.0, 1.0], [6200.0, 1.0], [6300.0, 3.0], [6400.0, 5.0], [8800.0, 1.0], [9200.0, 1.0], [9600.0, 2.0], [13000.0, 1.0], [13400.0, 2.0], [14800.0, 1.0], [15000.0, 3.0], [15200.0, 1.0], [15600.0, 3.0], [15800.0, 2.0], [16000.0, 6.0], [16200.0, 2.0], [16400.0, 3.0], [17200.0, 2.0], [16800.0, 2.0], [18000.0, 5.0], [17600.0, 6.0], [18400.0, 7.0], [18800.0, 8.0], [19200.0, 2.0], [20000.0, 3.0], [20400.0, 7.0], [19600.0, 2.0], [1831400.0, 1.0], [20800.0, 2.0], [21200.0, 3.0], [22000.0, 14.0], [21600.0, 8.0], [22400.0, 4.0], [22800.0, 4.0], [23200.0, 3.0], [24400.0, 7.0], [23600.0, 6.0], [24000.0, 7.0], [24800.0, 8.0], [25200.0, 7.0], [25600.0, 12.0], [26400.0, 8.0], [26000.0, 4.0], [27600.0, 3.0], [26800.0, 9.0], [27200.0, 9.0], [28000.0, 1.0], [28400.0, 13.0], [29600.0, 12.0], [29200.0, 7.0], [28800.0, 1.0], [30000.0, 20.0], [30400.0, 9.0], [31600.0, 9.0], [31200.0, 5.0], [30800.0, 8.0], [32400.0, 6.0], [32000.0, 3.0], [34400.0, 7.0], [33600.0, 8.0], [32800.0, 10.0], [35200.0, 8.0], [36000.0, 7.0], [36800.0, 3.0], [38400.0, 3.0], [37600.0, 2.0], [39200.0, 1.0], [40000.0, 2.0], [1815000.0, 1.0], [42400.0, 1.0], [44800.0, 2.0], [43200.0, 1.0], [45600.0, 3.0], [46400.0, 2.0], [48800.0, 1.0], [47200.0, 3.0], [48000.0, 2.0], [1819100.0, 1.0], [50400.0, 2.0], [49600.0, 2.0], [52800.0, 2.0], [51200.0, 5.0], [55200.0, 1.0], [54400.0, 3.0], [56800.0, 3.0], [56000.0, 3.0], [1832400.0, 1.0], [57600.0, 2.0], [58400.0, 2.0], [64000.0, 1.0], [67200.0, 1.0], [1802700.0, 1.0], [1819700.0, 1.0], [1811500.0, 2.0], [1803300.0, 1.0], [1820700.0, 1.0], [1808400.0, 2.0], [1825800.0, 1.0], [1804300.0, 1.0], [1791100.0, 1.0], [1821800.0, 1.0], [1800300.0, 1.0], [1788000.0, 1.0], [33100.0, 4.0], [34700.0, 4.0], [33900.0, 7.0], [36300.0, 4.0], [35500.0, 5.0], [38700.0, 7.0], [37900.0, 3.0], [40300.0, 2.0], [39500.0, 3.0], [41900.0, 1.0], [42700.0, 2.0], [41100.0, 2.0], [44300.0, 2.0], [43500.0, 2.0], [45900.0, 3.0], [46700.0, 1.0], [45100.0, 2.0], [49100.0, 4.0], [48300.0, 2.0], [1809500.0, 1.0], [50700.0, 6.0], [49900.0, 4.0], [53100.0, 2.0], [51500.0, 5.0], [52300.0, 1.0], [53900.0, 1.0], [54700.0, 1.0], [56300.0, 5.0], [55500.0, 1.0], [57900.0, 1.0], [58700.0, 2.0], [61100.0, 1.0], [60300.0, 1.0], [59500.0, 1.0], [61900.0, 1.0], [62700.0, 1.0], [63500.0, 2.0], [64300.0, 1.0], [1840200.0, 1.0], [1827000.0, 1.0], [1831100.0, 1.0], [1805500.0, 2.0], [1802400.0, 1.0], [1790100.0, 1.0], [66900.0, 1.0], [1807500.0, 1.0], [1795200.0, 1.0], [1841400.0, 1.0], [1837300.0, 1.0], [1811700.0, 1.0], [16500.0, 4.0], [17300.0, 3.0], [16900.0, 5.0], [17700.0, 2.0], [18100.0, 3.0], [19300.0, 8.0], [18900.0, 7.0], [18500.0, 7.0], [19700.0, 8.0], [20100.0, 5.0], [21300.0, 7.0], [20900.0, 8.0], [20500.0, 3.0], [21700.0, 10.0], [22100.0, 21.0], [22500.0, 3.0], [22900.0, 3.0], [23300.0, 10.0], [24100.0, 5.0], [23700.0, 8.0], [24500.0, 6.0], [24900.0, 5.0], [25300.0, 12.0], [25700.0, 3.0], [26100.0, 7.0], [26500.0, 3.0], [27300.0, 10.0], [26900.0, 5.0], [28500.0, 5.0], [28100.0, 7.0], [27700.0, 7.0], [1791200.0, 1.0], [29300.0, 9.0], [28900.0, 10.0], [30100.0, 9.0], [30500.0, 11.0], [29700.0, 10.0], [30900.0, 12.0], [31700.0, 6.0], [31300.0, 7.0], [32100.0, 7.0], [32500.0, 5.0], [34600.0, 11.0], [33800.0, 6.0], [33000.0, 4.0], [35400.0, 4.0], [36200.0, 5.0], [38600.0, 4.0], [37800.0, 2.0], [37000.0, 2.0], [40200.0, 3.0], [39400.0, 3.0], [41000.0, 2.0], [41800.0, 1.0], [45000.0, 1.0], [44200.0, 1.0], [43400.0, 3.0], [45800.0, 2.0], [46600.0, 1.0], [49000.0, 4.0], [48200.0, 3.0], [47400.0, 1.0], [1812700.0, 1.0], [49800.0, 2.0], [50600.0, 4.0], [51400.0, 4.0], [52200.0, 1.0], [53000.0, 1.0], [54600.0, 2.0], [53800.0, 1.0], [55400.0, 2.0], [57000.0, 1.0], [57800.0, 2.0], [58600.0, 2.0], [61000.0, 5.0], [60200.0, 1.0], [59400.0, 2.0], [63400.0, 1.0], [61800.0, 1.0], [66000.0, 1.0], [1792200.0, 1.0], [1787700.0, 1.0], [1826600.0, 1.0], [1792800.0, 1.0], [1835800.0, 1.0], [67500.0, 1.0], [1789800.0, 1.0], [33300.0, 12.0], [34100.0, 8.0], [35700.0, 4.0], [34900.0, 1.0], [36500.0, 1.0], [38100.0, 3.0], [37300.0, 5.0], [38900.0, 5.0], [39700.0, 2.0], [42100.0, 3.0], [42900.0, 2.0], [44500.0, 1.0], [43700.0, 1.0], [45300.0, 3.0], [46100.0, 2.0], [46900.0, 1.0], [47700.0, 2.0], [48500.0, 3.0], [50900.0, 5.0], [49300.0, 3.0], [50100.0, 3.0], [51700.0, 5.0], [52500.0, 1.0], [54100.0, 2.0], [54900.0, 4.0], [53300.0, 4.0], [57300.0, 3.0], [56500.0, 2.0], [55700.0, 2.0], [58100.0, 1.0], [60500.0, 1.0], [59700.0, 1.0], [61300.0, 1.0], [62900.0, 1.0], [62100.0, 1.0], [63700.0, 1.0], [65700.0, 1.0], [1822600.0, 1.0], [1844100.0, 1.0], [1814400.0, 1.0], [9300.0, 8.0], [9700.0, 1.0], [13300.0, 1.0], [14100.0, 2.0], [14300.0, 1.0], [1801200.0, 1.0], [14500.0, 2.0], [15100.0, 3.0], [15300.0, 1.0], [15500.0, 3.0], [15700.0, 4.0], [16300.0, 1.0], [15900.0, 1.0], [16100.0, 3.0], [17400.0, 8.0], [17000.0, 2.0], [16600.0, 2.0], [18200.0, 10.0], [17800.0, 4.0], [19000.0, 5.0], [19400.0, 3.0], [18600.0, 4.0], [19800.0, 4.0], [20200.0, 3.0], [1818600.0, 1.0], [21400.0, 6.0], [20600.0, 14.0], [21800.0, 10.0], [22200.0, 18.0], [23400.0, 7.0], [22600.0, 3.0], [23000.0, 3.0], [23800.0, 10.0], [24200.0, 7.0], [25400.0, 5.0], [24600.0, 7.0], [25000.0, 5.0], [26600.0, 3.0], [26200.0, 1.0], [25800.0, 4.0], [27000.0, 4.0], [27400.0, 4.0], [27800.0, 11.0], [28200.0, 6.0], [28600.0, 10.0], [29000.0, 12.0], [29400.0, 7.0], [29800.0, 22.0], [30600.0, 6.0], [30200.0, 7.0], [31000.0, 14.0], [31400.0, 9.0], [32200.0, 10.0], [31800.0, 7.0], [32600.0, 4.0], [1788900.0, 1.0], [33200.0, 10.0], [34800.0, 6.0], [34000.0, 8.0], [35600.0, 2.0], [36400.0, 4.0], [38800.0, 2.0], [38000.0, 5.0], [37200.0, 4.0], [40400.0, 3.0], [39600.0, 3.0], [1827800.0, 1.0], [42800.0, 3.0], [42000.0, 3.0], [41200.0, 3.0], [44400.0, 1.0], [43600.0, 4.0], [46000.0, 2.0], [46800.0, 3.0], [45200.0, 3.0], [47600.0, 2.0], [1806300.0, 1.0], [1831900.0, 1.0], [50000.0, 1.0], [49200.0, 2.0], [50800.0, 1.0], [53200.0, 4.0], [51600.0, 3.0], [52400.0, 3.0], [54800.0, 2.0], [56400.0, 6.0], [57200.0, 3.0], [55600.0, 1.0], [58800.0, 3.0], [58000.0, 1.0], [61200.0, 1.0], [60400.0, 4.0], [59600.0, 3.0], [62800.0, 1.0], [63600.0, 2.0], [64400.0, 1.0], [1841100.0, 1.0], [1837000.0, 1.0], [1832900.0, 1.0], [1836600.0, 1.0], [1815100.0, 2.0], [1828400.0, 1.0], [1794600.0, 1.0], [1803800.0, 1.0], [1799700.0, 1.0], [1825300.0, 1.0], [66300.0, 1.0], [1830400.0, 1.0], [1791600.0, 1.0], [34300.0, 11.0], [33500.0, 5.0], [35900.0, 5.0], [35100.0, 4.0], [36700.0, 6.0], [38300.0, 7.0], [37500.0, 3.0], [39900.0, 1.0], [40700.0, 3.0], [39100.0, 3.0], [1818200.0, 1.0], [41500.0, 1.0], [42300.0, 1.0], [43100.0, 2.0], [44700.0, 4.0], [46300.0, 3.0], [45500.0, 4.0], [47100.0, 1.0], [48700.0, 1.0], [47900.0, 3.0], [50300.0, 2.0], [51100.0, 3.0], [51900.0, 2.0], [52700.0, 2.0], [55100.0, 2.0], [53500.0, 3.0], [54300.0, 2.0], [56700.0, 4.0], [55900.0, 3.0], [59100.0, 2.0], [57500.0, 1.0], [58300.0, 2.0], [60700.0, 1.0], [59900.0, 2.0], [61500.0, 1.0], [62300.0, 1.0], [65500.0, 1.0], [63900.0, 1.0], [67000.0, 1.0], [68600.0, 1.0], [1797700.0, 1.0], [1843900.0, 1.0], [1788600.0, 1.0], [1806000.0, 1.0], [1827500.0, 1.0], [1840800.0, 1.0], [66100.0, 1.0], [67700.0, 1.0], [1828600.0, 1.0], [1794800.0, 1.0], [1798900.0, 2.0], [17100.0, 1.0], [17500.0, 4.0], [18300.0, 3.0], [17900.0, 2.0], [18700.0, 4.0], [19100.0, 4.0], [19900.0, 14.0], [19500.0, 6.0], [20300.0, 5.0], [20700.0, 7.0], [21500.0, 4.0], [21100.0, 3.0], [21900.0, 11.0], [22300.0, 6.0], [23500.0, 6.0], [23100.0, 10.0], [22700.0, 3.0], [23900.0, 7.0], [24300.0, 5.0], [1816300.0, 1.0], [25100.0, 9.0], [25500.0, 8.0], [24700.0, 3.0], [26300.0, 4.0], [25900.0, 4.0], [27500.0, 7.0], [26700.0, 5.0], [27100.0, 4.0], [28300.0, 12.0], [27900.0, 4.0], [29100.0, 12.0], [29500.0, 7.0], [28700.0, 8.0], [30300.0, 9.0], [29900.0, 14.0], [30700.0, 11.0], [31100.0, 6.0], [31500.0, 8.0], [31900.0, 9.0], [32700.0, 9.0], [32300.0, 4.0], [34200.0, 15.0], [33400.0, 4.0], [35000.0, 7.0], [36600.0, 1.0], [35800.0, 2.0], [37400.0, 3.0], [38200.0, 4.0], [39000.0, 3.0], [39800.0, 1.0], [43000.0, 3.0], [42200.0, 3.0], [43800.0, 1.0], [44600.0, 2.0], [47000.0, 3.0], [47800.0, 3.0], [50200.0, 2.0], [51000.0, 7.0], [49400.0, 1.0], [51800.0, 4.0], [52600.0, 5.0], [55000.0, 5.0], [53400.0, 2.0], [54200.0, 1.0], [55800.0, 3.0], [56600.0, 1.0], [58200.0, 1.0], [57400.0, 3.0], [61400.0, 3.0], [59800.0, 2.0], [60600.0, 1.0], [63000.0, 1.0], [64600.0, 1.0], [1809100.0, 1.0]], "isOverall": false, "label": "login ", "isController": false}, {"data": [[135200.0, 9.0], [0.0, 335.0], [141600.0, 6.0], [148000.0, 1.0], [1907000.0, 1.0], [1898800.0, 1.0], [132900.0, 8.0], [139300.0, 9.0], [145700.0, 1.0], [152100.0, 1.0], [1818900.0, 1.0], [66700.0, 1.0], [82700.0, 1.0], [89100.0, 1.0], [101900.0, 1.0], [105100.0, 4.0], [108300.0, 1.0], [111500.0, 3.0], [114700.0, 3.0], [117900.0, 3.0], [121100.0, 6.0], [124300.0, 3.0], [130700.0, 2.0], [127500.0, 5.0], [137000.0, 4.0], [156200.0, 1.0], [1913200.0, 1.0], [1900900.0, 1.0], [100.0, 51.0], [34500.0, 1.0], [134700.0, 9.0], [141100.0, 4.0], [153900.0, 1.0], [147500.0, 1.0], [47300.0, 1.0], [1790300.0, 1.0], [50500.0, 1.0], [1876300.0, 1.0], [85000.0, 1.0], [88200.0, 1.0], [97800.0, 2.0], [101000.0, 2.0], [1868100.0, 2.0], [104200.0, 2.0], [107400.0, 2.0], [110600.0, 4.0], [1812800.0, 1.0], [117000.0, 4.0], [120200.0, 2.0], [123400.0, 6.0], [126600.0, 1.0], [129800.0, 5.0], [138800.0, 4.0], [132400.0, 4.0], [151600.0, 1.0], [1825200.0, 1.0], [1876400.0, 1.0], [1868200.0, 2.0], [136500.0, 6.0], [1855900.0, 1.0], [142900.0, 3.0], [155700.0, 1.0], [1843600.0, 2.0], [96900.0, 1.0], [100100.0, 1.0], [109700.0, 4.0], [106500.0, 4.0], [112900.0, 3.0], [116100.0, 3.0], [122500.0, 3.0], [119300.0, 1.0], [125700.0, 6.0], [128900.0, 7.0], [134200.0, 2.0], [140600.0, 3.0], [11200.0, 1.0], [1843700.0, 1.0], [22400.0, 1.0], [24800.0, 1.0], [26400.0, 1.0], [27200.0, 1.0], [32000.0, 1.0], [138300.0, 1.0], [131900.0, 3.0], [144700.0, 3.0], [49600.0, 1.0], [1858000.0, 1.0], [67200.0, 1.0], [96000.0, 1.0], [99200.0, 1.0], [105600.0, 3.0], [102400.0, 1.0], [108800.0, 3.0], [112000.0, 3.0], [115200.0, 3.0], [118400.0, 2.0], [121600.0, 4.0], [124800.0, 4.0], [128000.0, 5.0], [134400.0, 4.0], [140800.0, 3.0], [1904700.0, 2.0], [153600.0, 1.0], [1849400.0, 1.0], [1841200.0, 1.0], [1876000.0, 1.0], [132100.0, 9.0], [138500.0, 3.0], [144900.0, 2.0], [157700.0, 1.0], [70300.0, 1.0], [92700.0, 2.0], [95900.0, 2.0], [102300.0, 1.0], [99100.0, 2.0], [105500.0, 5.0], [108700.0, 10.0], [111900.0, 3.0], [115100.0, 2.0], [118300.0, 2.0], [121500.0, 1.0], [124700.0, 5.0], [127900.0, 6.0], [136200.0, 2.0], [149000.0, 2.0], [155400.0, 2.0], [161800.0, 1.0], [1910900.0, 1.0], [1898600.0, 1.0], [133900.0, 6.0], [140300.0, 5.0], [146700.0, 1.0], [50700.0, 1.0], [85400.0, 1.0], [101400.0, 2.0], [104600.0, 3.0], [1912900.0, 2.0], [114200.0, 3.0], [111000.0, 2.0], [117400.0, 5.0], [120600.0, 2.0], [1908800.0, 1.0], [123800.0, 7.0], [130200.0, 6.0], [127000.0, 3.0], [131600.0, 8.0], [138000.0, 3.0], [144400.0, 2.0], [150800.0, 2.0], [157200.0, 2.0], [1818800.0, 1.0], [1904800.0, 3.0], [135700.0, 5.0], [142100.0, 3.0], [148500.0, 1.0], [161300.0, 3.0], [1892500.0, 2.0], [78100.0, 1.0], [81300.0, 1.0], [84500.0, 1.0], [90900.0, 1.0], [97300.0, 3.0], [100500.0, 3.0], [1876100.0, 1.0], [103700.0, 2.0], [106900.0, 5.0], [110100.0, 2.0], [113300.0, 4.0], [116500.0, 3.0], [119700.0, 5.0], [126100.0, 5.0], [122900.0, 2.0], [129300.0, 8.0], [133400.0, 2.0], [146200.0, 1.0], [139800.0, 2.0], [152600.0, 4.0], [18500.0, 1.0], [1876200.0, 2.0], [1868000.0, 2.0], [137500.0, 5.0], [131100.0, 3.0], [143900.0, 2.0], [38600.0, 1.0], [150300.0, 1.0], [41800.0, 1.0], [48200.0, 1.0], [70800.0, 1.0], [93200.0, 1.0], [96400.0, 2.0], [102800.0, 1.0], [106000.0, 3.0], [109200.0, 3.0], [112400.0, 3.0], [115600.0, 3.0], [122000.0, 6.0], [118800.0, 3.0], [125200.0, 7.0], [128400.0, 10.0], [136800.0, 8.0], [149600.0, 2.0], [1915700.0, 2.0], [1809200.0, 1.0], [1852200.0, 1.0], [1899300.0, 1.0], [134500.0, 8.0], [140900.0, 1.0], [147300.0, 1.0], [96300.0, 1.0], [99500.0, 1.0], [105900.0, 3.0], [102700.0, 2.0], [109100.0, 1.0], [112300.0, 3.0], [118700.0, 5.0], [115500.0, 2.0], [121900.0, 4.0], [125100.0, 3.0], [128300.0, 10.0], [132200.0, 9.0], [138600.0, 2.0], [145000.0, 2.0], [1815400.0, 2.0], [136300.0, 8.0], [1854300.0, 2.0], [142700.0, 4.0], [38100.0, 1.0], [155500.0, 1.0], [149100.0, 1.0], [47700.0, 1.0], [57300.0, 1.0], [1889100.0, 2.0], [69800.0, 1.0], [73000.0, 1.0], [85800.0, 1.0], [92200.0, 1.0], [95400.0, 3.0], [101800.0, 3.0], [98600.0, 1.0], [105000.0, 3.0], [114600.0, 2.0], [111400.0, 3.0], [1825600.0, 1.0], [117800.0, 3.0], [121000.0, 2.0], [124200.0, 5.0], [130600.0, 8.0], [127400.0, 7.0], [134000.0, 6.0], [146800.0, 2.0], [140400.0, 5.0], [153200.0, 2.0], [159600.0, 2.0], [1889200.0, 2.0], [1821600.0, 1.0], [138100.0, 3.0], [131700.0, 2.0], [144500.0, 4.0], [150900.0, 1.0], [157300.0, 1.0], [1915800.0, 2.0], [75300.0, 1.0], [81700.0, 1.0], [94500.0, 2.0], [97700.0, 1.0], [1844100.0, 1.0], [104100.0, 1.0], [107300.0, 3.0], [110500.0, 3.0], [113700.0, 3.0], [116900.0, 1.0], [120100.0, 3.0], [126500.0, 4.0], [123300.0, 5.0], [129700.0, 7.0], [135800.0, 3.0], [142200.0, 3.0], [155000.0, 1.0], [148600.0, 1.0], [161400.0, 1.0], [11300.0, 1.0], [12900.0, 1.0], [14500.0, 1.0], [1903600.0, 1.0], [21000.0, 1.0], [23400.0, 1.0], [34000.0, 1.0], [133500.0, 8.0], [146300.0, 1.0], [139900.0, 4.0], [40400.0, 1.0], [159100.0, 2.0], [1831900.0, 1.0], [61200.0, 1.0], [87200.0, 1.0], [93600.0, 1.0], [96800.0, 3.0], [100000.0, 2.0], [106400.0, 2.0], [103200.0, 1.0], [109600.0, 2.0], [116000.0, 2.0], [1854400.0, 1.0], [122400.0, 6.0], [119200.0, 1.0], [125600.0, 5.0], [128800.0, 8.0], [136000.0, 5.0], [142400.0, 3.0], [1913400.0, 1.0], [1901100.0, 1.0], [133700.0, 7.0], [140100.0, 2.0], [146500.0, 2.0], [1825300.0, 4.0], [80700.0, 1.0], [90300.0, 1.0], [93500.0, 2.0], [96700.0, 1.0], [103100.0, 2.0], [106300.0, 3.0], [109500.0, 3.0], [112700.0, 5.0], [115900.0, 3.0], [1856000.0, 4.0], [119100.0, 1.0], [122300.0, 6.0], [125500.0, 2.0], [128700.0, 6.0], [1808900.0, 1.0], [137800.0, 9.0], [131400.0, 9.0], [150600.0, 1.0], [157000.0, 2.0], [1809000.0, 1.0], [1856100.0, 2.0], [135500.0, 6.0], [141900.0, 5.0], [148300.0, 3.0], [57500.0, 1.0], [60700.0, 1.0], [76600.0, 1.0], [92600.0, 1.0], [102200.0, 4.0], [99000.0, 3.0], [105400.0, 6.0], [108600.0, 2.0], [111800.0, 5.0], [115000.0, 5.0], [118200.0, 2.0], [121400.0, 2.0], [124600.0, 2.0], [127800.0, 6.0], [131000.0, 8.0], [133200.0, 8.0], [139600.0, 3.0], [146000.0, 1.0], [152400.0, 2.0], [137300.0, 4.0], [143700.0, 3.0], [156500.0, 1.0], [1858200.0, 1.0], [1901200.0, 3.0], [72500.0, 1.0], [94900.0, 3.0], [98100.0, 1.0], [101300.0, 1.0], [104500.0, 2.0], [107700.0, 1.0], [110900.0, 2.0], [114100.0, 2.0], [117300.0, 3.0], [120500.0, 2.0], [126900.0, 8.0], [123700.0, 2.0], [130100.0, 2.0], [135000.0, 5.0], [141400.0, 4.0], [1901300.0, 1.0], [28300.0, 1.0], [29900.0, 1.0], [32300.0, 1.0], [132700.0, 7.0], [139100.0, 4.0], [37400.0, 1.0], [151900.0, 1.0], [1915600.0, 1.0], [63000.0, 1.0], [97200.0, 2.0], [100400.0, 6.0], [1852100.0, 1.0], [103600.0, 1.0], [110000.0, 2.0], [106800.0, 1.0], [113200.0, 1.0], [116400.0, 2.0], [1899200.0, 1.0], [119600.0, 2.0], [126000.0, 7.0], [129200.0, 8.0], [138400.0, 10.0], [132000.0, 6.0], [144800.0, 3.0], [151200.0, 2.0], [157600.0, 1.0], [1881400.0, 1.0], [1908000.0, 2.0], [136100.0, 5.0], [142500.0, 6.0], [155300.0, 2.0], [84300.0, 1.0], [90700.0, 1.0], [97100.0, 1.0], [100300.0, 4.0], [103500.0, 1.0], [106700.0, 4.0], [109900.0, 3.0], [116300.0, 1.0], [122700.0, 3.0], [119500.0, 2.0], [125900.0, 3.0], [129100.0, 10.0], [133800.0, 5.0], [140200.0, 4.0], [146600.0, 3.0], [153000.0, 2.0], [1891700.0, 1.0], [1840500.0, 2.0], [1879400.0, 1.0], [137900.0, 6.0], [131500.0, 6.0], [144300.0, 3.0], [38500.0, 1.0], [150700.0, 1.0], [44900.0, 1.0], [1914200.0, 1.0], [54500.0, 2.0], [83400.0, 1.0], [1846600.0, 3.0], [93000.0, 1.0], [96200.0, 1.0], [99400.0, 2.0], [105800.0, 2.0], [102600.0, 1.0], [109000.0, 2.0], [112200.0, 4.0], [115400.0, 2.0], [118600.0, 1.0], [121800.0, 1.0], [125000.0, 5.0], [128200.0, 5.0], [135600.0, 5.0], [142000.0, 1.0], [1795500.0, 1.0], [1885600.0, 1.0], [133300.0, 5.0], [146100.0, 2.0], [139700.0, 3.0], [152500.0, 2.0], [66500.0, 1.0], [1861000.0, 1.0], [98500.0, 1.0], [104900.0, 3.0], [1908100.0, 1.0], [108100.0, 3.0], [111300.0, 1.0], [114500.0, 1.0], [117700.0, 3.0], [120900.0, 5.0], [124100.0, 3.0], [127300.0, 5.0], [130500.0, 6.0], [137400.0, 3.0], [143800.0, 5.0], [150200.0, 1.0], [10200.0, 1.0], [156600.0, 1.0], [14600.0, 1.0], [15000.0, 1.0], [1861100.0, 1.0], [18800.0, 1.0], [1908200.0, 2.0], [27600.0, 1.0], [135100.0, 7.0], [141500.0, 1.0], [154300.0, 1.0], [160700.0, 1.0], [47200.0, 1.0], [53600.0, 1.0], [1879500.0, 3.0], [78400.0, 1.0], [100800.0, 1.0], [1871300.0, 1.0], [104000.0, 2.0], [110400.0, 5.0], [113600.0, 1.0], [116800.0, 2.0], [120000.0, 2.0], [123200.0, 4.0], [126400.0, 3.0], [129600.0, 5.0], [137600.0, 2.0], [131200.0, 5.0], [144000.0, 2.0], [150400.0, 2.0], [1815600.0, 1.0], [1854500.0, 1.0], [135300.0, 10.0], [148100.0, 1.0], [1893400.0, 1.0], [1889300.0, 1.0], [94300.0, 1.0], [97500.0, 1.0], [100700.0, 1.0], [103900.0, 2.0], [110300.0, 3.0], [107100.0, 5.0], [113500.0, 1.0], [116700.0, 1.0], [119900.0, 2.0], [126300.0, 7.0], [123100.0, 2.0], [129500.0, 3.0], [1821700.0, 2.0], [133000.0, 9.0], [139400.0, 9.0], [145800.0, 3.0], [137100.0, 4.0], [143500.0, 2.0], [38700.0, 1.0], [149900.0, 1.0], [156300.0, 1.0], [41900.0, 1.0], [45100.0, 1.0], [49900.0, 1.0], [1903700.0, 2.0], [54700.0, 1.0], [56300.0, 1.0], [57900.0, 1.0], [93400.0, 1.0], [99800.0, 4.0], [103000.0, 2.0], [106200.0, 2.0], [109400.0, 3.0], [112600.0, 2.0], [1832000.0, 1.0], [115800.0, 7.0], [119000.0, 1.0], [122200.0, 3.0], [125400.0, 2.0], [128600.0, 5.0], [134800.0, 2.0], [141200.0, 6.0], [1903800.0, 2.0], [1895600.0, 1.0], [1832100.0, 2.0], [138900.0, 4.0], [132500.0, 5.0], [158100.0, 2.0], [66900.0, 2.0], [73300.0, 2.0], [79700.0, 2.0], [1803400.0, 1.0], [102100.0, 3.0], [105300.0, 1.0], [108500.0, 2.0], [111700.0, 5.0], [114900.0, 4.0], [118100.0, 3.0], [121300.0, 4.0], [124500.0, 6.0], [130900.0, 7.0], [127700.0, 4.0], [136600.0, 4.0], [143000.0, 1.0], [155800.0, 1.0], [1914100.0, 1.0], [1811700.0, 1.0], [17300.0, 1.0], [1854700.0, 1.0], [18100.0, 1.0], [21300.0, 1.0], [1846500.0, 1.0], [31700.0, 1.0], [134300.0, 10.0], [147100.0, 1.0], [140700.0, 1.0], [153500.0, 1.0], [42600.0, 1.0], [44200.0, 1.0], [45800.0, 1.0], [53800.0, 1.0], [58600.0, 1.0], [69200.0, 1.0], [91600.0, 2.0], [98000.0, 2.0], [101200.0, 1.0], [104400.0, 5.0], [107600.0, 5.0], [110800.0, 2.0], [114000.0, 1.0], [117200.0, 5.0], [120400.0, 5.0], [123600.0, 6.0], [126800.0, 1.0], [130000.0, 5.0], [133600.0, 6.0], [140000.0, 4.0], [146400.0, 1.0], [1791800.0, 1.0], [1787700.0, 1.0], [1818400.0, 1.0], [131300.0, 5.0], [137700.0, 7.0], [144100.0, 3.0], [150500.0, 1.0], [1861400.0, 1.0], [1912600.0, 4.0], [1908500.0, 1.0], [72300.0, 1.0], [81900.0, 1.0], [101100.0, 1.0], [1892100.0, 1.0], [104300.0, 1.0], [107500.0, 4.0], [110700.0, 2.0], [117100.0, 7.0], [1836800.0, 2.0], [120300.0, 5.0], [126700.0, 4.0], [123500.0, 1.0], [129900.0, 6.0], [135400.0, 4.0], [1861500.0, 2.0], [141800.0, 3.0], [1912700.0, 3.0], [154600.0, 2.0], [148200.0, 2.0], [161000.0, 1.0], [1836900.0, 3.0], [133100.0, 6.0], [139500.0, 5.0], [145900.0, 1.0], [64500.0, 1.0], [93800.0, 2.0], [97000.0, 1.0], [103400.0, 3.0], [109800.0, 1.0], [106600.0, 2.0], [113000.0, 2.0], [116200.0, 4.0], [122600.0, 3.0], [125800.0, 4.0], [129000.0, 5.0], [137200.0, 3.0], [143600.0, 2.0], [150000.0, 1.0], [1812400.0, 1.0], [134900.0, 12.0], [141300.0, 5.0], [147700.0, 1.0], [76900.0, 1.0], [89700.0, 1.0], [102500.0, 5.0], [105700.0, 3.0], [108900.0, 1.0], [112100.0, 2.0], [115300.0, 3.0], [118500.0, 4.0], [121700.0, 4.0], [124900.0, 4.0], [128100.0, 5.0], [139000.0, 4.0], [132600.0, 4.0], [145400.0, 1.0], [10300.0, 1.0], [11500.0, 1.0], [13500.0, 1.0], [13900.0, 1.0], [22200.0, 2.0], [24600.0, 1.0], [25400.0, 2.0], [27800.0, 1.0], [28600.0, 1.0], [1912800.0, 4.0], [34800.0, 1.0], [136700.0, 4.0], [44400.0, 1.0], [60400.0, 1.0], [69600.0, 1.0], [1841100.0, 1.0], [1892300.0, 1.0], [95200.0, 1.0], [98400.0, 1.0], [104800.0, 6.0], [108000.0, 3.0], [114400.0, 3.0], [111200.0, 1.0], [117600.0, 4.0], [120800.0, 1.0], [124000.0, 4.0], [130400.0, 5.0], [127200.0, 4.0], [132800.0, 7.0], [139200.0, 7.0], [1840700.0, 2.0], [145600.0, 1.0], [152000.0, 1.0], [1871400.0, 1.0], [1824300.0, 1.0], [1812000.0, 1.0], [136900.0, 4.0], [143300.0, 3.0], [149700.0, 1.0], [79100.0, 1.0], [88700.0, 1.0], [98300.0, 1.0], [101500.0, 2.0], [104700.0, 2.0], [107900.0, 4.0], [111100.0, 2.0], [114300.0, 4.0], [117500.0, 2.0], [120700.0, 2.0], [123900.0, 4.0], [127100.0, 4.0], [130300.0, 7.0], [134600.0, 9.0], [141000.0, 3.0], [147400.0, 2.0], [160200.0, 1.0], [34300.0, 1.0], [132300.0, 7.0], [138700.0, 2.0], [145100.0, 2.0], [40700.0, 1.0], [56700.0, 1.0], [1912400.0, 2.0], [61500.0, 1.0], [87800.0, 1.0], [97400.0, 2.0], [100600.0, 1.0], [103800.0, 2.0], [107000.0, 3.0], [110200.0, 1.0], [116600.0, 2.0], [126200.0, 4.0], [123000.0, 6.0], [129400.0, 14.0], [136400.0, 5.0], [142800.0, 2.0], [155600.0, 2.0], [149200.0, 1.0], [1861300.0, 1.0], [134100.0, 6.0], [140500.0, 5.0], [86900.0, 1.0], [90100.0, 1.0], [99700.0, 2.0], [106100.0, 4.0], [102900.0, 1.0], [109300.0, 3.0], [112500.0, 3.0], [115700.0, 8.0], [122100.0, 2.0], [125300.0, 4.0], [128500.0, 6.0], [1812100.0, 1.0], [131800.0, 3.0], [138200.0, 6.0], [144600.0, 2.0], [151000.0, 1.0], [19100.0, 1.0], [31100.0, 1.0], [32700.0, 1.0], [135900.0, 5.0], [35000.0, 1.0], [142300.0, 3.0], [155100.0, 1.0], [41400.0, 1.0], [47800.0, 1.0], [51000.0, 1.0], [52600.0, 1.0], [59000.0, 1.0], [76400.0, 2.0], [105200.0, 2.0], [108400.0, 4.0], [111600.0, 2.0], [118000.0, 4.0], [114800.0, 3.0], [121200.0, 1.0], [124400.0, 1.0], [130800.0, 4.0], [127600.0, 9.0]], "isOverall": false, "label": "logout", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1915800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 4039.0, "series": [{"data": [[0.0, 2.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 27.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 4039.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 932.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 46.05882352941177, "minX": 1.66781934E12, "maxY": 250.0, "series": [{"data": [[1.66781988E12, 250.0], [1.66781958E12, 250.0], [1.66782054E12, 250.0], [1.66781952E12, 250.0], [1.66782048E12, 250.0], [1.66782018E12, 250.0], [1.6678224E12, 242.15557939914166], [1.66781964E12, 250.0], [1.6678206E12, 250.0], [1.66781934E12, 46.05882352941177], [1.6678203E12, 250.0], [1.66782024E12, 250.0], [1.66781994E12, 250.0], [1.6678194E12, 204.87749287749298], [1.66782036E12, 250.0], [1.66782006E12, 250.0], [1.66782E12, 250.0], [1.6678197E12, 250.0], [1.66782066E12, 250.0], [1.66782012E12, 250.0], [1.66781982E12, 250.0], [1.66781976E12, 250.0], [1.66781946E12, 250.0], [1.66782042E12, 250.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6678224E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 3.0, "maxY": 218009.22271986955, "series": [{"data": [[42.0, 940.0], [43.0, 453.0], [44.0, 964.2], [46.0, 1138.25], [49.0, 1064.2857142857144], [51.0, 1607.0], [54.0, 1519.0], [55.0, 1536.3333333333333], [56.0, 1763.0], [57.0, 1606.0], [59.0, 1437.0], [60.0, 1777.0], [61.0, 1912.0], [66.0, 2111.0], [67.0, 1375.5], [70.0, 1189.0], [74.0, 1303.0], [75.0, 1351.0], [77.0, 1432.0], [78.0, 1444.0], [82.0, 1613.6666666666667], [83.0, 1652.0], [84.0, 1609.0], [88.0, 1744.0], [91.0, 1757.5], [92.0, 1739.0], [93.0, 1766.5], [94.0, 1671.0], [95.0, 1664.0], [97.0, 1715.0], [98.0, 1719.5], [99.0, 1714.0], [101.0, 1735.0], [102.0, 1681.0], [103.0, 1753.0], [104.0, 1744.0], [105.0, 1729.0], [106.0, 1711.0], [107.0, 1707.0], [109.0, 1847.0], [111.0, 1783.0], [112.0, 1898.0], [114.0, 1842.0], [115.0, 1876.5], [118.0, 1823.0], [119.0, 1942.0], [120.0, 1935.0], [125.0, 2054.0], [126.0, 1994.3333333333333], [131.0, 2108.0], [132.0, 2072.0], [133.0, 2030.3333333333333], [135.0, 2026.6666666666667], [138.0, 2066.0], [139.0, 2097.0], [143.0, 2150.0], [145.0, 2185.0], [147.0, 2233.0], [150.0, 2257.0], [151.0, 2218.0], [153.0, 2254.0], [154.0, 2288.0], [157.0, 2296.5], [158.0, 2294.5], [160.0, 2316.0], [161.0, 2255.0], [162.0, 2247.75], [166.0, 2256.0], [168.0, 2281.0], [169.0, 2200.5], [171.0, 2252.0], [172.0, 2280.0], [173.0, 2225.3333333333335], [175.0, 2151.0], [176.0, 2211.0], [178.0, 2180.0], [179.0, 2202.0], [180.0, 2174.0], [182.0, 2164.0], [184.0, 2164.0], [185.0, 2162.0], [186.0, 2151.5], [188.0, 2115.5], [190.0, 2115.0], [191.0, 2101.0], [194.0, 2084.3333333333335], [195.0, 2092.0], [197.0, 2135.0], [198.0, 2110.0], [200.0, 2104.0], [202.0, 2152.0], [204.0, 2166.0], [205.0, 2165.0], [207.0, 2230.0], [208.0, 2222.0], [210.0, 2258.0], [211.0, 2290.0], [243.0, 0.0], [242.0, 0.0], [250.0, 97426.28668941984]], "isOverall": false, "label": "login ", "isController": false}, {"data": [[242.27199999999988, 91461.38519999993]], "isOverall": false, "label": "login -Aggregated", "isController": false}, {"data": [[32.0, 0.0], [45.0, 0.0], [3.0, 1.0], [54.0, 0.0], [56.0, 0.0], [99.0, 0.0], [6.0, 0.0], [103.0, 0.0], [106.0, 0.0], [114.0, 0.0], [7.0, 0.5], [133.0, 0.0], [132.0, 0.0], [8.0, 0.0], [142.0, 0.0], [156.0, 0.0], [10.0, 0.5], [181.0, 0.0], [177.0, 0.0], [11.0, 1.0], [198.0, 0.0], [200.0, 0.0], [210.0, 1.0], [209.0, 0.0], [208.0, 0.0], [13.0, 1.0], [220.0, 0.0], [14.0, 0.0], [235.0, 0.0], [241.0, 0.0], [15.0, 0.0], [250.0, 218009.22271986955], [17.0, 0.5], [19.0, 0.0], [21.0, 0.0], [23.0, 0.0]], "isOverall": false, "label": "logout", "isController": false}, {"data": [[247.08079999999995, 214172.2639999998]], "isOverall": false, "label": "logout-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 250.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.66781934E12, "maxY": 620209.3833333333, "series": [{"data": [[1.66781988E12, 469966.06666666665], [1.66781958E12, 493185.76666666666], [1.66782054E12, 533621.2333333333], [1.66781952E12, 561962.4], [1.66782048E12, 620209.3833333333], [1.66782018E12, 568355.7666666667], [1.6678224E12, 38090.916666666664], [1.66781964E12, 504202.73333333334], [1.6678206E12, 550508.9833333333], [1.66781934E12, 164.33333333333334], [1.6678203E12, 596711.1666666666], [1.66782024E12, 446213.93333333335], [1.66781994E12, 562123.7166666667], [1.6678194E12, 448271.76666666666], [1.66782036E12, 533880.3166666667], [1.66782006E12, 499228.73333333334], [1.66782E12, 584936.1833333333], [1.6678197E12, 457644.26666666666], [1.66782066E12, 110013.85], [1.66782012E12, 585311.1], [1.66781982E12, 579437.45], [1.66781976E12, 533718.1166666667], [1.66781946E12, 533206.8166666667], [1.66782042E12, 556385.7833333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66781988E12, 3591.4], [1.66781958E12, 3806.5333333333333], [1.66782054E12, 3574.9], [1.66781952E12, 2182.7166666666667], [1.66782048E12, 3322.35], [1.66782018E12, 3858.366666666667], [1.6678224E12, 0.0], [1.66781964E12, 2697.866666666667], [1.6678206E12, 2657.3333333333335], [1.66781934E12, 244.23333333333332], [1.6678203E12, 2754.116666666667], [1.66782024E12, 2316.9666666666667], [1.66781994E12, 2941.45], [1.6678194E12, 4867.816666666667], [1.66782036E12, 4222.25], [1.66782006E12, 4331.116666666667], [1.66782E12, 2313.0666666666666], [1.6678197E12, 2051.8166666666666], [1.66782066E12, 354.9166666666667], [1.66782012E12, 3078.116666666667], [1.66781982E12, 2887.016666666667], [1.66781976E12, 3947.616666666667], [1.66781946E12, 2424.9333333333334], [1.66782042E12, 2848.4333333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6678224E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1013.1764705882352, "minX": 1.66781934E12, "maxY": 547569.0421245416, "series": [{"data": [[1.66781988E12, 38859.601626016265], [1.66781958E12, 30239.26717557252], [1.66782054E12, 23095.026315789477], [1.66781952E12, 43936.13114754097], [1.66782048E12, 45662.97777777779], [1.66782018E12, 41368.66935483874], [1.6678224E12, 423125.00000000047], [1.66781964E12, 34210.205479452045], [1.6678206E12, 32530.153846153837], [1.66781934E12, 1013.1764705882352], [1.6678203E12, 33568.18750000002], [1.66782024E12, 24327.688524590165], [1.66781994E12, 27345.858974358973], [1.6678194E12, 10033.419708029194], [1.66782036E12, 37184.775510204076], [1.66782006E12, 37067.49044585988], [1.66782E12, 32751.767441860466], [1.6678197E12, 60425.413043478264], [1.66782066E12, 54421.0], [1.66782012E12, 29385.42682926829], [1.66781982E12, 31747.191780821915], [1.66781976E12, 31034.466165413523], [1.66781946E12, 29726.949999999997], [1.66782042E12, 26568.58108108108]], "isOverall": false, "label": "login ", "isController": false}, {"data": [[1.66781988E12, 131382.3333333333], [1.66781958E12, 136910.20000000004], [1.66782054E12, 125922.94565217396], [1.66781952E12, 123815.86597938147], [1.66782048E12, 119052.60747663555], [1.66782018E12, 123273.27551020405], [1.6678224E12, 547569.0421245416], [1.66781964E12, 124885.89655172412], [1.6678206E12, 108230.18947368424], [1.6678203E12, 118829.86407766993], [1.66782024E12, 130559.44155844157], [1.66781994E12, 132959.73195876286], [1.6678194E12, 33588.88311688312], [1.66782036E12, 141092.2391304347], [1.66782006E12, 137046.46511627905], [1.66782E12, 120939.10891089114], [1.6678197E12, 142560.99999999994], [1.66782066E12, 123883.42105263159], [1.66782012E12, 114661.80198019801], [1.66781982E12, 117917.55999999997], [1.66781976E12, 146578.64130434775], [1.66781946E12, 84953.23913043478], [1.66782042E12, 120523.62499999999]], "isOverall": false, "label": "logout", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6678224E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.66781934E12, "maxY": 146167.3695652174, "series": [{"data": [[1.66781988E12, 38859.59349593496], [1.66781958E12, 30239.221374045792], [1.66782054E12, 23095.008771929817], [1.66781952E12, 43936.09836065574], [1.66782048E12, 45662.96666666666], [1.66782018E12, 41368.64516129032], [1.6678224E12, 0.0], [1.66781964E12, 34210.15068493151], [1.6678206E12, 32530.13846153846], [1.66781934E12, 1012.9411764705883], [1.6678203E12, 33568.18750000002], [1.66782024E12, 24327.688524590165], [1.66781994E12, 27345.833333333332], [1.6678194E12, 10033.361313868612], [1.66782036E12, 37184.76190476194], [1.66782006E12, 37067.477707006365], [1.66782E12, 32751.74418604652], [1.6678197E12, 60425.36956521738], [1.66782066E12, 54421.0], [1.66782012E12, 29385.42682926829], [1.66781982E12, 31747.178082191782], [1.66781976E12, 31034.451127819557], [1.66781946E12, 29726.925], [1.66782042E12, 26568.56756756757]], "isOverall": false, "label": "login ", "isController": false}, {"data": [[1.66781988E12, 131080.24691358022], [1.66781958E12, 136516.14117647058], [1.66782054E12, 125530.77173913046], [1.66781952E12, 123439.95876288657], [1.66782048E12, 118711.24299065422], [1.66782018E12, 122963.43877551016], [1.6678224E12, 0.0], [1.66781964E12, 124510.21839080453], [1.6678206E12, 107876.8], [1.6678203E12, 118484.85436893206], [1.66782024E12, 130227.63636363638], [1.66781994E12, 132205.87628865984], [1.6678194E12, 33291.922077922085], [1.66782036E12, 140757.95652173914], [1.66782006E12, 136716.0], [1.66782E12, 120554.1584158416], [1.6678197E12, 142263.93670886083], [1.66782066E12, 123622.26315789473], [1.66782012E12, 114363.82178217823], [1.66781982E12, 117578.89], [1.66781976E12, 146167.3695652174], [1.66781946E12, 84516.63043478261], [1.66782042E12, 120118.1354166667]], "isOverall": false, "label": "logout", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6678224E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.66781934E12, "maxY": 96436.56521739128, "series": [{"data": [[1.66781988E12, 105.83739837398375], [1.66781958E12, 130.38931297709928], [1.66782054E12, 94.33333333333336], [1.66781952E12, 30.59016393442623], [1.66782048E12, 94.75555555555555], [1.66782018E12, 87.81451612903227], [1.6678224E12, 62.80569948186531], [1.66781964E12, 101.28767123287669], [1.6678206E12, 99.96923076923078], [1.66781934E12, 702.5294117647059], [1.6678203E12, 93.45312499999999], [1.66782024E12, 90.08196721311474], [1.66781994E12, 45.51282051282053], [1.6678194E12, 205.66423357664235], [1.66782036E12, 90.99319727891157], [1.66782006E12, 104.8917197452229], [1.66782E12, 295.5581395348837], [1.6678197E12, 58.0], [1.66782066E12, 434.75], [1.66782012E12, 77.24390243902438], [1.66781982E12, 115.68493150684932], [1.66781976E12, 113.90977443609015], [1.66781946E12, 103.71249999999999], [1.66782042E12, 54.06756756756756]], "isOverall": false, "label": "login ", "isController": false}, {"data": [[1.66781988E12, 58417.56790123457], [1.66781958E12, 87984.03529411764], [1.66782054E12, 76991.76086956526], [1.66781952E12, 53626.76288659795], [1.66782048E12, 60022.31775700934], [1.66782018E12, 49849.48979591838], [1.6678224E12, 8080.30219780219], [1.66781964E12, 67474.35632183908], [1.6678206E12, 50372.4947368421], [1.6678203E12, 60382.62135922329], [1.66782024E12, 85166.98701298703], [1.66781994E12, 69968.76288659792], [1.6678194E12, 0.0], [1.66782036E12, 74162.75000000001], [1.66782006E12, 80222.72093023255], [1.66782E12, 59791.693069306915], [1.6678197E12, 51752.81012658226], [1.66782066E12, 63993.52631578947], [1.66782012E12, 61043.17821782177], [1.66781982E12, 61226.28999999999], [1.66781976E12, 96436.56521739128], [1.66781946E12, 26543.282608695645], [1.66782042E12, 61640.82291666665]], "isOverall": false, "label": "logout", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6678224E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 453.0, "minX": 1.66781934E12, "maxY": 161865.0, "series": [{"data": [[1.66781988E12, 141220.0], [1.66781958E12, 146126.0], [1.66782054E12, 137351.0], [1.66781952E12, 142738.0], [1.66782048E12, 138408.0], [1.66782018E12, 139237.0], [1.66781964E12, 141384.0], [1.6678206E12, 128887.0], [1.66781934E12, 1479.0], [1.6678203E12, 135340.0], [1.66782024E12, 139011.0], [1.66781994E12, 143307.0], [1.6678194E12, 56789.0], [1.66782036E12, 149771.0], [1.66782006E12, 148630.0], [1.66782E12, 139622.0], [1.6678197E12, 161499.0], [1.66782066E12, 128028.0], [1.66782012E12, 132122.0], [1.66781982E12, 149999.0], [1.66781976E12, 161865.0], [1.66781946E12, 106085.0], [1.66782042E12, 135680.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66781988E12, 18556.0], [1.66781958E12, 15685.0], [1.66782054E12, 14162.0], [1.66781952E12, 30434.0], [1.66782048E12, 30477.0], [1.66782018E12, 17352.0], [1.66781964E12, 28100.0], [1.6678206E12, 26161.0], [1.66781934E12, 453.0], [1.6678203E12, 26006.0], [1.66782024E12, 15855.0], [1.66781994E12, 19778.0], [1.6678194E12, 993.0], [1.66782036E12, 16535.0], [1.66782006E12, 14516.0], [1.66782E12, 27286.0], [1.6678197E12, 33109.0], [1.66782066E12, 51053.0], [1.66782012E12, 22294.0], [1.66781982E12, 28266.0], [1.66781976E12, 15258.0], [1.66781946E12, 23818.0], [1.66782042E12, 19761.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66781988E12, 136746.5], [1.66781958E12, 140244.30000000002], [1.66782054E12, 131010.8], [1.66781952E12, 139114.0], [1.66782048E12, 132865.2], [1.66782018E12, 134549.6], [1.66781964E12, 134547.7], [1.6678206E12, 117613.3], [1.66781934E12, 1456.6], [1.6678203E12, 130998.4], [1.66782024E12, 134619.5], [1.66781994E12, 138225.2], [1.6678194E12, 35049.200000000004], [1.66782036E12, 144504.0], [1.66782006E12, 141229.0], [1.66782E12, 135536.5], [1.6678197E12, 156419.4], [1.66782066E12, 127699.6], [1.66782012E12, 127731.4], [1.66781982E12, 139574.0], [1.66781976E12, 152839.0], [1.66781946E12, 101573.5], [1.66782042E12, 128928.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66781988E12, 140378.44999999998], [1.66781958E12, 145907.86], [1.66782054E12, 135725.16], [1.66781952E12, 142091.94999999998], [1.66782048E12, 135393.52000000002], [1.66782018E12, 138333.22], [1.66781964E12, 139094.66999999995], [1.6678206E12, 124159.4999999999], [1.66781934E12, 1479.0], [1.6678203E12, 134652.52], [1.66782024E12, 138223.19999999998], [1.66781994E12, 142646.56], [1.6678194E12, 54686.76], [1.66782036E12, 148115.6], [1.66782006E12, 148313.72], [1.66782E12, 139528.85], [1.6678197E12, 161372.38], [1.66782066E12, 128028.0], [1.66782012E12, 130568.84], [1.66781982E12, 146893.95999999996], [1.66781976E12, 161370.48], [1.66781946E12, 106085.0], [1.66782042E12, 132962.11999999997]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66781988E12, 49843.5], [1.66781958E12, 41630.0], [1.66782054E12, 33789.0], [1.66781952E12, 110546.5], [1.66782048E12, 102485.0], [1.66782018E12, 56445.0], [1.66781964E12, 111722.0], [1.6678206E12, 97497.0], [1.66781934E12, 1011.0], [1.6678203E12, 108730.0], [1.66782024E12, 125844.0], [1.66781994E12, 129219.0], [1.6678194E12, 15007.0], [1.66782036E12, 53402.0], [1.66782006E12, 52625.0], [1.66782E12, 112786.0], [1.6678197E12, 128896.0], [1.66782066E12, 123244.0], [1.66782012E12, 97413.0], [1.66781982E12, 104236.0], [1.66781976E12, 46742.0], [1.66781946E12, 60595.0], [1.66782042E12, 97537.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.66781988E12, 138498.25], [1.66781958E12, 142344.19999999998], [1.66782054E12, 133840.15], [1.66781952E12, 140896.25], [1.66782048E12, 134320.3], [1.66782018E12, 136854.7], [1.66781964E12, 135375.15], [1.6678206E12, 118437.35], [1.66781934E12, 1479.0], [1.6678203E12, 132406.2], [1.66782024E12, 135221.44999999998], [1.66781994E12, 140398.0], [1.6678194E12, 47296.0], [1.66782036E12, 145182.0], [1.66782006E12, 144493.0], [1.66782E12, 137862.5], [1.6678197E12, 159147.8], [1.66782066E12, 127962.8], [1.66782012E12, 128447.8], [1.66781982E12, 142077.5], [1.66781976E12, 156516.4], [1.66781946E12, 104852.5], [1.66782042E12, 129436.75]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66782066E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 89.0, "minX": 1.0, "maxY": 126063.5, "series": [{"data": [[2.0, 121338.0], [36.0, 40022.0], [42.0, 40316.5], [3.0, 114265.0], [4.0, 108923.5], [5.0, 49351.0], [6.0, 37785.5], [7.0, 34259.0], [8.0, 36393.5], [9.0, 32682.0], [10.0, 49436.5], [11.0, 50869.5], [12.0, 29097.5], [13.0, 45869.5], [14.0, 19981.5], [15.0, 25391.0], [16.0, 2084.5], [1.0, 126063.5], [17.0, 33595.5], [18.0, 28839.0], [19.0, 28429.0], [20.0, 12859.5], [21.0, 21884.0], [22.0, 58311.5], [24.0, 22168.5], [26.0, 33096.5], [27.0, 2201.0], [29.0, 21900.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[932.0, 89.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 932.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 125530.0, "series": [{"data": [[2.0, 121180.5], [36.0, 40022.0], [42.0, 40316.5], [3.0, 113618.0], [4.0, 108766.0], [5.0, 49351.0], [6.0, 37571.0], [7.0, 34259.0], [8.0, 36393.5], [9.0, 32682.0], [10.0, 49436.5], [11.0, 50869.5], [12.0, 29097.5], [13.0, 45869.5], [14.0, 19981.5], [15.0, 25391.0], [16.0, 2084.5], [1.0, 125530.0], [17.0, 33595.5], [18.0, 28839.0], [19.0, 28429.0], [20.0, 12859.5], [21.0, 21884.0], [22.0, 58311.5], [24.0, 22168.5], [26.0, 33096.5], [27.0, 2200.5], [29.0, 21900.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[932.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 932.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.38333333333333336, "minX": 1.66781934E12, "maxY": 11.366666666666667, "series": [{"data": [[1.66781988E12, 3.4], [1.66781958E12, 3.6], [1.66782054E12, 3.433333333333333], [1.66781952E12, 2.6333333333333333], [1.66782048E12, 3.283333333333333], [1.66782018E12, 3.716666666666667], [1.6678224E12, 11.366666666666667], [1.66781964E12, 2.6666666666666665], [1.6678206E12, 2.6666666666666665], [1.66781934E12, 1.1], [1.6678203E12, 2.783333333333333], [1.66782024E12, 2.3], [1.66781994E12, 2.9166666666666665], [1.6678194E12, 9.2], [1.66782036E12, 3.9833333333333334], [1.66782006E12, 4.05], [1.66782E12, 2.4], [1.6678197E12, 2.0833333333333335], [1.66782066E12, 0.38333333333333336], [1.66782012E12, 3.033333333333333], [1.66781982E12, 2.8833333333333333], [1.66781976E12, 3.75], [1.66781946E12, 2.8666666666666667], [1.66782042E12, 2.8333333333333335]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6678224E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.2833333333333333, "minX": 1.66781934E12, "maxY": 11.35, "series": [{"data": [[1.66781988E12, 3.4], [1.66781958E12, 3.6], [1.66782054E12, 3.433333333333333], [1.66781952E12, 2.6333333333333333], [1.66782048E12, 3.283333333333333], [1.66782018E12, 3.7], [1.66781964E12, 2.6666666666666665], [1.6678206E12, 2.6666666666666665], [1.66781934E12, 0.2833333333333333], [1.6678203E12, 2.783333333333333], [1.66782024E12, 2.3], [1.66781994E12, 2.9166666666666665], [1.6678194E12, 5.85], [1.66782036E12, 3.9833333333333334], [1.66782006E12, 4.05], [1.66782E12, 2.4], [1.6678197E12, 2.0833333333333335], [1.66782066E12, 0.38333333333333336], [1.66782012E12, 3.05], [1.66781982E12, 2.8833333333333333], [1.66781976E12, 3.75], [1.66781946E12, 2.8666666666666667], [1.66782042E12, 2.8333333333333335]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6678224E12, 4.183333333333334]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}, {"data": [[1.6678224E12, 11.35]], "isOverall": false, "label": "Non HTTP response code: java.net.UnknownHostException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6678224E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.66781934E12, "maxY": 9.1, "series": [{"data": [[1.66781988E12, 1.35], [1.66781958E12, 1.4166666666666667], [1.66782054E12, 1.5333333333333334], [1.66781952E12, 1.6166666666666667], [1.66782048E12, 1.7833333333333334], [1.66782018E12, 1.6333333333333333], [1.66781964E12, 1.45], [1.6678206E12, 1.5833333333333333], [1.6678203E12, 1.7166666666666666], [1.66782024E12, 1.2833333333333334], [1.66781994E12, 1.6166666666666667], [1.6678194E12, 1.2833333333333334], [1.66782036E12, 1.5333333333333334], [1.66782006E12, 1.4333333333333333], [1.66782E12, 1.6833333333333333], [1.6678197E12, 1.3166666666666667], [1.66782066E12, 0.31666666666666665], [1.66782012E12, 1.6833333333333333], [1.66781982E12, 1.6666666666666667], [1.66781976E12, 1.5333333333333334], [1.66781946E12, 1.5333333333333334], [1.66782042E12, 1.6]], "isOverall": false, "label": "logout-success", "isController": false}, {"data": [[1.6678224E12, 6.433333333333334]], "isOverall": false, "label": "login -failure", "isController": false}, {"data": [[1.66781988E12, 2.05], [1.66781958E12, 2.183333333333333], [1.66782054E12, 1.9], [1.66781952E12, 1.0166666666666666], [1.66782048E12, 1.5], [1.66782018E12, 2.066666666666667], [1.66781964E12, 1.2166666666666666], [1.6678206E12, 1.0833333333333333], [1.66781934E12, 0.2833333333333333], [1.6678203E12, 1.0666666666666667], [1.66782024E12, 1.0166666666666666], [1.66781994E12, 1.3], [1.6678194E12, 4.566666666666666], [1.66782036E12, 2.45], [1.66782006E12, 2.6166666666666667], [1.66782E12, 0.7166666666666667], [1.6678197E12, 0.7666666666666667], [1.66782066E12, 0.06666666666666667], [1.66782012E12, 1.3666666666666667], [1.66781982E12, 1.2166666666666666], [1.66781976E12, 2.216666666666667], [1.66781946E12, 1.3333333333333333], [1.66782042E12, 1.2333333333333334]], "isOverall": false, "label": "login -success", "isController": false}, {"data": [[1.6678224E12, 9.1]], "isOverall": false, "label": "logout-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6678224E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.2833333333333333, "minX": 1.66781934E12, "maxY": 15.533333333333333, "series": [{"data": [[1.66781988E12, 3.4], [1.66781958E12, 3.6], [1.66782054E12, 3.433333333333333], [1.66781952E12, 2.6333333333333333], [1.66782048E12, 3.283333333333333], [1.66782018E12, 3.7], [1.66781964E12, 2.6666666666666665], [1.6678206E12, 2.6666666666666665], [1.66781934E12, 0.2833333333333333], [1.6678203E12, 2.783333333333333], [1.66782024E12, 2.3], [1.66781994E12, 2.9166666666666665], [1.6678194E12, 5.85], [1.66782036E12, 3.9833333333333334], [1.66782006E12, 4.05], [1.66782E12, 2.4], [1.6678197E12, 2.0833333333333335], [1.66782066E12, 0.38333333333333336], [1.66782012E12, 3.05], [1.66781982E12, 2.8833333333333333], [1.66781976E12, 3.75], [1.66781946E12, 2.8666666666666667], [1.66782042E12, 2.8333333333333335]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6678224E12, 15.533333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6678224E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

