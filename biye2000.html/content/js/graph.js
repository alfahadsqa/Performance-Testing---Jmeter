/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 497.0, "minX": 0.0, "maxY": 92288.0, "series": [{"data": [[0.0, 497.0], [0.1, 556.0], [0.2, 575.0], [0.3, 589.0], [0.4, 591.0], [0.5, 602.0], [0.6, 611.0], [0.7, 613.0], [0.8, 621.0], [0.9, 623.0], [1.0, 641.0], [1.1, 642.0], [1.2, 645.0], [1.3, 646.0], [1.4, 652.0], [1.5, 654.0], [1.6, 667.0], [1.7, 779.0], [1.8, 1023.0], [1.9, 1165.0], [2.0, 1252.0], [2.1, 1258.0], [2.2, 1330.0], [2.3, 1407.0], [2.4, 1428.0], [2.5, 1444.0], [2.6, 1505.0], [2.7, 1528.0], [2.8, 1534.0], [2.9, 1685.0], [3.0, 1689.0], [3.1, 1790.0], [3.2, 1805.0], [3.3, 2070.0], [3.4, 2182.0], [3.5, 2317.0], [3.6, 2332.0], [3.7, 2513.0], [3.8, 2534.0], [3.9, 2657.0], [4.0, 2762.0], [4.1, 2957.0], [4.2, 3060.0], [4.3, 3257.0], [4.4, 3259.0], [4.5, 3277.0], [4.6, 3530.0], [4.7, 3560.0], [4.8, 3582.0], [4.9, 3638.0], [5.0, 3665.0], [5.1, 3681.0], [5.2, 3711.0], [5.3, 3813.0], [5.4, 3832.0], [5.5, 3841.0], [5.6, 3929.0], [5.7, 3939.0], [5.8, 3952.0], [5.9, 3997.0], [6.0, 4064.0], [6.1, 4089.0], [6.2, 4149.0], [6.3, 4152.0], [6.4, 4174.0], [6.5, 4181.0], [6.6, 4211.0], [6.7, 4213.0], [6.8, 4241.0], [6.9, 4242.0], [7.0, 4252.0], [7.1, 4258.0], [7.2, 4274.0], [7.3, 4288.0], [7.4, 4318.0], [7.5, 4326.0], [7.6, 4338.0], [7.7, 4361.0], [7.8, 4386.0], [7.9, 4438.0], [8.0, 4444.0], [8.1, 4452.0], [8.2, 4516.0], [8.3, 4520.0], [8.4, 4574.0], [8.5, 4590.0], [8.6, 4600.0], [8.7, 4616.0], [8.8, 4641.0], [8.9, 4643.0], [9.0, 4661.0], [9.1, 4672.0], [9.2, 4678.0], [9.3, 4690.0], [9.4, 4710.0], [9.5, 4715.0], [9.6, 4737.0], [9.7, 4806.0], [9.8, 4827.0], [9.9, 4832.0], [10.0, 4858.0], [10.1, 4859.0], [10.2, 4930.0], [10.3, 4992.0], [10.4, 5030.0], [10.5, 5034.0], [10.6, 5109.0], [10.7, 5121.0], [10.8, 5127.0], [10.9, 5136.0], [11.0, 5179.0], [11.1, 5209.0], [11.2, 5286.0], [11.3, 5287.0], [11.4, 5370.0], [11.5, 5376.0], [11.6, 5504.0], [11.7, 5520.0], [11.8, 5565.0], [11.9, 5594.0], [12.0, 5625.0], [12.1, 5639.0], [12.2, 5658.0], [12.3, 5674.0], [12.4, 5692.0], [12.5, 5704.0], [12.6, 5750.0], [12.7, 5802.0], [12.8, 5823.0], [12.9, 5851.0], [13.0, 5891.0], [13.1, 5939.0], [13.2, 5953.0], [13.3, 6039.0], [13.4, 6083.0], [13.5, 6187.0], [13.6, 6258.0], [13.7, 6283.0], [13.8, 6364.0], [13.9, 6386.0], [14.0, 6525.0], [14.1, 6549.0], [14.2, 6668.0], [14.3, 6689.0], [14.4, 6715.0], [14.5, 6724.0], [14.6, 6896.0], [14.7, 6909.0], [14.8, 7025.0], [14.9, 7025.0], [15.0, 7065.0], [15.1, 7074.0], [15.2, 7104.0], [15.3, 7163.0], [15.4, 7210.0], [15.5, 7238.0], [15.6, 7285.0], [15.7, 7348.0], [15.8, 7390.0], [15.9, 7405.0], [16.0, 7484.0], [16.1, 7486.0], [16.2, 7508.0], [16.3, 7562.0], [16.4, 7581.0], [16.5, 7614.0], [16.6, 7693.0], [16.7, 7693.0], [16.8, 7772.0], [16.9, 7780.0], [17.0, 7839.0], [17.1, 7933.0], [17.2, 7956.0], [17.3, 7974.0], [17.4, 7984.0], [17.5, 7995.0], [17.6, 8083.0], [17.7, 8123.0], [17.8, 8163.0], [17.9, 8202.0], [18.0, 8310.0], [18.1, 8344.0], [18.2, 8364.0], [18.3, 8385.0], [18.4, 8422.0], [18.5, 8430.0], [18.6, 8452.0], [18.7, 8455.0], [18.8, 8509.0], [18.9, 8528.0], [19.0, 8565.0], [19.1, 8590.0], [19.2, 8618.0], [19.3, 8660.0], [19.4, 8858.0], [19.5, 8863.0], [19.6, 8899.0], [19.7, 8918.0], [19.8, 8921.0], [19.9, 8954.0], [20.0, 8965.0], [20.1, 8967.0], [20.2, 9124.0], [20.3, 9163.0], [20.4, 9220.0], [20.5, 9241.0], [20.6, 9245.0], [20.7, 9246.0], [20.8, 9262.0], [20.9, 9313.0], [21.0, 9395.0], [21.1, 9447.0], [21.2, 9551.0], [21.3, 9566.0], [21.4, 9647.0], [21.5, 9653.0], [21.6, 9743.0], [21.7, 9759.0], [21.8, 9928.0], [21.9, 9984.0], [22.0, 10300.0], [22.1, 10304.0], [22.2, 10476.0], [22.3, 10504.0], [22.4, 10646.0], [22.5, 10662.0], [22.6, 10699.0], [22.7, 10770.0], [22.8, 10784.0], [22.9, 10861.0], [23.0, 10923.0], [23.1, 10932.0], [23.2, 11025.0], [23.3, 11034.0], [23.4, 11059.0], [23.5, 11061.0], [23.6, 11115.0], [23.7, 11123.0], [23.8, 11156.0], [23.9, 11183.0], [24.0, 11221.0], [24.1, 11228.0], [24.2, 11233.0], [24.3, 11245.0], [24.4, 11306.0], [24.5, 11322.0], [24.6, 11388.0], [24.7, 11396.0], [24.8, 11405.0], [24.9, 11423.0], [25.0, 11481.0], [25.1, 11481.0], [25.2, 11571.0], [25.3, 11579.0], [25.4, 11584.0], [25.5, 11588.0], [25.6, 11598.0], [25.7, 11614.0], [25.8, 11658.0], [25.9, 11659.0], [26.0, 11697.0], [26.1, 11700.0], [26.2, 11753.0], [26.3, 11754.0], [26.4, 11842.0], [26.5, 11850.0], [26.6, 11858.0], [26.7, 11921.0], [26.8, 11985.0], [26.9, 12040.0], [27.0, 12112.0], [27.1, 12134.0], [27.2, 12244.0], [27.3, 12252.0], [27.4, 12321.0], [27.5, 12323.0], [27.6, 12355.0], [27.7, 12358.0], [27.8, 12365.0], [27.9, 12369.0], [28.0, 12382.0], [28.1, 12392.0], [28.2, 12396.0], [28.3, 12435.0], [28.4, 12473.0], [28.5, 12490.0], [28.6, 12533.0], [28.7, 12572.0], [28.8, 12587.0], [28.9, 12607.0], [29.0, 12638.0], [29.1, 12640.0], [29.2, 12730.0], [29.3, 12736.0], [29.4, 12792.0], [29.5, 12800.0], [29.6, 12846.0], [29.7, 12863.0], [29.8, 12911.0], [29.9, 12936.0], [30.0, 12950.0], [30.1, 12957.0], [30.2, 12990.0], [30.3, 13032.0], [30.4, 13063.0], [30.5, 13080.0], [30.6, 13103.0], [30.7, 13108.0], [30.8, 13132.0], [30.9, 13146.0], [31.0, 13170.0], [31.1, 13195.0], [31.2, 13238.0], [31.3, 13247.0], [31.4, 13306.0], [31.5, 13309.0], [31.6, 13347.0], [31.7, 13353.0], [31.8, 13368.0], [31.9, 13377.0], [32.0, 13421.0], [32.1, 13426.0], [32.2, 13450.0], [32.3, 13473.0], [32.4, 13501.0], [32.5, 13506.0], [32.6, 13542.0], [32.7, 13545.0], [32.8, 13567.0], [32.9, 13570.0], [33.0, 13577.0], [33.1, 13602.0], [33.2, 13614.0], [33.3, 13619.0], [33.4, 13657.0], [33.5, 13669.0], [33.6, 13681.0], [33.7, 13698.0], [33.8, 13733.0], [33.9, 13758.0], [34.0, 13767.0], [34.1, 13787.0], [34.2, 13787.0], [34.3, 13813.0], [34.4, 13813.0], [34.5, 13817.0], [34.6, 13865.0], [34.7, 13893.0], [34.8, 13926.0], [34.9, 13966.0], [35.0, 14006.0], [35.1, 14029.0], [35.2, 14041.0], [35.3, 14075.0], [35.4, 14137.0], [35.5, 14257.0], [35.6, 14259.0], [35.7, 14294.0], [35.8, 14296.0], [35.9, 14322.0], [36.0, 14374.0], [36.1, 14450.0], [36.2, 14479.0], [36.3, 14575.0], [36.4, 14582.0], [36.5, 14656.0], [36.6, 14667.0], [36.7, 14695.0], [36.8, 14695.0], [36.9, 14733.0], [37.0, 14796.0], [37.1, 14948.0], [37.2, 14967.0], [37.3, 15028.0], [37.4, 15035.0], [37.5, 15117.0], [37.6, 15191.0], [37.7, 15216.0], [37.8, 15220.0], [37.9, 15289.0], [38.0, 15402.0], [38.1, 15527.0], [38.2, 15632.0], [38.3, 15703.0], [38.4, 15723.0], [38.5, 15827.0], [38.6, 15916.0], [38.7, 16047.0], [38.8, 16100.0], [38.9, 16163.0], [39.0, 16234.0], [39.1, 16276.0], [39.2, 16279.0], [39.3, 16365.0], [39.4, 16370.0], [39.5, 16397.0], [39.6, 16488.0], [39.7, 16684.0], [39.8, 16695.0], [39.9, 16781.0], [40.0, 16785.0], [40.1, 16831.0], [40.2, 16873.0], [40.3, 16928.0], [40.4, 16933.0], [40.5, 16967.0], [40.6, 16997.0], [40.7, 17056.0], [40.8, 17168.0], [40.9, 17281.0], [41.0, 17329.0], [41.1, 17498.0], [41.2, 17559.0], [41.3, 17678.0], [41.4, 17685.0], [41.5, 17719.0], [41.6, 17845.0], [41.7, 17884.0], [41.8, 17963.0], [41.9, 18042.0], [42.0, 18080.0], [42.1, 18114.0], [42.2, 18157.0], [42.3, 18218.0], [42.4, 18223.0], [42.5, 18352.0], [42.6, 18363.0], [42.7, 18398.0], [42.8, 18402.0], [42.9, 18685.0], [43.0, 18709.0], [43.1, 18727.0], [43.2, 18745.0], [43.3, 18865.0], [43.4, 18884.0], [43.5, 19009.0], [43.6, 19096.0], [43.7, 19313.0], [43.8, 19317.0], [43.9, 19452.0], [44.0, 19460.0], [44.1, 19522.0], [44.2, 19775.0], [44.3, 19836.0], [44.4, 19898.0], [44.5, 19935.0], [44.6, 20110.0], [44.7, 20137.0], [44.8, 20137.0], [44.9, 20199.0], [45.0, 20214.0], [45.1, 20232.0], [45.2, 20352.0], [45.3, 20460.0], [45.4, 20485.0], [45.5, 20518.0], [45.6, 20543.0], [45.7, 20630.0], [45.8, 20664.0], [45.9, 20727.0], [46.0, 20926.0], [46.1, 20990.0], [46.2, 21068.0], [46.3, 21111.0], [46.4, 21287.0], [46.5, 21322.0], [46.6, 21341.0], [46.7, 21476.0], [46.8, 21543.0], [46.9, 21651.0], [47.0, 21670.0], [47.1, 22052.0], [47.2, 22064.0], [47.3, 22131.0], [47.4, 22148.0], [47.5, 22205.0], [47.6, 22390.0], [47.7, 22543.0], [47.8, 22606.0], [47.9, 22649.0], [48.0, 22673.0], [48.1, 22846.0], [48.2, 22865.0], [48.3, 22959.0], [48.4, 22983.0], [48.5, 23131.0], [48.6, 23153.0], [48.7, 23223.0], [48.8, 23244.0], [48.9, 23427.0], [49.0, 23438.0], [49.1, 23449.0], [49.2, 23477.0], [49.3, 23518.0], [49.4, 23546.0], [49.5, 23611.0], [49.6, 23699.0], [49.7, 23977.0], [49.8, 23984.0], [49.9, 24133.0], [50.0, 24148.0], [50.1, 24163.0], [50.2, 24297.0], [50.3, 24346.0], [50.4, 24360.0], [50.5, 24636.0], [50.6, 24699.0], [50.7, 24714.0], [50.8, 24795.0], [50.9, 24889.0], [51.0, 24937.0], [51.1, 25034.0], [51.2, 25110.0], [51.3, 25111.0], [51.4, 25163.0], [51.5, 25204.0], [51.6, 25264.0], [51.7, 25412.0], [51.8, 25425.0], [51.9, 25582.0], [52.0, 25613.0], [52.1, 25655.0], [52.2, 25668.0], [52.3, 25718.0], [52.4, 25739.0], [52.5, 25762.0], [52.6, 25808.0], [52.7, 26038.0], [52.8, 26101.0], [52.9, 26373.0], [53.0, 26448.0], [53.1, 26515.0], [53.2, 26641.0], [53.3, 26701.0], [53.4, 26739.0], [53.5, 26870.0], [53.6, 26946.0], [53.7, 27018.0], [53.8, 27019.0], [53.9, 27032.0], [54.0, 27058.0], [54.1, 27267.0], [54.2, 27289.0], [54.3, 27412.0], [54.4, 27526.0], [54.5, 27577.0], [54.6, 27592.0], [54.7, 27641.0], [54.8, 27726.0], [54.9, 27783.0], [55.0, 27827.0], [55.1, 27847.0], [55.2, 27891.0], [55.3, 28005.0], [55.4, 28009.0], [55.5, 28271.0], [55.6, 28306.0], [55.7, 28414.0], [55.8, 28439.0], [55.9, 28574.0], [56.0, 28709.0], [56.1, 28856.0], [56.2, 28908.0], [56.3, 29089.0], [56.4, 29211.0], [56.5, 29328.0], [56.6, 29346.0], [56.7, 29511.0], [56.8, 29565.0], [56.9, 29697.0], [57.0, 29807.0], [57.1, 29882.0], [57.2, 29958.0], [57.3, 30011.0], [57.4, 30046.0], [57.5, 30159.0], [57.6, 30161.0], [57.7, 30278.0], [57.8, 30307.0], [57.9, 30403.0], [58.0, 30403.0], [58.1, 30476.0], [58.2, 30501.0], [58.3, 30563.0], [58.4, 30583.0], [58.5, 30730.0], [58.6, 30837.0], [58.7, 30912.0], [58.8, 31004.0], [58.9, 31176.0], [59.0, 31179.0], [59.1, 31288.0], [59.2, 31332.0], [59.3, 31430.0], [59.4, 31458.0], [59.5, 31505.0], [59.6, 31508.0], [59.7, 31571.0], [59.8, 31785.0], [59.9, 31832.0], [60.0, 31856.0], [60.1, 31994.0], [60.2, 32053.0], [60.3, 32293.0], [60.4, 32307.0], [60.5, 32332.0], [60.6, 32503.0], [60.7, 32511.0], [60.8, 32572.0], [60.9, 32653.0], [61.0, 32655.0], [61.1, 32670.0], [61.2, 32797.0], [61.3, 32835.0], [61.4, 32835.0], [61.5, 32887.0], [61.6, 32902.0], [61.7, 33060.0], [61.8, 33178.0], [61.9, 33198.0], [62.0, 33214.0], [62.1, 33357.0], [62.2, 33369.0], [62.3, 33412.0], [62.4, 33537.0], [62.5, 33885.0], [62.6, 33896.0], [62.7, 34055.0], [62.8, 34183.0], [62.9, 34284.0], [63.0, 34392.0], [63.1, 34490.0], [63.2, 34536.0], [63.3, 34781.0], [63.4, 34791.0], [63.5, 34842.0], [63.6, 34852.0], [63.7, 35009.0], [63.8, 35067.0], [63.9, 35117.0], [64.0, 35125.0], [64.1, 35194.0], [64.2, 35197.0], [64.3, 35322.0], [64.4, 35368.0], [64.5, 35439.0], [64.6, 35458.0], [64.7, 35581.0], [64.8, 35654.0], [64.9, 35661.0], [65.0, 35667.0], [65.1, 35749.0], [65.2, 35773.0], [65.3, 35897.0], [65.4, 35897.0], [65.5, 35931.0], [65.6, 35977.0], [65.7, 36114.0], [65.8, 36117.0], [65.9, 36178.0], [66.0, 36318.0], [66.1, 36389.0], [66.2, 36412.0], [66.3, 36431.0], [66.4, 36454.0], [66.5, 36554.0], [66.6, 36603.0], [66.7, 36644.0], [66.8, 36666.0], [66.9, 36809.0], [67.0, 36811.0], [67.1, 37023.0], [67.2, 37049.0], [67.3, 37094.0], [67.4, 37114.0], [67.5, 37256.0], [67.6, 37310.0], [67.7, 37428.0], [67.8, 37452.0], [67.9, 37570.0], [68.0, 37649.0], [68.1, 37817.0], [68.2, 37924.0], [68.3, 38030.0], [68.4, 38136.0], [68.5, 38228.0], [68.6, 38265.0], [68.7, 38308.0], [68.8, 38315.0], [68.9, 38496.0], [69.0, 38571.0], [69.1, 38608.0], [69.2, 38625.0], [69.3, 38673.0], [69.4, 38681.0], [69.5, 38811.0], [69.6, 38813.0], [69.7, 38971.0], [69.8, 38992.0], [69.9, 39102.0], [70.0, 39127.0], [70.1, 39268.0], [70.2, 39279.0], [70.3, 39313.0], [70.4, 39406.0], [70.5, 39439.0], [70.6, 39462.0], [70.7, 39556.0], [70.8, 39578.0], [70.9, 39656.0], [71.0, 39695.0], [71.1, 39958.0], [71.2, 39992.0], [71.3, 40167.0], [71.4, 40219.0], [71.5, 40281.0], [71.6, 40317.0], [71.7, 40439.0], [71.8, 40476.0], [71.9, 40752.0], [72.0, 40858.0], [72.1, 40913.0], [72.2, 40919.0], [72.3, 40982.0], [72.4, 40986.0], [72.5, 41100.0], [72.6, 41189.0], [72.7, 41209.0], [72.8, 41230.0], [72.9, 41253.0], [73.0, 41286.0], [73.1, 41365.0], [73.2, 41390.0], [73.3, 41430.0], [73.4, 41452.0], [73.5, 41622.0], [73.6, 41694.0], [73.7, 41938.0], [73.8, 41957.0], [73.9, 41977.0], [74.0, 41983.0], [74.1, 42125.0], [74.2, 42133.0], [74.3, 42274.0], [74.4, 42279.0], [74.5, 42350.0], [74.6, 42461.0], [74.7, 42498.0], [74.8, 42503.0], [74.9, 42711.0], [75.0, 42765.0], [75.1, 42876.0], [75.2, 42878.0], [75.3, 42923.0], [75.4, 42981.0], [75.5, 43066.0], [75.6, 43109.0], [75.7, 43155.0], [75.8, 43185.0], [75.9, 43293.0], [76.0, 43322.0], [76.1, 43383.0], [76.2, 43394.0], [76.3, 43516.0], [76.4, 43549.0], [76.5, 43557.0], [76.6, 43572.0], [76.7, 43623.0], [76.8, 43822.0], [76.9, 43843.0], [77.0, 43860.0], [77.1, 43936.0], [77.2, 43950.0], [77.3, 44021.0], [77.4, 44031.0], [77.5, 44177.0], [77.6, 44183.0], [77.7, 44363.0], [77.8, 44396.0], [77.9, 44517.0], [78.0, 44635.0], [78.1, 44727.0], [78.2, 44809.0], [78.3, 44978.0], [78.4, 45025.0], [78.5, 45178.0], [78.6, 45237.0], [78.7, 45326.0], [78.8, 45334.0], [78.9, 45359.0], [79.0, 45378.0], [79.1, 45404.0], [79.2, 45409.0], [79.3, 45489.0], [79.4, 45532.0], [79.5, 45625.0], [79.6, 45668.0], [79.7, 45736.0], [79.8, 45795.0], [79.9, 45823.0], [80.0, 45885.0], [80.1, 45903.0], [80.2, 45912.0], [80.3, 45986.0], [80.4, 46136.0], [80.5, 46185.0], [80.6, 46198.0], [80.7, 46215.0], [80.8, 46216.0], [80.9, 46406.0], [81.0, 46408.0], [81.1, 46601.0], [81.2, 46624.0], [81.3, 46682.0], [81.4, 46712.0], [81.5, 46764.0], [81.6, 46837.0], [81.7, 46943.0], [81.8, 46962.0], [81.9, 47148.0], [82.0, 47172.0], [82.1, 47220.0], [82.2, 47253.0], [82.3, 47349.0], [82.4, 47353.0], [82.5, 47520.0], [82.6, 47557.0], [82.7, 47632.0], [82.8, 47762.0], [82.9, 47833.0], [83.0, 47839.0], [83.1, 47941.0], [83.2, 47990.0], [83.3, 48056.0], [83.4, 48217.0], [83.5, 48386.0], [83.6, 48403.0], [83.7, 48440.0], [83.8, 48468.0], [83.9, 48497.0], [84.0, 48500.0], [84.1, 48545.0], [84.2, 48601.0], [84.3, 48852.0], [84.4, 48866.0], [84.5, 48976.0], [84.6, 49008.0], [84.7, 49349.0], [84.8, 49427.0], [84.9, 49485.0], [85.0, 49504.0], [85.1, 49613.0], [85.2, 49638.0], [85.3, 49705.0], [85.4, 49710.0], [85.5, 49794.0], [85.6, 49828.0], [85.7, 49872.0], [85.8, 49913.0], [85.9, 50044.0], [86.0, 50131.0], [86.1, 50184.0], [86.2, 50249.0], [86.3, 50339.0], [86.4, 50495.0], [86.5, 50593.0], [86.6, 50625.0], [86.7, 50678.0], [86.8, 50686.0], [86.9, 50900.0], [87.0, 50947.0], [87.1, 50986.0], [87.2, 51083.0], [87.3, 51123.0], [87.4, 51179.0], [87.5, 51300.0], [87.6, 51316.0], [87.7, 51397.0], [87.8, 51438.0], [87.9, 51559.0], [88.0, 51574.0], [88.1, 51656.0], [88.2, 51686.0], [88.3, 51712.0], [88.4, 51735.0], [88.5, 51835.0], [88.6, 51845.0], [88.7, 51936.0], [88.8, 51966.0], [88.9, 52081.0], [89.0, 52222.0], [89.1, 52316.0], [89.2, 52327.0], [89.3, 52346.0], [89.4, 52426.0], [89.5, 52508.0], [89.6, 52627.0], [89.7, 52646.0], [89.8, 52766.0], [89.9, 52888.0], [90.0, 52954.0], [90.1, 52965.0], [90.2, 53213.0], [90.3, 53241.0], [90.4, 53441.0], [90.5, 53476.0], [90.6, 53582.0], [90.7, 53761.0], [90.8, 53847.0], [90.9, 54012.0], [91.0, 54034.0], [91.1, 54151.0], [91.2, 54296.0], [91.3, 54540.0], [91.4, 54570.0], [91.5, 54747.0], [91.6, 54906.0], [91.7, 54953.0], [91.8, 55026.0], [91.9, 55087.0], [92.0, 55175.0], [92.1, 55207.0], [92.2, 55311.0], [92.3, 55334.0], [92.4, 55436.0], [92.5, 55446.0], [92.6, 55488.0], [92.7, 55553.0], [92.8, 55672.0], [92.9, 55673.0], [93.0, 55793.0], [93.1, 55817.0], [93.2, 55835.0], [93.3, 55881.0], [93.4, 56059.0], [93.5, 56064.0], [93.6, 56247.0], [93.7, 56393.0], [93.8, 56493.0], [93.9, 56606.0], [94.0, 56815.0], [94.1, 56919.0], [94.2, 57088.0], [94.3, 57088.0], [94.4, 57187.0], [94.5, 57207.0], [94.6, 57402.0], [94.7, 57492.0], [94.8, 57526.0], [94.9, 57670.0], [95.0, 57681.0], [95.1, 57800.0], [95.2, 57817.0], [95.3, 57842.0], [95.4, 58216.0], [95.5, 58237.0], [95.6, 58267.0], [95.7, 58291.0], [95.8, 58374.0], [95.9, 58415.0], [96.0, 58514.0], [96.1, 58606.0], [96.2, 58915.0], [96.3, 58926.0], [96.4, 59124.0], [96.5, 59258.0], [96.6, 59317.0], [96.7, 59360.0], [96.8, 59796.0], [96.9, 59810.0], [97.0, 59897.0], [97.1, 59984.0], [97.2, 60234.0], [97.3, 60247.0], [97.4, 60485.0], [97.5, 60562.0], [97.6, 60648.0], [97.7, 60849.0], [97.8, 60860.0], [97.9, 60890.0], [98.0, 60973.0], [98.1, 60992.0], [98.2, 61428.0], [98.3, 61441.0], [98.4, 61608.0], [98.5, 61931.0], [98.6, 62160.0], [98.7, 62289.0], [98.8, 62784.0], [98.9, 62838.0], [99.0, 62931.0], [99.1, 63407.0], [99.2, 63693.0], [99.3, 63828.0], [99.4, 64158.0], [99.5, 64320.0], [99.6, 64916.0], [99.7, 65035.0], [99.8, 65693.0], [99.9, 66237.0]], "isOverall": false, "label": "login ", "isController": false}, {"data": [[0.0, 4616.0], [0.1, 5433.0], [0.2, 6039.0], [0.3, 6148.0], [0.4, 9036.0], [0.5, 9066.0], [0.6, 9830.0], [0.7, 11168.0], [0.8, 12187.0], [0.9, 12433.0], [1.0, 14355.0], [1.1, 14554.0], [1.2, 15706.0], [1.3, 15788.0], [1.4, 19341.0], [1.5, 19617.0], [1.6, 20081.0], [1.7, 21157.0], [1.8, 22945.0], [1.9, 23036.0], [2.0, 23188.0], [2.1, 23301.0], [2.2, 23417.0], [2.3, 23503.0], [2.4, 23518.0], [2.5, 24058.0], [2.6, 24396.0], [2.7, 24800.0], [2.8, 24894.0], [2.9, 25422.0], [3.0, 25548.0], [3.1, 25965.0], [3.2, 26037.0], [3.3, 26136.0], [3.4, 26374.0], [3.5, 26589.0], [3.6, 26603.0], [3.7, 26709.0], [3.8, 26733.0], [3.9, 26850.0], [4.0, 26870.0], [4.1, 26985.0], [4.2, 26985.0], [4.3, 27174.0], [4.4, 27484.0], [4.5, 27541.0], [4.6, 27611.0], [4.7, 27690.0], [4.8, 27699.0], [4.9, 27895.0], [5.0, 27917.0], [5.1, 28198.0], [5.2, 28211.0], [5.3, 28460.0], [5.4, 28471.0], [5.5, 28562.0], [5.6, 28751.0], [5.7, 28922.0], [5.8, 28987.0], [5.9, 29066.0], [6.0, 29123.0], [6.1, 29157.0], [6.2, 29212.0], [6.3, 29221.0], [6.4, 29406.0], [6.5, 29422.0], [6.6, 29478.0], [6.7, 29533.0], [6.8, 29643.0], [6.9, 29669.0], [7.0, 29729.0], [7.1, 29732.0], [7.2, 29767.0], [7.3, 29796.0], [7.4, 29871.0], [7.5, 29873.0], [7.6, 29912.0], [7.7, 29925.0], [7.8, 30006.0], [7.9, 30007.0], [8.0, 30094.0], [8.1, 30106.0], [8.2, 30127.0], [8.3, 30131.0], [8.4, 30238.0], [8.5, 30299.0], [8.6, 30388.0], [8.7, 30619.0], [8.8, 30646.0], [8.9, 30692.0], [9.0, 30835.0], [9.1, 30843.0], [9.2, 30884.0], [9.3, 30990.0], [9.4, 31171.0], [9.5, 31176.0], [9.6, 31381.0], [9.7, 31389.0], [9.8, 31399.0], [9.9, 31442.0], [10.0, 31529.0], [10.1, 31565.0], [10.2, 31658.0], [10.3, 31711.0], [10.4, 31772.0], [10.5, 31827.0], [10.6, 31868.0], [10.7, 31870.0], [10.8, 31891.0], [10.9, 31918.0], [11.0, 31953.0], [11.1, 32035.0], [11.2, 32114.0], [11.3, 32157.0], [11.4, 32236.0], [11.5, 32287.0], [11.6, 32391.0], [11.7, 32482.0], [11.8, 32559.0], [11.9, 32566.0], [12.0, 32598.0], [12.1, 32670.0], [12.2, 32766.0], [12.3, 32897.0], [12.4, 33060.0], [12.5, 33078.0], [12.6, 33120.0], [12.7, 33192.0], [12.8, 33238.0], [12.9, 33362.0], [13.0, 33402.0], [13.1, 33431.0], [13.2, 33670.0], [13.3, 33698.0], [13.4, 33783.0], [13.5, 33862.0], [13.6, 33966.0], [13.7, 33983.0], [13.8, 34087.0], [13.9, 34139.0], [14.0, 34175.0], [14.1, 34185.0], [14.2, 34404.0], [14.3, 34456.0], [14.4, 34558.0], [14.5, 34635.0], [14.6, 34679.0], [14.7, 34695.0], [14.8, 34869.0], [14.9, 34889.0], [15.0, 35059.0], [15.1, 35074.0], [15.2, 35078.0], [15.3, 35111.0], [15.4, 35183.0], [15.5, 35193.0], [15.6, 35230.0], [15.7, 35267.0], [15.8, 35366.0], [15.9, 35406.0], [16.0, 35577.0], [16.1, 35613.0], [16.2, 35638.0], [16.3, 35652.0], [16.4, 35708.0], [16.5, 35864.0], [16.6, 35955.0], [16.7, 35977.0], [16.8, 36051.0], [16.9, 36057.0], [17.0, 36117.0], [17.1, 36176.0], [17.2, 36372.0], [17.3, 36374.0], [17.4, 36542.0], [17.5, 36626.0], [17.6, 36653.0], [17.7, 36779.0], [17.8, 36878.0], [17.9, 36954.0], [18.0, 37121.0], [18.1, 37149.0], [18.2, 37467.0], [18.3, 37473.0], [18.4, 37688.0], [18.5, 37690.0], [18.6, 37752.0], [18.7, 37762.0], [18.8, 37821.0], [18.9, 37826.0], [19.0, 37908.0], [19.1, 37925.0], [19.2, 37965.0], [19.3, 38017.0], [19.4, 38084.0], [19.5, 38125.0], [19.6, 38146.0], [19.7, 38224.0], [19.8, 38278.0], [19.9, 38331.0], [20.0, 38356.0], [20.1, 38356.0], [20.2, 38491.0], [20.3, 38506.0], [20.4, 38573.0], [20.5, 38708.0], [20.6, 38800.0], [20.7, 38855.0], [20.8, 38932.0], [20.9, 39020.0], [21.0, 39079.0], [21.1, 39126.0], [21.2, 39242.0], [21.3, 39267.0], [21.4, 39293.0], [21.5, 39306.0], [21.6, 39398.0], [21.7, 39408.0], [21.8, 39445.0], [21.9, 39476.0], [22.0, 39507.0], [22.1, 39611.0], [22.2, 39655.0], [22.3, 39868.0], [22.4, 39952.0], [22.5, 39957.0], [22.6, 40039.0], [22.7, 40132.0], [22.8, 40212.0], [22.9, 40227.0], [23.0, 40358.0], [23.1, 40371.0], [23.2, 40478.0], [23.3, 40505.0], [23.4, 40584.0], [23.5, 40598.0], [23.6, 40608.0], [23.7, 40621.0], [23.8, 40672.0], [23.9, 40745.0], [24.0, 40770.0], [24.1, 40781.0], [24.2, 40863.0], [24.3, 40904.0], [24.4, 40978.0], [24.5, 40995.0], [24.6, 41077.0], [24.7, 41118.0], [24.8, 41174.0], [24.9, 41198.0], [25.0, 41312.0], [25.1, 41323.0], [25.2, 41373.0], [25.3, 41424.0], [25.4, 41463.0], [25.5, 41464.0], [25.6, 41526.0], [25.7, 41558.0], [25.8, 41627.0], [25.9, 41638.0], [26.0, 41681.0], [26.1, 41721.0], [26.2, 41739.0], [26.3, 41750.0], [26.4, 41984.0], [26.5, 42039.0], [26.6, 42048.0], [26.7, 42156.0], [26.8, 42196.0], [26.9, 42208.0], [27.0, 42339.0], [27.1, 42400.0], [27.2, 42442.0], [27.3, 42468.0], [27.4, 42488.0], [27.5, 42551.0], [27.6, 42641.0], [27.7, 42679.0], [27.8, 42719.0], [27.9, 42856.0], [28.0, 42927.0], [28.1, 42958.0], [28.2, 43122.0], [28.3, 43189.0], [28.4, 43337.0], [28.5, 43367.0], [28.6, 43453.0], [28.7, 43539.0], [28.8, 43706.0], [28.9, 43749.0], [29.0, 43887.0], [29.1, 43928.0], [29.2, 44122.0], [29.3, 44132.0], [29.4, 44367.0], [29.5, 44380.0], [29.6, 44491.0], [29.7, 44500.0], [29.8, 44606.0], [29.9, 44673.0], [30.0, 44696.0], [30.1, 44706.0], [30.2, 44795.0], [30.3, 44878.0], [30.4, 44953.0], [30.5, 45003.0], [30.6, 45141.0], [30.7, 45216.0], [30.8, 45239.0], [30.9, 45273.0], [31.0, 45347.0], [31.1, 45352.0], [31.2, 45393.0], [31.3, 45411.0], [31.4, 45475.0], [31.5, 45619.0], [31.6, 45638.0], [31.7, 45661.0], [31.8, 45689.0], [31.9, 45733.0], [32.0, 45950.0], [32.1, 46010.0], [32.2, 46086.0], [32.3, 46131.0], [32.4, 46169.0], [32.5, 46246.0], [32.6, 46290.0], [32.7, 46293.0], [32.8, 46326.0], [32.9, 46346.0], [33.0, 46464.0], [33.1, 46485.0], [33.2, 46584.0], [33.3, 46623.0], [33.4, 46662.0], [33.5, 46676.0], [33.6, 46800.0], [33.7, 46807.0], [33.8, 46858.0], [33.9, 46916.0], [34.0, 46978.0], [34.1, 47136.0], [34.2, 47245.0], [34.3, 47310.0], [34.4, 47404.0], [34.5, 47491.0], [34.6, 47499.0], [34.7, 47513.0], [34.8, 47515.0], [34.9, 47671.0], [35.0, 47679.0], [35.1, 47701.0], [35.2, 47776.0], [35.3, 47885.0], [35.4, 47951.0], [35.5, 48059.0], [35.6, 48116.0], [35.7, 48200.0], [35.8, 48297.0], [35.9, 48375.0], [36.0, 48427.0], [36.1, 48496.0], [36.2, 48503.0], [36.3, 48707.0], [36.4, 48732.0], [36.5, 48784.0], [36.6, 48807.0], [36.7, 48872.0], [36.8, 49171.0], [36.9, 49180.0], [37.0, 49181.0], [37.1, 49239.0], [37.2, 49248.0], [37.3, 49292.0], [37.4, 49292.0], [37.5, 49369.0], [37.6, 49515.0], [37.7, 49643.0], [37.8, 49655.0], [37.9, 49678.0], [38.0, 49689.0], [38.1, 49717.0], [38.2, 49767.0], [38.3, 49792.0], [38.4, 49815.0], [38.5, 49980.0], [38.6, 49991.0], [38.7, 50055.0], [38.8, 50069.0], [38.9, 50135.0], [39.0, 50158.0], [39.1, 50274.0], [39.2, 50379.0], [39.3, 50438.0], [39.4, 50587.0], [39.5, 50709.0], [39.6, 50716.0], [39.7, 50739.0], [39.8, 50741.0], [39.9, 50867.0], [40.0, 50929.0], [40.1, 51022.0], [40.2, 51028.0], [40.3, 51153.0], [40.4, 51177.0], [40.5, 51218.0], [40.6, 51253.0], [40.7, 51620.0], [40.8, 51652.0], [40.9, 51685.0], [41.0, 51723.0], [41.1, 51835.0], [41.2, 51848.0], [41.3, 51931.0], [41.4, 52081.0], [41.5, 52140.0], [41.6, 52144.0], [41.7, 52228.0], [41.8, 52302.0], [41.9, 52324.0], [42.0, 52330.0], [42.1, 52425.0], [42.2, 52472.0], [42.3, 52580.0], [42.4, 52602.0], [42.5, 52657.0], [42.6, 52745.0], [42.7, 52766.0], [42.8, 52822.0], [42.9, 52906.0], [43.0, 52915.0], [43.1, 52929.0], [43.2, 52977.0], [43.3, 53073.0], [43.4, 53087.0], [43.5, 53128.0], [43.6, 53150.0], [43.7, 53258.0], [43.8, 53271.0], [43.9, 53303.0], [44.0, 53452.0], [44.1, 53488.0], [44.2, 53580.0], [44.3, 53712.0], [44.4, 53820.0], [44.5, 53841.0], [44.6, 53860.0], [44.7, 53894.0], [44.8, 53918.0], [44.9, 53933.0], [45.0, 54104.0], [45.1, 54184.0], [45.2, 54199.0], [45.3, 54507.0], [45.4, 54518.0], [45.5, 54548.0], [45.6, 54549.0], [45.7, 54743.0], [45.8, 54789.0], [45.9, 54900.0], [46.0, 54930.0], [46.1, 55072.0], [46.2, 55078.0], [46.3, 55136.0], [46.4, 55353.0], [46.5, 55451.0], [46.6, 55456.0], [46.7, 55580.0], [46.8, 55594.0], [46.9, 55724.0], [47.0, 55737.0], [47.1, 55847.0], [47.2, 55870.0], [47.3, 55988.0], [47.4, 56130.0], [47.5, 56246.0], [47.6, 56363.0], [47.7, 56445.0], [47.8, 56451.0], [47.9, 56492.0], [48.0, 56499.0], [48.1, 56572.0], [48.2, 56822.0], [48.3, 56926.0], [48.4, 56951.0], [48.5, 57161.0], [48.6, 57236.0], [48.7, 57351.0], [48.8, 57399.0], [48.9, 57474.0], [49.0, 57518.0], [49.1, 57628.0], [49.2, 57668.0], [49.3, 57726.0], [49.4, 57735.0], [49.5, 57798.0], [49.6, 57815.0], [49.7, 57944.0], [49.8, 57982.0], [49.9, 58008.0], [50.0, 58029.0], [50.1, 58085.0], [50.2, 58102.0], [50.3, 58251.0], [50.4, 58252.0], [50.5, 58404.0], [50.6, 58443.0], [50.7, 58471.0], [50.8, 58537.0], [50.9, 58590.0], [51.0, 58605.0], [51.1, 58776.0], [51.2, 58792.0], [51.3, 58929.0], [51.4, 58939.0], [51.5, 59081.0], [51.6, 59097.0], [51.7, 59175.0], [51.8, 59206.0], [51.9, 59334.0], [52.0, 59368.0], [52.1, 59385.0], [52.2, 59392.0], [52.3, 59651.0], [52.4, 59689.0], [52.5, 59773.0], [52.6, 59806.0], [52.7, 59857.0], [52.8, 59883.0], [52.9, 59940.0], [53.0, 60073.0], [53.1, 60152.0], [53.2, 60180.0], [53.3, 60245.0], [53.4, 60327.0], [53.5, 60389.0], [53.6, 60428.0], [53.7, 60583.0], [53.8, 60617.0], [53.9, 60689.0], [54.0, 60736.0], [54.1, 60811.0], [54.2, 60936.0], [54.3, 61086.0], [54.4, 61089.0], [54.5, 61115.0], [54.6, 61134.0], [54.7, 61203.0], [54.8, 61217.0], [54.9, 61282.0], [55.0, 61414.0], [55.1, 61503.0], [55.2, 61552.0], [55.3, 61662.0], [55.4, 61742.0], [55.5, 61954.0], [55.6, 61958.0], [55.7, 62069.0], [55.8, 62126.0], [55.9, 62200.0], [56.0, 62237.0], [56.1, 62298.0], [56.2, 62385.0], [56.3, 62402.0], [56.4, 62443.0], [56.5, 62478.0], [56.6, 62520.0], [56.7, 62605.0], [56.8, 62667.0], [56.9, 62764.0], [57.0, 62767.0], [57.1, 62812.0], [57.2, 62911.0], [57.3, 62963.0], [57.4, 62993.0], [57.5, 63153.0], [57.6, 63153.0], [57.7, 63202.0], [57.8, 63227.0], [57.9, 63307.0], [58.0, 63560.0], [58.1, 63576.0], [58.2, 63644.0], [58.3, 63654.0], [58.4, 63751.0], [58.5, 63795.0], [58.6, 63816.0], [58.7, 63913.0], [58.8, 63938.0], [58.9, 63997.0], [59.0, 64007.0], [59.1, 64131.0], [59.2, 64180.0], [59.3, 64281.0], [59.4, 64296.0], [59.5, 64404.0], [59.6, 64501.0], [59.7, 64581.0], [59.8, 64595.0], [59.9, 64626.0], [60.0, 64640.0], [60.1, 64710.0], [60.2, 64727.0], [60.3, 64851.0], [60.4, 64876.0], [60.5, 64978.0], [60.6, 65012.0], [60.7, 65112.0], [60.8, 65156.0], [60.9, 65176.0], [61.0, 65194.0], [61.1, 65311.0], [61.2, 65467.0], [61.3, 65477.0], [61.4, 65491.0], [61.5, 65578.0], [61.6, 65583.0], [61.7, 65643.0], [61.8, 65646.0], [61.9, 65741.0], [62.0, 65743.0], [62.1, 65799.0], [62.2, 65894.0], [62.3, 65911.0], [62.4, 65930.0], [62.5, 65972.0], [62.6, 65978.0], [62.7, 66109.0], [62.8, 66145.0], [62.9, 66219.0], [63.0, 66253.0], [63.1, 66407.0], [63.2, 66410.0], [63.3, 66438.0], [63.4, 66455.0], [63.5, 66540.0], [63.6, 66649.0], [63.7, 66709.0], [63.8, 66810.0], [63.9, 66907.0], [64.0, 66963.0], [64.1, 66993.0], [64.2, 67049.0], [64.3, 67076.0], [64.4, 67115.0], [64.5, 67129.0], [64.6, 67231.0], [64.7, 67349.0], [64.8, 67356.0], [64.9, 67408.0], [65.0, 67440.0], [65.1, 67496.0], [65.2, 67510.0], [65.3, 67643.0], [65.4, 67679.0], [65.5, 67718.0], [65.6, 67831.0], [65.7, 67927.0], [65.8, 67928.0], [65.9, 67986.0], [66.0, 68007.0], [66.1, 68084.0], [66.2, 68175.0], [66.3, 68220.0], [66.4, 68231.0], [66.5, 68316.0], [66.6, 68338.0], [66.7, 68411.0], [66.8, 68428.0], [66.9, 68487.0], [67.0, 68497.0], [67.1, 68605.0], [67.2, 68625.0], [67.3, 68715.0], [67.4, 68723.0], [67.5, 68786.0], [67.6, 68800.0], [67.7, 68906.0], [67.8, 69013.0], [67.9, 69192.0], [68.0, 69205.0], [68.1, 69276.0], [68.2, 69312.0], [68.3, 69333.0], [68.4, 69484.0], [68.5, 69529.0], [68.6, 69532.0], [68.7, 69651.0], [68.8, 69698.0], [68.9, 69719.0], [69.0, 69727.0], [69.1, 69800.0], [69.2, 69848.0], [69.3, 69910.0], [69.4, 69963.0], [69.5, 70158.0], [69.6, 70198.0], [69.7, 70238.0], [69.8, 70307.0], [69.9, 70442.0], [70.0, 70597.0], [70.1, 70631.0], [70.2, 70672.0], [70.3, 70725.0], [70.4, 70768.0], [70.5, 70799.0], [70.6, 70833.0], [70.7, 70890.0], [70.8, 70929.0], [70.9, 71024.0], [71.0, 71049.0], [71.1, 71097.0], [71.2, 71099.0], [71.3, 71139.0], [71.4, 71164.0], [71.5, 71257.0], [71.6, 71325.0], [71.7, 71358.0], [71.8, 71362.0], [71.9, 71451.0], [72.0, 71451.0], [72.1, 71511.0], [72.2, 71624.0], [72.3, 71686.0], [72.4, 71732.0], [72.5, 71820.0], [72.6, 71994.0], [72.7, 72046.0], [72.8, 72071.0], [72.9, 72156.0], [73.0, 72179.0], [73.1, 72205.0], [73.2, 72297.0], [73.3, 72426.0], [73.4, 72468.0], [73.5, 72516.0], [73.6, 72606.0], [73.7, 72622.0], [73.8, 72643.0], [73.9, 72666.0], [74.0, 72680.0], [74.1, 72840.0], [74.2, 72871.0], [74.3, 72912.0], [74.4, 72930.0], [74.5, 72964.0], [74.6, 73041.0], [74.7, 73087.0], [74.8, 73114.0], [74.9, 73167.0], [75.0, 73221.0], [75.1, 73280.0], [75.2, 73286.0], [75.3, 73329.0], [75.4, 73377.0], [75.5, 73439.0], [75.6, 73479.0], [75.7, 73621.0], [75.8, 73684.0], [75.9, 73737.0], [76.0, 73823.0], [76.1, 73930.0], [76.2, 74072.0], [76.3, 74122.0], [76.4, 74158.0], [76.5, 74196.0], [76.6, 74234.0], [76.7, 74392.0], [76.8, 74559.0], [76.9, 74687.0], [77.0, 74693.0], [77.1, 74825.0], [77.2, 74909.0], [77.3, 75087.0], [77.4, 75089.0], [77.5, 75141.0], [77.6, 75169.0], [77.7, 75293.0], [77.8, 75331.0], [77.9, 75441.0], [78.0, 75459.0], [78.1, 75503.0], [78.2, 75520.0], [78.3, 75678.0], [78.4, 75785.0], [78.5, 75837.0], [78.6, 75914.0], [78.7, 75987.0], [78.8, 76004.0], [78.9, 76109.0], [79.0, 76197.0], [79.1, 76278.0], [79.2, 76307.0], [79.3, 76349.0], [79.4, 76359.0], [79.5, 76382.0], [79.6, 76465.0], [79.7, 76525.0], [79.8, 76535.0], [79.9, 76678.0], [80.0, 76681.0], [80.1, 76853.0], [80.2, 76860.0], [80.3, 77010.0], [80.4, 77028.0], [80.5, 77164.0], [80.6, 77190.0], [80.7, 77239.0], [80.8, 77243.0], [80.9, 77254.0], [81.0, 77287.0], [81.1, 77338.0], [81.2, 77368.0], [81.3, 77493.0], [81.4, 77520.0], [81.5, 77572.0], [81.6, 77590.0], [81.7, 77609.0], [81.8, 77835.0], [81.9, 77935.0], [82.0, 77978.0], [82.1, 78155.0], [82.2, 78192.0], [82.3, 78282.0], [82.4, 78352.0], [82.5, 78560.0], [82.6, 78571.0], [82.7, 78599.0], [82.8, 78694.0], [82.9, 78734.0], [83.0, 78862.0], [83.1, 78945.0], [83.2, 78973.0], [83.3, 79038.0], [83.4, 79110.0], [83.5, 79118.0], [83.6, 79176.0], [83.7, 79238.0], [83.8, 79308.0], [83.9, 79351.0], [84.0, 79383.0], [84.1, 79487.0], [84.2, 79487.0], [84.3, 79555.0], [84.4, 79588.0], [84.5, 79628.0], [84.6, 79630.0], [84.7, 79700.0], [84.8, 79775.0], [84.9, 79802.0], [85.0, 79814.0], [85.1, 79883.0], [85.2, 79888.0], [85.3, 79924.0], [85.4, 79964.0], [85.5, 80064.0], [85.6, 80113.0], [85.7, 80145.0], [85.8, 80157.0], [85.9, 80276.0], [86.0, 80290.0], [86.1, 80302.0], [86.2, 80337.0], [86.3, 80385.0], [86.4, 80386.0], [86.5, 80420.0], [86.6, 80466.0], [86.7, 80503.0], [86.8, 80515.0], [86.9, 80555.0], [87.0, 80556.0], [87.1, 80638.0], [87.2, 80648.0], [87.3, 80697.0], [87.4, 80716.0], [87.5, 80802.0], [87.6, 80872.0], [87.7, 80878.0], [87.8, 80881.0], [87.9, 80930.0], [88.0, 80990.0], [88.1, 81062.0], [88.2, 81065.0], [88.3, 81138.0], [88.4, 81147.0], [88.5, 81163.0], [88.6, 81167.0], [88.7, 81187.0], [88.8, 81253.0], [88.9, 81330.0], [89.0, 81351.0], [89.1, 81374.0], [89.2, 81405.0], [89.3, 81442.0], [89.4, 81496.0], [89.5, 81536.0], [89.6, 81656.0], [89.7, 81954.0], [89.8, 81954.0], [89.9, 81968.0], [90.0, 81968.0], [90.1, 82003.0], [90.2, 82005.0], [90.3, 82031.0], [90.4, 82111.0], [90.5, 82181.0], [90.6, 82211.0], [90.7, 82261.0], [90.8, 82306.0], [90.9, 82382.0], [91.0, 82402.0], [91.1, 82438.0], [91.2, 82478.0], [91.3, 82525.0], [91.4, 82545.0], [91.5, 82591.0], [91.6, 82647.0], [91.7, 82727.0], [91.8, 82770.0], [91.9, 82782.0], [92.0, 82863.0], [92.1, 82917.0], [92.2, 82992.0], [92.3, 83052.0], [92.4, 83139.0], [92.5, 83191.0], [92.6, 83254.0], [92.7, 83280.0], [92.8, 83476.0], [92.9, 83482.0], [93.0, 83601.0], [93.1, 83738.0], [93.2, 83747.0], [93.3, 83750.0], [93.4, 83787.0], [93.5, 83800.0], [93.6, 83864.0], [93.7, 83900.0], [93.8, 84006.0], [93.9, 84033.0], [94.0, 84108.0], [94.1, 84123.0], [94.2, 84158.0], [94.3, 84183.0], [94.4, 84219.0], [94.5, 84524.0], [94.6, 84581.0], [94.7, 84643.0], [94.8, 84694.0], [94.9, 84713.0], [95.0, 84749.0], [95.1, 84830.0], [95.2, 84980.0], [95.3, 84989.0], [95.4, 84994.0], [95.5, 85036.0], [95.6, 85183.0], [95.7, 85189.0], [95.8, 85213.0], [95.9, 85269.0], [96.0, 85336.0], [96.1, 85410.0], [96.2, 85412.0], [96.3, 85423.0], [96.4, 85518.0], [96.5, 85561.0], [96.6, 85657.0], [96.7, 85685.0], [96.8, 85735.0], [96.9, 85765.0], [97.0, 85868.0], [97.1, 85977.0], [97.2, 86130.0], [97.3, 86180.0], [97.4, 86370.0], [97.5, 86389.0], [97.6, 86591.0], [97.7, 86650.0], [97.8, 86727.0], [97.9, 87236.0], [98.0, 87417.0], [98.1, 87430.0], [98.2, 87894.0], [98.3, 88001.0], [98.4, 88300.0], [98.5, 88433.0], [98.6, 89122.0], [98.7, 89211.0], [98.8, 89650.0], [98.9, 89778.0], [99.0, 90314.0], [99.1, 90519.0], [99.2, 90577.0], [99.3, 90828.0], [99.4, 91148.0], [99.5, 91277.0], [99.6, 91435.0], [99.7, 91502.0], [99.8, 91803.0], [99.9, 91973.0]], "isOverall": false, "label": "logout", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 400.0, "maxY": 18.0, "series": [{"data": [[32900.0, 2.0], [34500.0, 1.0], [35300.0, 2.0], [36100.0, 4.0], [38500.0, 1.0], [37700.0, 1.0], [40900.0, 5.0], [40100.0, 1.0], [39300.0, 1.0], [41700.0, 1.0], [42500.0, 2.0], [44100.0, 3.0], [43300.0, 4.0], [44900.0, 2.0], [46500.0, 1.0], [45700.0, 2.0], [48900.0, 2.0], [47300.0, 2.0], [49700.0, 4.0], [50500.0, 2.0], [51300.0, 4.0], [52900.0, 3.0], [54500.0, 3.0], [53700.0, 1.0], [56900.0, 1.0], [55300.0, 4.0], [56100.0, 1.0], [59300.0, 2.0], [58500.0, 1.0], [60900.0, 3.0], [64100.0, 1.0], [64900.0, 1.0], [400.0, 1.0], [500.0, 6.0], [600.0, 18.0], [700.0, 1.0], [900.0, 1.0], [1000.0, 1.0], [1100.0, 1.0], [1200.0, 4.0], [1300.0, 1.0], [1400.0, 4.0], [1500.0, 4.0], [1600.0, 3.0], [1700.0, 2.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 1.0], [2100.0, 1.0], [2200.0, 1.0], [2300.0, 3.0], [2500.0, 3.0], [2600.0, 1.0], [2700.0, 1.0], [2800.0, 1.0], [2900.0, 1.0], [3000.0, 1.0], [3200.0, 5.0], [3500.0, 4.0], [3600.0, 5.0], [3700.0, 2.0], [3800.0, 5.0], [3900.0, 5.0], [4000.0, 3.0], [4300.0, 8.0], [4200.0, 11.0], [4100.0, 7.0], [4500.0, 6.0], [4600.0, 12.0], [4400.0, 5.0], [4800.0, 7.0], [4700.0, 4.0], [5100.0, 7.0], [4900.0, 3.0], [5000.0, 4.0], [5200.0, 4.0], [5300.0, 3.0], [5500.0, 5.0], [5600.0, 8.0], [5400.0, 1.0], [5800.0, 6.0], [5700.0, 3.0], [5900.0, 3.0], [6000.0, 3.0], [6100.0, 1.0], [6300.0, 4.0], [6200.0, 3.0], [6500.0, 2.0], [6600.0, 4.0], [6700.0, 3.0], [6900.0, 2.0], [6800.0, 1.0], [7100.0, 4.0], [7000.0, 5.0], [7300.0, 3.0], [7400.0, 5.0], [7200.0, 4.0], [7500.0, 4.0], [7600.0, 4.0], [7700.0, 4.0], [7900.0, 7.0], [7800.0, 1.0], [8100.0, 3.0], [8000.0, 2.0], [8400.0, 7.0], [8600.0, 2.0], [8200.0, 2.0], [9200.0, 7.0], [8800.0, 5.0], [9000.0, 1.0], [9600.0, 4.0], [9400.0, 1.0], [10200.0, 1.0], [10600.0, 4.0], [10400.0, 1.0], [11200.0, 6.0], [11000.0, 7.0], [10800.0, 2.0], [11600.0, 6.0], [11400.0, 5.0], [12200.0, 3.0], [12000.0, 2.0], [11800.0, 4.0], [12600.0, 5.0], [12400.0, 4.0], [13200.0, 4.0], [13000.0, 5.0], [12800.0, 4.0], [13600.0, 10.0], [13400.0, 7.0], [13800.0, 7.0], [14000.0, 6.0], [14200.0, 5.0], [14600.0, 7.0], [14400.0, 2.0], [14800.0, 1.0], [15000.0, 3.0], [15200.0, 4.0], [15800.0, 1.0], [15400.0, 2.0], [15600.0, 2.0], [16000.0, 2.0], [16200.0, 4.0], [16800.0, 3.0], [16400.0, 1.0], [17200.0, 1.0], [18000.0, 4.0], [18400.0, 2.0], [17600.0, 3.0], [18800.0, 3.0], [19200.0, 1.0], [20400.0, 3.0], [21200.0, 2.0], [21600.0, 3.0], [22000.0, 3.0], [22800.0, 4.0], [23200.0, 3.0], [24400.0, 1.0], [23600.0, 3.0], [25200.0, 2.0], [24800.0, 2.0], [25600.0, 5.0], [26400.0, 2.0], [26000.0, 2.0], [27200.0, 2.0], [27600.0, 2.0], [26800.0, 2.0], [28400.0, 2.0], [28000.0, 2.0], [29600.0, 1.0], [29200.0, 1.0], [28800.0, 1.0], [30400.0, 4.0], [30000.0, 2.0], [30800.0, 2.0], [31200.0, 1.0], [32000.0, 2.0], [33600.0, 1.0], [32800.0, 5.0], [34400.0, 2.0], [36800.0, 3.0], [36000.0, 1.0], [35200.0, 1.0], [37600.0, 1.0], [38400.0, 1.0], [39200.0, 3.0], [40800.0, 2.0], [40000.0, 1.0], [41600.0, 2.0], [42400.0, 3.0], [44000.0, 2.0], [44800.0, 1.0], [43200.0, 1.0], [45600.0, 3.0], [46400.0, 2.0], [48000.0, 2.0], [48800.0, 2.0], [47200.0, 3.0], [49600.0, 3.0], [50400.0, 1.0], [52800.0, 1.0], [52000.0, 2.0], [51200.0, 1.0], [55200.0, 1.0], [56000.0, 2.0], [56800.0, 1.0], [59200.0, 2.0], [57600.0, 3.0], [58400.0, 2.0], [60800.0, 4.0], [62400.0, 1.0], [61600.0, 1.0], [65600.0, 1.0], [34700.0, 3.0], [33100.0, 3.0], [36300.0, 3.0], [35500.0, 1.0], [37100.0, 2.0], [37900.0, 2.0], [39500.0, 4.0], [40300.0, 1.0], [41900.0, 5.0], [41100.0, 3.0], [42700.0, 2.0], [43500.0, 5.0], [44300.0, 2.0], [46700.0, 3.0], [45900.0, 4.0], [45100.0, 2.0], [47500.0, 2.0], [48300.0, 2.0], [49900.0, 2.0], [50700.0, 1.0], [52300.0, 6.0], [51500.0, 2.0], [54700.0, 1.0], [57100.0, 2.0], [55500.0, 1.0], [56300.0, 1.0], [57900.0, 1.0], [59500.0, 1.0], [61900.0, 1.0], [62700.0, 1.0], [64300.0, 1.0], [67800.0, 1.0], [66200.0, 1.0], [17300.0, 2.0], [16900.0, 6.0], [16500.0, 1.0], [18100.0, 3.0], [17700.0, 1.0], [18900.0, 1.0], [19300.0, 3.0], [19700.0, 1.0], [20100.0, 6.0], [20500.0, 4.0], [21300.0, 2.0], [20900.0, 3.0], [22100.0, 3.0], [21700.0, 1.0], [22500.0, 1.0], [22900.0, 2.0], [24100.0, 5.0], [24900.0, 2.0], [25300.0, 1.0], [25700.0, 4.0], [26100.0, 2.0], [26500.0, 1.0], [26900.0, 1.0], [27300.0, 1.0], [27700.0, 3.0], [28500.0, 2.0], [29300.0, 3.0], [28900.0, 2.0], [30500.0, 4.0], [30100.0, 3.0], [31700.0, 1.0], [31300.0, 2.0], [30900.0, 1.0], [32500.0, 4.0], [33000.0, 1.0], [33800.0, 2.0], [35400.0, 4.0], [38600.0, 7.0], [37000.0, 5.0], [37800.0, 1.0], [39400.0, 4.0], [40200.0, 3.0], [41000.0, 1.0], [43400.0, 1.0], [45000.0, 1.0], [44200.0, 1.0], [45800.0, 4.0], [46600.0, 4.0], [48200.0, 1.0], [49000.0, 1.0], [47400.0, 1.0], [50600.0, 4.0], [49800.0, 3.0], [51400.0, 2.0], [53000.0, 1.0], [52200.0, 1.0], [53800.0, 2.0], [55400.0, 4.0], [57000.0, 3.0], [56200.0, 1.0], [57800.0, 4.0], [58600.0, 2.0], [60200.0, 3.0], [63400.0, 1.0], [65000.0, 1.0], [33300.0, 3.0], [34100.0, 1.0], [35700.0, 3.0], [36500.0, 1.0], [38900.0, 3.0], [37300.0, 2.0], [38100.0, 2.0], [39700.0, 1.0], [42900.0, 3.0], [41300.0, 4.0], [42100.0, 2.0], [44500.0, 1.0], [46100.0, 4.0], [45300.0, 5.0], [46900.0, 3.0], [47700.0, 1.0], [48500.0, 3.0], [50900.0, 4.0], [49300.0, 1.0], [50100.0, 3.0], [52500.0, 2.0], [51700.0, 3.0], [54100.0, 2.0], [54900.0, 3.0], [57300.0, 1.0], [55700.0, 1.0], [58900.0, 3.0], [61300.0, 1.0], [59700.0, 1.0], [60500.0, 2.0], [62900.0, 1.0], [62100.0, 1.0], [65300.0, 1.0], [8300.0, 5.0], [8500.0, 6.0], [9100.0, 3.0], [8900.0, 7.0], [9700.0, 3.0], [9300.0, 3.0], [9500.0, 3.0], [9900.0, 2.0], [10500.0, 2.0], [10300.0, 3.0], [10700.0, 3.0], [11100.0, 5.0], [10900.0, 2.0], [11700.0, 5.0], [11500.0, 8.0], [11300.0, 7.0], [12100.0, 3.0], [11900.0, 3.0], [12700.0, 4.0], [12300.0, 13.0], [12500.0, 5.0], [13100.0, 8.0], [13300.0, 8.0], [12900.0, 8.0], [13700.0, 8.0], [13500.0, 10.0], [13900.0, 3.0], [14300.0, 4.0], [14100.0, 2.0], [14700.0, 2.0], [14500.0, 3.0], [15100.0, 4.0], [14900.0, 2.0], [15700.0, 3.0], [15500.0, 1.0], [16300.0, 5.0], [15900.0, 1.0], [16100.0, 3.0], [16600.0, 2.0], [17400.0, 1.0], [17000.0, 2.0], [18200.0, 2.0], [17800.0, 3.0], [19400.0, 3.0], [19000.0, 2.0], [18600.0, 1.0], [20200.0, 3.0], [19800.0, 3.0], [21400.0, 2.0], [20600.0, 2.0], [21000.0, 2.0], [22200.0, 1.0], [23400.0, 6.0], [22600.0, 4.0], [23000.0, 1.0], [23800.0, 1.0], [24200.0, 1.0], [25400.0, 3.0], [24600.0, 2.0], [25000.0, 1.0], [26600.0, 2.0], [25800.0, 1.0], [27000.0, 6.0], [27400.0, 1.0], [28200.0, 2.0], [27800.0, 4.0], [29400.0, 1.0], [29000.0, 1.0], [30200.0, 2.0], [29800.0, 3.0], [30600.0, 1.0], [31400.0, 3.0], [31000.0, 1.0], [31800.0, 3.0], [32600.0, 5.0], [32200.0, 1.0], [34000.0, 2.0], [34800.0, 4.0], [33200.0, 2.0], [36400.0, 5.0], [35600.0, 4.0], [37200.0, 1.0], [38800.0, 2.0], [38000.0, 1.0], [40400.0, 3.0], [39600.0, 2.0], [42000.0, 1.0], [42800.0, 3.0], [41200.0, 5.0], [43600.0, 2.0], [44400.0, 1.0], [46800.0, 1.0], [45200.0, 2.0], [48400.0, 6.0], [47600.0, 2.0], [49200.0, 1.0], [50000.0, 1.0], [52400.0, 1.0], [53200.0, 3.0], [51600.0, 3.0], [54800.0, 1.0], [54000.0, 3.0], [56400.0, 2.0], [55600.0, 4.0], [57200.0, 1.0], [60400.0, 1.0], [62800.0, 2.0], [62000.0, 1.0], [63600.0, 2.0], [64400.0, 1.0], [34300.0, 1.0], [33500.0, 1.0], [35100.0, 5.0], [35900.0, 2.0], [38300.0, 3.0], [37500.0, 2.0], [39900.0, 2.0], [39100.0, 3.0], [40700.0, 1.0], [41500.0, 1.0], [42300.0, 1.0], [43900.0, 4.0], [44700.0, 2.0], [43100.0, 5.0], [47100.0, 3.0], [45500.0, 2.0], [46300.0, 1.0], [47900.0, 3.0], [48700.0, 1.0], [49500.0, 2.0], [51100.0, 3.0], [50300.0, 1.0], [52700.0, 1.0], [51900.0, 2.0], [53500.0, 2.0], [55100.0, 1.0], [56700.0, 1.0], [58300.0, 2.0], [59100.0, 1.0], [57500.0, 1.0], [59900.0, 2.0], [61500.0, 1.0], [17100.0, 2.0], [16700.0, 3.0], [18300.0, 5.0], [17500.0, 2.0], [17900.0, 1.0], [18700.0, 4.0], [19900.0, 2.0], [20300.0, 1.0], [19500.0, 1.0], [21100.0, 1.0], [21500.0, 1.0], [20700.0, 2.0], [22300.0, 2.0], [23100.0, 3.0], [23500.0, 2.0], [23900.0, 2.0], [24300.0, 3.0], [25100.0, 5.0], [24700.0, 3.0], [25500.0, 1.0], [26300.0, 1.0], [27500.0, 4.0], [26700.0, 2.0], [27100.0, 1.0], [27900.0, 1.0], [28300.0, 2.0], [29500.0, 3.0], [28700.0, 2.0], [29900.0, 2.0], [30300.0, 2.0], [30700.0, 1.0], [31500.0, 4.0], [31100.0, 4.0], [31900.0, 2.0], [32300.0, 3.0], [32700.0, 1.0], [34200.0, 2.0], [33400.0, 1.0], [36600.0, 4.0], [35800.0, 4.0], [35000.0, 3.0], [37400.0, 2.0], [38200.0, 3.0], [39000.0, 1.0], [40600.0, 1.0], [42200.0, 4.0], [43000.0, 2.0], [41400.0, 2.0], [43800.0, 4.0], [44600.0, 1.0], [45400.0, 5.0], [46200.0, 3.0], [47000.0, 1.0], [47800.0, 3.0], [48600.0, 1.0], [50200.0, 2.0], [49400.0, 3.0], [51000.0, 1.0], [51800.0, 4.0], [52600.0, 3.0], [55000.0, 3.0], [53400.0, 2.0], [54200.0, 1.0], [56600.0, 1.0], [55800.0, 5.0], [58200.0, 5.0], [57400.0, 3.0], [61400.0, 2.0], [60600.0, 1.0], [59800.0, 3.0], [62200.0, 1.0], [63800.0, 2.0]], "isOverall": false, "label": "login ", "isController": false}, {"data": [[68300.0, 3.0], [66700.0, 1.0], [73100.0, 3.0], [69900.0, 2.0], [71500.0, 1.0], [76300.0, 6.0], [74700.0, 1.0], [81100.0, 8.0], [77900.0, 2.0], [79500.0, 2.0], [82700.0, 4.0], [85900.0, 1.0], [89100.0, 1.0], [33700.0, 2.0], [34500.0, 1.0], [35300.0, 2.0], [36100.0, 3.0], [37700.0, 3.0], [36900.0, 1.0], [38500.0, 3.0], [39300.0, 3.0], [40100.0, 2.0], [40900.0, 4.0], [41700.0, 4.0], [42500.0, 2.0], [43300.0, 4.0], [44900.0, 2.0], [44100.0, 2.0], [45700.0, 1.0], [46500.0, 2.0], [48100.0, 2.0], [47300.0, 1.0], [50500.0, 1.0], [49700.0, 4.0], [52100.0, 3.0], [52900.0, 5.0], [51300.0, 1.0], [54500.0, 5.0], [53700.0, 1.0], [56100.0, 1.0], [56900.0, 2.0], [55300.0, 1.0], [59300.0, 6.0], [57700.0, 4.0], [58500.0, 3.0], [60100.0, 3.0], [60900.0, 1.0], [61700.0, 2.0], [62500.0, 2.0], [63300.0, 1.0], [64900.0, 2.0], [64100.0, 2.0], [67400.0, 4.0], [69000.0, 1.0], [65800.0, 1.0], [70600.0, 4.0], [72200.0, 2.0], [75400.0, 3.0], [77000.0, 3.0], [73800.0, 1.0], [80200.0, 3.0], [81800.0, 1.0], [78600.0, 1.0], [85000.0, 2.0], [83400.0, 2.0], [86600.0, 1.0], [91400.0, 1.0], [66500.0, 1.0], [68100.0, 2.0], [4600.0, 1.0], [72900.0, 5.0], [71300.0, 4.0], [69700.0, 4.0], [76100.0, 2.0], [74500.0, 2.0], [79300.0, 4.0], [80900.0, 2.0], [85700.0, 2.0], [82500.0, 5.0], [84100.0, 6.0], [5400.0, 1.0], [87300.0, 1.0], [90500.0, 3.0], [6000.0, 2.0], [6100.0, 1.0], [9000.0, 2.0], [9800.0, 1.0], [12400.0, 1.0], [12800.0, 1.0], [15600.0, 1.0], [19600.0, 1.0], [20000.0, 1.0], [24000.0, 2.0], [24800.0, 2.0], [25600.0, 1.0], [26000.0, 1.0], [26400.0, 1.0], [26800.0, 3.0], [27600.0, 4.0], [28400.0, 2.0], [29200.0, 3.0], [29600.0, 3.0], [30000.0, 4.0], [30800.0, 5.0], [31600.0, 2.0], [32400.0, 2.0], [32000.0, 1.0], [33600.0, 2.0], [32800.0, 1.0], [34400.0, 3.0], [35200.0, 2.0], [36000.0, 3.0], [36800.0, 2.0], [38400.0, 1.0], [37600.0, 2.0], [39200.0, 4.0], [40800.0, 2.0], [40000.0, 2.0], [41600.0, 4.0], [42400.0, 6.0], [44000.0, 1.0], [44800.0, 1.0], [45600.0, 6.0], [46400.0, 3.0], [48000.0, 2.0], [48800.0, 3.0], [47200.0, 2.0], [49600.0, 6.0], [50400.0, 2.0], [52800.0, 2.0], [51200.0, 3.0], [52000.0, 1.0], [53600.0, 1.0], [56800.0, 2.0], [57600.0, 3.0], [58400.0, 4.0], [59200.0, 1.0], [60000.0, 1.0], [60800.0, 1.0], [61600.0, 2.0], [62400.0, 4.0], [63200.0, 3.0], [64000.0, 2.0], [64800.0, 3.0], [68800.0, 2.0], [65600.0, 4.0], [67200.0, 1.0], [73600.0, 3.0], [70400.0, 1.0], [72000.0, 4.0], [75200.0, 2.0], [76800.0, 2.0], [80000.0, 2.0], [81600.0, 1.0], [78400.0, 1.0], [84800.0, 2.0], [83200.0, 3.0], [88000.0, 1.0], [89600.0, 1.0], [91200.0, 1.0], [67100.0, 3.0], [68700.0, 5.0], [71900.0, 1.0], [70300.0, 2.0], [75100.0, 3.0], [76700.0, 1.0], [81500.0, 2.0], [79900.0, 3.0], [78300.0, 1.0], [83100.0, 3.0], [84700.0, 3.0], [89500.0, 1.0], [86300.0, 2.0], [91100.0, 1.0], [33900.0, 4.0], [33100.0, 3.0], [36300.0, 2.0], [35500.0, 1.0], [37100.0, 2.0], [38700.0, 2.0], [37900.0, 4.0], [40300.0, 3.0], [39500.0, 1.0], [41100.0, 4.0], [41900.0, 1.0], [42700.0, 2.0], [44300.0, 3.0], [43500.0, 2.0], [45100.0, 1.0], [46700.0, 1.0], [45900.0, 1.0], [48300.0, 2.0], [47500.0, 3.0], [49100.0, 4.0], [50700.0, 6.0], [49900.0, 3.0], [53100.0, 2.0], [52300.0, 5.0], [53900.0, 3.0], [54700.0, 2.0], [55500.0, 3.0], [57100.0, 2.0], [56300.0, 1.0], [58700.0, 2.0], [57900.0, 2.0], [61100.0, 4.0], [60300.0, 3.0], [59500.0, 1.0], [61900.0, 3.0], [62700.0, 3.0], [64300.0, 1.0], [65100.0, 5.0], [63500.0, 3.0], [69400.0, 2.0], [66200.0, 2.0], [67800.0, 1.0], [71000.0, 5.0], [72600.0, 7.0], [75800.0, 2.0], [77400.0, 2.0], [74200.0, 1.0], [80600.0, 5.0], [79000.0, 2.0], [82200.0, 3.0], [83800.0, 3.0], [85400.0, 5.0], [91800.0, 2.0], [66900.0, 4.0], [68500.0, 1.0], [73300.0, 3.0], [70100.0, 2.0], [71700.0, 2.0], [74900.0, 2.0], [76500.0, 3.0], [78100.0, 3.0], [79700.0, 3.0], [81300.0, 5.0], [84500.0, 3.0], [82900.0, 3.0], [87700.0, 1.0], [86100.0, 2.0], [19300.0, 1.0], [22900.0, 1.0], [23300.0, 2.0], [25300.0, 1.0], [26100.0, 2.0], [26500.0, 1.0], [26900.0, 3.0], [28100.0, 2.0], [27700.0, 1.0], [28500.0, 2.0], [28900.0, 3.0], [29700.0, 6.0], [30100.0, 5.0], [31300.0, 5.0], [31700.0, 3.0], [30900.0, 1.0], [32500.0, 4.0], [32100.0, 4.0], [33000.0, 3.0], [34600.0, 4.0], [33800.0, 1.0], [35400.0, 2.0], [36200.0, 1.0], [37000.0, 1.0], [37800.0, 4.0], [40200.0, 3.0], [39400.0, 5.0], [41000.0, 2.0], [42600.0, 2.0], [41800.0, 1.0], [43400.0, 1.0], [45000.0, 2.0], [45800.0, 1.0], [46600.0, 4.0], [48200.0, 2.0], [47400.0, 4.0], [49800.0, 1.0], [52200.0, 2.0], [53000.0, 4.0], [53800.0, 6.0], [54600.0, 1.0], [55400.0, 3.0], [56200.0, 2.0], [58600.0, 2.0], [57800.0, 2.0], [60200.0, 2.0], [61000.0, 3.0], [62600.0, 3.0], [64200.0, 3.0], [65000.0, 2.0], [67600.0, 4.0], [66000.0, 1.0], [69200.0, 3.0], [70800.0, 3.0], [72400.0, 3.0], [77200.0, 5.0], [74000.0, 2.0], [75600.0, 1.0], [78800.0, 1.0], [80400.0, 4.0], [82000.0, 4.0], [85200.0, 2.0], [83600.0, 1.0], [90000.0, 1.0], [88400.0, 1.0], [65900.0, 6.0], [69100.0, 2.0], [67500.0, 1.0], [70700.0, 4.0], [72300.0, 1.0], [75500.0, 3.0], [77100.0, 3.0], [73900.0, 2.0], [81900.0, 6.0], [80300.0, 5.0], [78700.0, 2.0], [85100.0, 3.0], [83500.0, 1.0], [88300.0, 1.0], [86700.0, 2.0], [91500.0, 1.0], [34100.0, 4.0], [33300.0, 2.0], [35700.0, 1.0], [36500.0, 2.0], [38100.0, 3.0], [38900.0, 1.0], [40500.0, 5.0], [42900.0, 4.0], [42100.0, 3.0], [41300.0, 4.0], [43700.0, 2.0], [44500.0, 2.0], [45300.0, 5.0], [46100.0, 3.0], [46900.0, 2.0], [47700.0, 2.0], [48500.0, 2.0], [49300.0, 2.0], [50900.0, 2.0], [50100.0, 3.0], [51700.0, 2.0], [52500.0, 2.0], [54100.0, 4.0], [54900.0, 2.0], [53300.0, 1.0], [56500.0, 2.0], [57300.0, 2.0], [55700.0, 3.0], [58100.0, 1.0], [58900.0, 3.0], [60500.0, 2.0], [59700.0, 2.0], [62900.0, 4.0], [62100.0, 2.0], [64500.0, 4.0], [63700.0, 3.0], [65300.0, 2.0], [66600.0, 2.0], [68200.0, 3.0], [69800.0, 3.0], [73000.0, 3.0], [71400.0, 4.0], [77800.0, 2.0], [74600.0, 2.0], [76200.0, 2.0], [81000.0, 3.0], [79400.0, 4.0], [84200.0, 2.0], [85800.0, 2.0], [82600.0, 2.0], [87400.0, 2.0], [92200.0, 1.0], [67300.0, 4.0], [65700.0, 4.0], [68900.0, 1.0], [72100.0, 3.0], [70500.0, 1.0], [73700.0, 1.0], [75300.0, 2.0], [76900.0, 1.0], [78500.0, 4.0], [80100.0, 5.0], [83300.0, 1.0], [84900.0, 4.0], [86500.0, 2.0], [88100.0, 1.0], [89700.0, 1.0], [91300.0, 1.0], [8500.0, 1.0], [9500.0, 1.0], [11100.0, 1.0], [12100.0, 2.0], [14300.0, 1.0], [14500.0, 1.0], [15700.0, 2.0], [18600.0, 1.0], [19800.0, 1.0], [23400.0, 1.0], [23000.0, 2.0], [24600.0, 1.0], [25400.0, 1.0], [26600.0, 2.0], [27400.0, 1.0], [28200.0, 1.0], [27800.0, 1.0], [29400.0, 4.0], [29000.0, 1.0], [30600.0, 4.0], [29800.0, 4.0], [30200.0, 2.0], [31400.0, 2.0], [32200.0, 2.0], [31800.0, 6.0], [32600.0, 1.0], [33200.0, 2.0], [34800.0, 3.0], [34000.0, 1.0], [35600.0, 5.0], [38000.0, 3.0], [38800.0, 3.0], [37200.0, 1.0], [40400.0, 1.0], [39600.0, 3.0], [42800.0, 1.0], [42000.0, 3.0], [41200.0, 1.0], [44400.0, 2.0], [46000.0, 3.0], [45200.0, 4.0], [46800.0, 4.0], [47600.0, 4.0], [48400.0, 3.0], [50000.0, 3.0], [49200.0, 6.0], [50800.0, 2.0], [51600.0, 4.0], [52400.0, 2.0], [53200.0, 4.0], [54800.0, 1.0], [56400.0, 6.0], [57200.0, 2.0], [58000.0, 5.0], [59600.0, 2.0], [61200.0, 4.0], [60400.0, 1.0], [62000.0, 1.0], [62800.0, 1.0], [64400.0, 1.0], [63600.0, 3.0], [66400.0, 6.0], [68000.0, 3.0], [69600.0, 3.0], [71200.0, 2.0], [72800.0, 2.0], [76000.0, 2.0], [77600.0, 1.0], [80800.0, 6.0], [79200.0, 2.0], [82400.0, 4.0], [85600.0, 3.0], [84000.0, 2.0], [87200.0, 1.0], [67900.0, 5.0], [69500.0, 2.0], [66300.0, 1.0], [71100.0, 3.0], [72700.0, 1.0], [75900.0, 3.0], [77500.0, 5.0], [74300.0, 2.0], [79100.0, 4.0], [80700.0, 2.0], [83900.0, 2.0], [82300.0, 3.0], [85500.0, 3.0], [91900.0, 1.0], [90300.0, 1.0], [33500.0, 1.0], [35100.0, 5.0], [35900.0, 3.0], [36700.0, 1.0], [38300.0, 5.0], [37500.0, 1.0], [40700.0, 4.0], [39900.0, 3.0], [39100.0, 2.0], [41500.0, 3.0], [42300.0, 1.0], [43100.0, 2.0], [44700.0, 3.0], [43900.0, 1.0], [46300.0, 2.0], [47100.0, 1.0], [48700.0, 4.0], [47900.0, 1.0], [49500.0, 2.0], [50300.0, 1.0], [51100.0, 3.0], [52700.0, 3.0], [51900.0, 2.0], [53500.0, 1.0], [55100.0, 1.0], [55900.0, 1.0], [59100.0, 2.0], [57500.0, 2.0], [58300.0, 1.0], [59900.0, 1.0], [60700.0, 2.0], [61500.0, 2.0], [63100.0, 3.0], [62300.0, 2.0], [64700.0, 2.0], [63900.0, 4.0], [65500.0, 3.0], [67000.0, 3.0], [68600.0, 2.0], [73400.0, 4.0], [70200.0, 2.0], [71800.0, 1.0], [75000.0, 2.0], [76600.0, 2.0], [81400.0, 4.0], [79800.0, 5.0], [78200.0, 2.0], [83000.0, 1.0], [84600.0, 3.0], [86200.0, 1.0], [87800.0, 1.0], [91000.0, 1.0], [66100.0, 3.0], [69300.0, 3.0], [67700.0, 1.0], [70900.0, 2.0], [72500.0, 1.0], [77300.0, 3.0], [74100.0, 4.0], [75700.0, 1.0], [80500.0, 5.0], [78900.0, 3.0], [83700.0, 6.0], [82100.0, 3.0], [85300.0, 2.0], [88500.0, 1.0], [21100.0, 1.0], [21500.0, 1.0], [23100.0, 1.0], [23500.0, 2.0], [24300.0, 1.0], [25500.0, 1.0], [25900.0, 1.0], [26300.0, 1.0], [27500.0, 2.0], [26700.0, 2.0], [27100.0, 2.0], [27900.0, 1.0], [28300.0, 1.0], [29100.0, 4.0], [28700.0, 2.0], [29500.0, 1.0], [29900.0, 3.0], [30300.0, 2.0], [31100.0, 3.0], [31500.0, 2.0], [31900.0, 3.0], [32700.0, 2.0], [32300.0, 2.0], [33400.0, 2.0], [34200.0, 1.0], [36600.0, 3.0], [35000.0, 5.0], [35800.0, 1.0], [37400.0, 2.0], [38200.0, 3.0], [39000.0, 3.0], [40600.0, 4.0], [39800.0, 1.0], [41400.0, 5.0], [42200.0, 2.0], [44600.0, 4.0], [43800.0, 2.0], [46200.0, 5.0], [45400.0, 3.0], [47000.0, 1.0], [47800.0, 2.0], [50200.0, 2.0], [51000.0, 2.0], [51800.0, 2.0], [52600.0, 3.0], [54200.0, 1.0], [55000.0, 4.0], [53400.0, 3.0], [55800.0, 4.0], [59000.0, 3.0], [57400.0, 2.0], [58200.0, 3.0], [59800.0, 5.0], [60600.0, 3.0], [61400.0, 2.0], [62200.0, 4.0], [63000.0, 1.0], [65400.0, 4.0], [64600.0, 4.0], [63800.0, 2.0], [68400.0, 5.0], [66800.0, 2.0], [73200.0, 4.0], [71600.0, 3.0], [70000.0, 1.0], [74800.0, 1.0], [76400.0, 2.0], [79600.0, 4.0], [81200.0, 1.0], [82800.0, 2.0], [86000.0, 1.0], [89200.0, 1.0], [90800.0, 1.0]], "isOverall": false, "label": "logout", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 92200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2962.0, "series": [{"data": [[0.0, 1.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 37.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2962.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 51.5, "minX": 1.66735188E12, "maxY": 150.0, "series": [{"data": [[1.66735206E12, 150.0], [1.66735236E12, 150.0], [1.66735266E12, 141.20851063829784], [1.667352E12, 150.0], [1.66735212E12, 150.0], [1.66735242E12, 150.0], [1.66735272E12, 51.5], [1.66735254E12, 150.0], [1.66735188E12, 130.59925093632955], [1.66735218E12, 150.0], [1.66735248E12, 150.0], [1.6673523E12, 150.0], [1.6673526E12, 149.76804123711344], [1.66735194E12, 150.0], [1.66735224E12, 150.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66735272E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 570.0, "minX": 1.0, "maxY": 82647.0, "series": [{"data": [[32.0, 1237.0], [34.0, 584.0], [35.0, 618.3333333333334], [36.0, 648.5], [38.0, 622.0], [42.0, 599.3333333333334], [43.0, 570.0], [46.0, 667.0], [48.0, 634.0], [50.0, 620.5], [51.0, 645.0], [52.0, 652.0], [110.0, 4318.0], [113.0, 4516.0], [116.0, 4595.0], [143.0, 7238.0], [142.0, 6013.5], [141.0, 4587.666666666667], [140.0, 3510.5], [150.0, 27603.51136363632], [149.0, 31382.0], [147.0, 47036.5], [146.0, 54189.0], [145.0, 30709.61864406778], [28.0, 1020.25], [29.0, 1033.0], [30.0, 1595.0], [31.0, 1528.5714285714287]], "isOverall": false, "label": "login ", "isController": false}, {"data": [[146.20199999999983, 26969.440000000002]], "isOverall": false, "label": "login -Aggregated", "isController": false}, {"data": [[2.0, 75520.0], [3.0, 75459.0], [4.0, 75141.0], [5.0, 73621.0], [6.0, 73239.0], [7.0, 72930.0], [8.0, 72659.0], [9.0, 72643.0], [10.0, 71686.0], [11.0, 73930.0], [12.0, 73479.0], [13.0, 73120.0], [14.0, 72871.0], [15.0, 71732.0], [16.0, 71358.0], [17.0, 71325.0], [18.0, 70929.0], [19.0, 70799.0], [20.0, 69492.0], [21.0, 69333.0], [22.0, 69192.0], [23.0, 68723.0], [24.0, 68487.0], [25.0, 67718.0], [26.0, 67231.0], [27.0, 66993.0], [28.0, 66907.0], [29.0, 66320.0], [30.0, 66709.0], [31.0, 68348.0], [33.0, 67610.0], [32.0, 68084.0], [35.0, 67049.0], [34.0, 67349.0], [37.0, 65646.0], [36.0, 65978.0], [39.0, 65307.0], [38.0, 65473.0], [41.0, 64876.0], [40.0, 65156.0], [43.0, 65935.0], [42.0, 65176.0], [45.0, 65012.0], [44.0, 64211.0], [47.0, 63938.0], [46.0, 64610.0], [49.0, 63202.0], [48.0, 63651.0], [51.0, 62443.0], [50.0, 62783.0], [53.0, 65578.0], [52.0, 65782.0], [55.0, 59599.0], [54.0, 59886.0], [57.0, 58590.0], [56.0, 59330.0], [59.0, 57592.0], [58.0, 58231.0], [61.0, 56877.0], [60.0, 57159.0], [63.0, 55724.0], [62.0, 55847.0], [67.0, 53452.0], [66.0, 54518.0], [65.0, 54891.0], [64.0, 55136.0], [71.0, 52081.0], [70.0, 52324.0], [69.0, 53003.0], [68.0, 53271.0], [75.0, 50859.0], [74.0, 51208.0], [73.0, 51218.0], [72.0, 51177.0], [79.0, 49792.0], [78.0, 49248.0], [77.0, 51153.0], [76.0, 50716.0], [83.0, 47310.0], [82.0, 48784.0], [81.0, 49207.0], [80.0, 49665.0], [87.0, 46131.0], [86.0, 46290.0], [85.0, 46631.0], [84.0, 46858.0], [91.0, 45638.0], [90.0, 46326.0], [89.0, 46623.0], [88.0, 47136.0], [95.0, 43539.0], [94.0, 43706.0], [93.0, 48200.0], [92.0, 45435.0], [99.0, 22760.0], [98.0, 41264.0], [97.0, 42442.0], [96.0, 42958.0], [103.0, 38855.0], [102.0, 40132.0], [101.0, 40598.0], [100.0, 40639.0], [107.0, 40576.0], [106.0, 39957.0], [105.0, 38338.0], [104.0, 39242.0], [111.0, 21679.0], [110.0, 38038.0], [109.0, 38146.0], [108.0, 39126.0], [115.0, 35111.0], [114.0, 35198.0], [113.0, 36107.0], [112.0, 37509.0], [119.0, 33221.0], [118.0, 34151.0], [117.0, 34462.0], [116.0, 34635.0], [120.0, 14851.333333333334], [122.0, 19131.0], [123.0, 31476.0], [121.0, 32368.0], [127.0, 29729.0], [126.0, 29808.0], [125.0, 30131.0], [124.0, 31171.0], [135.0, 67372.0], [134.0, 54507.0], [133.0, 37739.0], [132.0, 33060.0], [131.0, 39507.0], [130.0, 28360.0], [129.0, 30115.0], [128.0, 29533.0], [143.0, 80162.0], [142.0, 80385.0], [141.0, 80785.0], [140.0, 82211.0], [139.0, 81330.0], [138.0, 81536.0], [137.0, 82647.0], [136.0, 82173.0], [150.0, 56896.268562401296], [149.0, 49529.5], [148.0, 53940.14285714286], [147.0, 61691.33333333333], [146.0, 69035.38461538462], [145.0, 76320.3870967742], [144.0, 81995.0], [1.0, 74177.0]], "isOverall": false, "label": "logout", "isController": false}, {"data": [[142.23933333333312, 57126.30866666664]], "isOverall": false, "label": "logout-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 150.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1484.1, "minX": 1.66735188E12, "maxY": 642960.1166666667, "series": [{"data": [[1.66735206E12, 568560.0833333334], [1.66735236E12, 619320.5833333334], [1.66735266E12, 591591.8833333333], [1.667352E12, 555726.4166666666], [1.66735212E12, 591632.8833333333], [1.66735242E12, 585914.2666666667], [1.66735272E12, 590305.9], [1.66735254E12, 642960.1166666667], [1.66735188E12, 441682.36666666664], [1.66735218E12, 567274.1833333333], [1.66735248E12, 585956.0166666667], [1.6673523E12, 568528.55], [1.6673526E12, 608525.2166666667], [1.66735194E12, 609021.4], [1.66735224E12, 568527.1833333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66735206E12, 4270.316666666667], [1.66735236E12, 1713.7833333333333], [1.66735266E12, 4093.116666666667], [1.667352E12, 1671.4333333333334], [1.66735212E12, 4171.583333333333], [1.66735242E12, 4294.35], [1.66735272E12, 1484.1], [1.66735254E12, 2772.4333333333334], [1.66735188E12, 3666.0833333333335], [1.66735218E12, 1661.3], [1.66735248E12, 4392.433333333333], [1.6673523E12, 4211.466666666666], [1.6673526E12, 3273.633333333333], [1.66735194E12, 3787.5], [1.66735224E12, 4211.466666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66735272E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 8747.853403141355, "minX": 1.66735188E12, "maxY": 66621.69387755104, "series": [{"data": [[1.66735206E12, 30679.606896551737], [1.66735236E12, 22184.75], [1.66735266E12, 29567.3007518797], [1.667352E12, 13452.214285714286], [1.66735212E12, 31458.627737226256], [1.66735242E12, 28526.16666666667], [1.66735254E12, 43534.33898305083], [1.66735188E12, 8747.853403141355], [1.66735218E12, 20206.833333333336], [1.66735248E12, 27871.416107382556], [1.6673523E12, 30890.901408450693], [1.6673526E12, 17098.67415730336], [1.66735194E12, 31922.10370370369], [1.66735224E12, 31248.549295774636]], "isOverall": false, "label": "login ", "isController": false}, {"data": [[1.66735206E12, 63699.908163265325], [1.66735236E12, 53204.88785046727], [1.66735266E12, 61056.392156862756], [1.667352E12, 51084.32291666667], [1.66735212E12, 66363.18627450979], [1.66735242E12, 56374.712871287156], [1.66735272E12, 59668.80392156863], [1.66735254E12, 54811.47747747746], [1.66735188E12, 22826.23684210526], [1.66735218E12, 51290.193877551], [1.66735248E12, 64687.554455445534], [1.6673523E12, 66621.69387755104], [1.6673526E12, 53706.895238095225], [1.66735194E12, 61220.66666666668], [1.66735224E12, 62223.704081632626]], "isOverall": false, "label": "logout", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66735272E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 8747.67015706806, "minX": 1.66735188E12, "maxY": 66331.56122448981, "series": [{"data": [[1.66735206E12, 30679.565517241368], [1.66735236E12, 22184.75], [1.66735266E12, 29567.293233082702], [1.667352E12, 13452.214285714286], [1.66735212E12, 31458.59854014597], [1.66735242E12, 28526.159722222226], [1.66735254E12, 43534.33898305083], [1.66735188E12, 8747.67015706806], [1.66735218E12, 20206.833333333336], [1.66735248E12, 27871.40268456376], [1.6673523E12, 30890.901408450693], [1.6673526E12, 17098.67415730336], [1.66735194E12, 31922.07407407406], [1.66735224E12, 31248.507042253535]], "isOverall": false, "label": "login ", "isController": false}, {"data": [[1.66735206E12, 63412.418367346945], [1.66735236E12, 52896.448598130846], [1.66735266E12, 60698.41176470587], [1.667352E12, 50787.374999999985], [1.66735212E12, 66042.0392156863], [1.66735242E12, 56154.56435643564], [1.66735272E12, 59405.470588235294], [1.66735254E12, 54402.90990990991], [1.66735188E12, 22507.5], [1.66735218E12, 50940.43877551021], [1.66735248E12, 64384.84158415839], [1.6673523E12, 66331.56122448981], [1.6673526E12, 53330.685714285704], [1.66735194E12, 60881.88571428571], [1.66735224E12, 61908.959183673476]], "isOverall": false, "label": "logout", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66735272E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.66735188E12, "maxY": 14077.561224489791, "series": [{"data": [[1.66735206E12, 87.61379310344827], [1.66735236E12, 0.0], [1.66735266E12, 76.96992481203009], [1.667352E12, 0.0], [1.66735212E12, 83.35766423357659], [1.66735242E12, 74.13888888888891], [1.66735254E12, 9.593220338983052], [1.66735188E12, 238.7120418848167], [1.66735218E12, 0.0], [1.66735248E12, 77.8187919463087], [1.6673523E12, 80.07042253521132], [1.6673526E12, 128.78651685393254], [1.66735194E12, 99.77777777777776], [1.66735224E12, 97.88732394366194]], "isOverall": false, "label": "login ", "isController": false}, {"data": [[1.66735206E12, 13835.816326530618], [1.66735236E12, 3945.953271028039], [1.66735266E12, 13300.921568627447], [1.667352E12, 5794.729166666666], [1.66735212E12, 8950.627450980393], [1.66735242E12, 11617.366336633659], [1.66735272E12, 9165.382352941177], [1.66735254E12, 119.86486486486487], [1.66735188E12, 0.0], [1.66735218E12, 5940.959183673471], [1.66735248E12, 12548.366336633664], [1.6673523E12, 8862.479591836734], [1.6673526E12, 13377.133333333333], [1.66735194E12, 6514.104761904762], [1.66735224E12, 14077.561224489791]], "isOverall": false, "label": "logout", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66735272E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 497.0, "minX": 1.66735188E12, "maxY": 92288.0, "series": [{"data": [[1.66735206E12, 91973.0], [1.66735236E12, 85213.0], [1.66735266E12, 82647.0], [1.667352E12, 85269.0], [1.66735212E12, 85410.0], [1.66735242E12, 87430.0], [1.66735272E12, 75520.0], [1.66735254E12, 79555.0], [1.66735188E12, 35230.0], [1.66735218E12, 85765.0], [1.66735248E12, 84006.0], [1.6673523E12, 86370.0], [1.6673526E12, 85697.0], [1.66735194E12, 83385.0], [1.66735224E12, 92288.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66735206E12, 3250.0], [1.66735236E12, 4654.0], [1.66735266E12, 2808.0], [1.667352E12, 4440.0], [1.66735212E12, 1944.0], [1.66735242E12, 1330.0], [1.66735272E12, 40132.0], [1.66735254E12, 9759.0], [1.66735188E12, 497.0], [1.66735218E12, 8310.0], [1.66735248E12, 1434.0], [1.6673523E12, 2317.0], [1.6673526E12, 2957.0], [1.66735194E12, 3277.0], [1.66735224E12, 2182.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66735206E12, 85563.4], [1.66735236E12, 70056.8], [1.66735266E12, 78336.4], [1.667352E12, 68395.1], [1.66735212E12, 80661.0], [1.66735242E12, 80960.6], [1.66735272E12, 72912.3], [1.66735254E12, 70908.7], [1.66735188E12, 27572.600000000002], [1.66735218E12, 68408.3], [1.66735248E12, 76325.0], [1.6673523E12, 79069.5], [1.6673526E12, 79898.5], [1.66735194E12, 75797.40000000001], [1.66735224E12, 85285.1]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66735206E12, 91590.04000000001], [1.66735236E12, 85210.76], [1.66735266E12, 82197.31999999999], [1.667352E12, 85101.91], [1.66735212E12, 85069.8], [1.66735242E12, 86566.66], [1.66735272E12, 75518.17], [1.66735254E12, 78700.87], [1.66735188E12, 34507.55999999999], [1.66735218E12, 85742.56], [1.66735248E12, 83566.16], [1.6673523E12, 85879.08], [1.6673526E12, 84234.95000000001], [1.66735194E12, 82439.06], [1.66735224E12, 91678.41]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66735206E12, 39352.0], [1.66735236E12, 52330.0], [1.66735266E12, 40167.0], [1.667352E12, 46999.0], [1.66735212E12, 49717.0], [1.66735242E12, 37121.0], [1.66735272E12, 62992.5], [1.66735254E12, 49550.5], [1.66735188E12, 12435.0], [1.66735218E12, 47690.0], [1.66735248E12, 44077.5], [1.6673523E12, 48242.5], [1.6673526E12, 34458.0], [1.66735194E12, 47431.5], [1.66735224E12, 39470.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.66735206E12, 88101.0], [1.66735236E12, 74833.79999999987], [1.66735266E12, 80097.8], [1.667352E12, 82205.34999999999], [1.66735212E12, 83191.0], [1.66735242E12, 83703.2], [1.66735272E12, 73883.65], [1.66735254E12, 73362.3], [1.66735188E12, 30839.8], [1.66735218E12, 81616.39999999998], [1.66735248E12, 80560.0], [1.6673523E12, 81117.4], [1.6673526E12, 81954.0], [1.66735194E12, 80265.4], [1.66735224E12, 89087.54999999999]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66735272E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1223.0, "minX": 1.0, "maxY": 53088.0, "series": [{"data": [[2.0, 52234.0], [32.0, 16403.5], [37.0, 40877.0], [3.0, 51502.5], [49.0, 13247.0], [57.0, 12321.0], [4.0, 45349.5], [5.0, 35654.0], [6.0, 11450.5], [7.0, 8918.0], [8.0, 38843.0], [9.0, 8456.5], [10.0, 35817.5], [11.0, 18097.0], [12.0, 41590.5], [13.0, 14554.0], [14.0, 13281.5], [15.0, 52477.0], [1.0, 53088.0], [16.0, 49031.0], [17.0, 37094.0], [18.0, 32767.5], [19.0, 30476.0], [20.0, 45900.5], [21.0, 43557.0], [22.0, 46380.0], [23.0, 47839.0], [24.0, 48351.0], [25.0, 26739.0], [26.0, 52089.0], [27.0, 1223.0], [28.0, 27734.0], [29.0, 33863.5], [31.0, 29807.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 57.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1223.0, "minX": 1.0, "maxY": 52520.0, "series": [{"data": [[2.0, 51715.0], [32.0, 16403.5], [37.0, 40877.0], [3.0, 51012.5], [49.0, 13247.0], [57.0, 12320.0], [4.0, 44774.5], [5.0, 35654.0], [6.0, 11450.5], [7.0, 8918.0], [8.0, 38843.0], [9.0, 8456.5], [10.0, 35817.5], [11.0, 18097.0], [12.0, 41590.5], [13.0, 14391.0], [14.0, 13281.5], [15.0, 52477.0], [1.0, 52520.0], [16.0, 49031.0], [17.0, 37094.0], [18.0, 32767.5], [19.0, 30476.0], [20.0, 45900.5], [21.0, 43557.0], [22.0, 46379.5], [23.0, 47839.0], [24.0, 48351.0], [25.0, 26739.0], [26.0, 52089.0], [27.0, 1223.0], [28.0, 27734.0], [29.0, 33863.5], [31.0, 29807.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 57.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.8333333333333333, "minX": 1.66735188E12, "maxY": 6.95, "series": [{"data": [[1.66735206E12, 4.05], [1.66735236E12, 1.9166666666666667], [1.66735266E12, 3.1666666666666665], [1.667352E12, 1.8333333333333333], [1.66735212E12, 3.9833333333333334], [1.66735242E12, 4.083333333333333], [1.66735254E12, 2.8333333333333335], [1.66735188E12, 6.95], [1.66735218E12, 1.8333333333333333], [1.66735248E12, 4.166666666666667], [1.6673523E12, 4.0], [1.6673526E12, 3.183333333333333], [1.66735194E12, 4.0], [1.66735224E12, 4.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66735266E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.7, "minX": 1.66735188E12, "maxY": 4.45, "series": [{"data": [[1.66735206E12, 4.05], [1.66735236E12, 1.9166666666666667], [1.66735266E12, 3.9166666666666665], [1.667352E12, 1.8333333333333333], [1.66735212E12, 3.9833333333333334], [1.66735242E12, 4.083333333333333], [1.66735272E12, 1.7], [1.66735254E12, 2.8333333333333335], [1.66735188E12, 4.45], [1.66735218E12, 1.8333333333333333], [1.66735248E12, 4.166666666666667], [1.6673523E12, 4.0], [1.6673526E12, 3.2333333333333334], [1.66735194E12, 4.0], [1.66735224E12, 4.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66735272E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.66735188E12, "maxY": 3.183333333333333, "series": [{"data": [[1.66735206E12, 1.6333333333333333], [1.66735236E12, 1.7833333333333334], [1.66735266E12, 1.7], [1.667352E12, 1.6], [1.66735212E12, 1.7], [1.66735242E12, 1.6833333333333333], [1.66735272E12, 1.7], [1.66735254E12, 1.85], [1.66735188E12, 1.2666666666666666], [1.66735218E12, 1.6333333333333333], [1.66735248E12, 1.6833333333333333], [1.6673523E12, 1.6333333333333333], [1.6673526E12, 1.75], [1.66735194E12, 1.75], [1.66735224E12, 1.6333333333333333]], "isOverall": false, "label": "logout-success", "isController": false}, {"data": [[1.66735206E12, 2.4166666666666665], [1.66735236E12, 0.13333333333333333], [1.66735266E12, 2.216666666666667], [1.667352E12, 0.23333333333333334], [1.66735212E12, 2.283333333333333], [1.66735242E12, 2.4], [1.66735254E12, 0.9833333333333333], [1.66735188E12, 3.183333333333333], [1.66735218E12, 0.2], [1.66735248E12, 2.4833333333333334], [1.6673523E12, 2.3666666666666667], [1.6673526E12, 1.4833333333333334], [1.66735194E12, 2.25], [1.66735224E12, 2.3666666666666667]], "isOverall": false, "label": "login -success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66735272E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.7, "minX": 1.66735188E12, "maxY": 4.45, "series": [{"data": [[1.66735206E12, 4.05], [1.66735236E12, 1.9166666666666667], [1.66735266E12, 3.9166666666666665], [1.667352E12, 1.8333333333333333], [1.66735212E12, 3.9833333333333334], [1.66735242E12, 4.083333333333333], [1.66735272E12, 1.7], [1.66735254E12, 2.8333333333333335], [1.66735188E12, 4.45], [1.66735218E12, 1.8333333333333333], [1.66735248E12, 4.166666666666667], [1.6673523E12, 4.0], [1.6673526E12, 3.2333333333333334], [1.66735194E12, 4.0], [1.66735224E12, 4.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66735272E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

